   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"rt_List.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.rt_inc_qi,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	rt_inc_qi:
  25              	.LFB3:
  26              		.file 1 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h"
   1:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /*----------------------------------------------------------------------------
   2:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      RL-ARM - RTX
   3:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *----------------------------------------------------------------------------
   4:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      Name:    RT_HAL_CM.H
   5:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      Purpose: Hardware Abstraction Layer for Cortex-M definitions
   6:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      Rev.:    V4.70
   7:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *----------------------------------------------------------------------------
   8:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *
   9:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * Copyright (c) 1999-2009 KEIL, 2009-2013 ARM Germany GmbH
  10:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * All rights reserved.
  11:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * Redistribution and use in source and binary forms, with or without
  12:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * modification, are permitted provided that the following conditions are met:
  13:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *  - Redistributions of source code must retain the above copyright
  14:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    notice, this list of conditions and the following disclaimer.
  15:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *  - Redistributions in binary form must reproduce the above copyright
  16:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    notice, this list of conditions and the following disclaimer in the
  17:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    documentation and/or other materials provided with the distribution.
  18:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *  - Neither the name of ARM  nor the names of its contributors may be used 
  19:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    to endorse or promote products derived from this software without 
  20:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    specific prior written permission.
  21:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *
  22:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  23:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  24:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  25:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  26:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  27:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  28:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  29:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  30:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *---------------------------------------------------------------------------*/
  34:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  35:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Definitions */
  36:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define INITIAL_xPSR    0x01000000
  37:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define DEMCR_TRCENA    0x01000000
  38:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_ITMENA      0x00000001
  39:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define MAGIC_WORD      0xE25A2EA5
  40:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  41:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined (__CC_ARM)          /* ARM Compiler */
  42:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  43:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if ((__TARGET_ARCH_7_M || __TARGET_ARCH_7E_M) && !defined(NO_EXCLUSIVE_ACCESS))
  44:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define __USE_EXCLUSIVE_ACCESS
  45:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
  46:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #undef  __USE_EXCLUSIVE_ACCESS
  47:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  48:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  49:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #elif defined (__GNUC__)        /* GNU Compiler */
  50:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  51:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #undef  __USE_EXCLUSIVE_ACCESS
  52:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  53:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined (__CORTEX_M0)
  54:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 1
  55:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
  56:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 0
  57:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  58:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  59:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  60:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 1
  61:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
  62:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 0
  63:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  64:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  65:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __inline inline
  66:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __weak   __attribute__((weak))
  67:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  68:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifndef __CMSIS_GENERIC
  69:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  70:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __attribute__((always_inline)) static inline void __enable_irq(void)
  71:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
  72:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsie i");
  73:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  74:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  75:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __attribute__((always_inline)) static inline U32 __disable_irq(void)
  76:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
  77:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U32 result;
  78:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  79:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("mrs %0, primask" : "=r" (result));
  80:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsid i");
  81:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result & 1);
  82:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  83:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  84:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  85:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  86:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __attribute__(( always_inline)) static inline U8 __clz(U32 value)
  87:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
  88:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U8 result;
  89:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   
  90:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("clz %0, %1" : "=r" (result) : "r" (value));
  91:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result);
  92:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  93:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  94:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #elif defined (__ICCARM__)      /* IAR Compiler */
  95:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  96:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #undef  __USE_EXCLUSIVE_ACCESS
  97:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  98:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if (__CORE__ == __ARM6M__)
  99:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 1
 100:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 101:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 0
 102:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 103:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 104:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined __ARMVFP__
 105:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 1
 106:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 107:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 0
 108:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 109:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 110:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __inline inline
 111:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 112:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifndef __CMSIS_GENERIC
 113:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 114:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** static inline void __enable_irq(void)
 115:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
 116:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsie i");
 117:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 118:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 119:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** static inline U32 __disable_irq(void)
 120:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
 121:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U32 result;
 122:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   
 123:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("mrs %0, primask" : "=r" (result));
 124:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsid i");
 125:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result & 1);
 126:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 127:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 128:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 129:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 130:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** static inline U8 __clz(U32 value)
 131:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
 132:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U8 result;
 133:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   
 134:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("clz %0, %1" : "=r" (result) : "r" (value));
 135:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result);
 136:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 137:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 138:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 139:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 140:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* NVIC registers */
 141:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ST_CTRL    (*((volatile U32 *)0xE000E010))
 142:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ST_RELOAD  (*((volatile U32 *)0xE000E014))
 143:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ST_CURRENT (*((volatile U32 *)0xE000E018))
 144:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ISER         ((volatile U32 *)0xE000E100)
 145:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ICER         ((volatile U32 *)0xE000E180)
 146:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if (__TARGET_ARCH_6S_M)
 147:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_IP           ((volatile U32 *)0xE000E400)
 148:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 149:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_IP           ((volatile U8  *)0xE000E400)
 150:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 151:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_INT_CTRL   (*((volatile U32 *)0xE000ED04))
 152:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_AIR_CTRL   (*((volatile U32 *)0xE000ED0C))
 153:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_SYS_PRI2   (*((volatile U32 *)0xE000ED1C))
 154:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_SYS_PRI3   (*((volatile U32 *)0xE000ED20))
 155:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 156:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_PEND_IRQ()   NVIC_INT_CTRL  = (1<<28)
 157:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_PENDING      ((NVIC_INT_CTRL >> 26) & (1<<2 | 1))
 158:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_UNPEND(fl)   NVIC_INT_CTRL  = (*fl = OS_PENDING) << 25
 159:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_PEND(fl,p)   NVIC_INT_CTRL  = (fl | p<<2) << 26
 160:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_LOCK()       NVIC_ST_CTRL   =  0x0005
 161:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_UNLOCK()     NVIC_ST_CTRL   =  0x0007
 162:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 163:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_PENDING    ((NVIC_INT_CTRL >> 28) & 1)
 164:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_UNPEND(fl) NVIC_INT_CTRL  = (*fl = OS_X_PENDING) << 27
 165:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_PEND(fl,p) NVIC_INT_CTRL  = (fl | p) << 28
 166:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if (__TARGET_ARCH_6S_M)
 167:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_INIT(n)    NVIC_IP[n>>2] |= 0xFF << (8*(n & 0x03)); \
 168:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****                         NVIC_ISER[n>>5] = 1 << (n & 0x1F)
 169:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 170:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_INIT(n)    NVIC_IP[n] = 0xFF; \
 171:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****                         NVIC_ISER[n>>5] = 1 << (n & 0x1F)
 172:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 173:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_LOCK(n)    NVIC_ICER[n>>5] = 1 << (n & 0x1F)
 174:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_UNLOCK(n)  NVIC_ISER[n>>5] = 1 << (n & 0x1F)
 175:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 176:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Core Debug registers */
 177:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define DEMCR           (*((volatile U32 *)0xE000EDFC))
 178:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 179:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* ITM registers */
 180:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_CONTROL     (*((volatile U32 *)0xE0000E80))
 181:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_ENABLE      (*((volatile U32 *)0xE0000E00))
 182:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT30_U32  (*((volatile U32 *)0xE0000078))
 183:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT31_U32  (*((volatile U32 *)0xE000007C))
 184:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT31_U16  (*((volatile U16 *)0xE000007C))
 185:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT31_U8   (*((volatile U8  *)0xE000007C))
 186:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 187:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Variables */
 188:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** extern BIT dbg_msg;
 189:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 190:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Functions */
 191:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifdef __USE_EXCLUSIVE_ACCESS
 192:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_inc(p)     while(__strex((__ldrex(p)+1),p))
 193:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_dec(p)     while(__strex((__ldrex(p)-1),p))
 194:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 195:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_inc(p)     __disable_irq();(*p)++;__enable_irq();
 196:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_dec(p)     __disable_irq();(*p)--;__enable_irq();
 197:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 198:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 199:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __inline static U32 rt_inc_qi (U32 size, U8 *count, U8 *first) {
  27              		.loc 1 199 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 90B4     		push	{r4, r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 7, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46              	.LBB6:
  47              	.LBB7:
  79:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("mrs %0, primask" : "=r" (result));
  48              		.loc 1 79 0
  49              	@ 79 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h" 1
  50 000c EFF31084 		mrs r4, primask
  51              	@ 0 "" 2
  52              		.thumb
  53 0010 7C61     		str	r4, [r7, #20]
  80:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsid i");
  54              		.loc 1 80 0
  55              	@ 80 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h" 1
  56 0012 72B6     		cpsid i
  57              	@ 0 "" 2
  58              		.thumb
  59              	.LBE7:
  60              	.LBE6:
 200:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U32 cnt,c2;
 201:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifdef __USE_EXCLUSIVE_ACCESS
 202:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   do {
 203:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     if ((cnt = __ldrex(count)) == size) {
 204:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****       __clrex();
 205:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****       return (cnt); }
 206:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   } while (__strex(cnt+1, count));
 207:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   do {
 208:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     c2 = (cnt = __ldrex(first)) + 1;
 209:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     if (c2 == size) c2 = 0;
 210:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   } while (__strex(c2, first));
 211:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 212:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __disable_irq();
 213:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   if ((cnt = *count) < size) {
  61              		.loc 1 213 0
  62 0014 BB68     		ldr	r3, [r7, #8]
  63 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  64 0018 FB61     		str	r3, [r7, #28]
  65 001a FA69     		ldr	r2, [r7, #28]
  66 001c FB68     		ldr	r3, [r7, #12]
  67 001e 9A42     		cmp	r2, r3
  68 0020 18D2     		bcs	.L3
 214:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     *count = cnt+1;
  69              		.loc 1 214 0
  70 0022 FB69     		ldr	r3, [r7, #28]
  71 0024 DBB2     		uxtb	r3, r3
  72 0026 03F10103 		add	r3, r3, #1
  73 002a DAB2     		uxtb	r2, r3
  74 002c BB68     		ldr	r3, [r7, #8]
  75 002e 1A70     		strb	r2, [r3, #0]
 215:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     c2 = (cnt = *first) + 1;
  76              		.loc 1 215 0
  77 0030 7B68     		ldr	r3, [r7, #4]
  78 0032 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  79 0034 FB61     		str	r3, [r7, #28]
  80 0036 FB69     		ldr	r3, [r7, #28]
  81 0038 03F10103 		add	r3, r3, #1
  82 003c BB61     		str	r3, [r7, #24]
 216:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     if (c2 == size) c2 = 0;
  83              		.loc 1 216 0
  84 003e BA69     		ldr	r2, [r7, #24]
  85 0040 FB68     		ldr	r3, [r7, #12]
  86 0042 9A42     		cmp	r2, r3
  87 0044 02D1     		bne	.L4
  88              		.loc 1 216 0 is_stmt 0 discriminator 1
  89 0046 4FF00003 		mov	r3, #0
  90 004a BB61     		str	r3, [r7, #24]
  91              	.L4:
 217:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     *first = c2; 
  92              		.loc 1 217 0 is_stmt 1
  93 004c BB69     		ldr	r3, [r7, #24]
  94 004e DAB2     		uxtb	r2, r3
  95 0050 7B68     		ldr	r3, [r7, #4]
  96 0052 1A70     		strb	r2, [r3, #0]
  97              	.L3:
  98              	.LBB8:
  99              	.LBB9:
  72:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsie i");
 100              		.loc 1 72 0
 101              	@ 72 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h" 1
 102 0054 62B6     		cpsie i
 103              	@ 0 "" 2
 104              		.thumb
 105              	.LBE9:
 106              	.LBE8:
 218:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   }
 219:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __enable_irq ();
 220:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 221:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return (cnt);
 107              		.loc 1 221 0
 108 0056 FB69     		ldr	r3, [r7, #28]
 222:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 109              		.loc 1 222 0
 110 0058 1846     		mov	r0, r3
 111 005a 07F12007 		add	r7, r7, #32
 112 005e BD46     		mov	sp, r7
 113 0060 90BC     		pop	{r4, r7}
 114 0062 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE3:
 118              		.comm	os_rdy,24,4
 119              		.comm	os_dly,24,4
 120              		.section	.text.rt_put_prio,"ax",%progbits
 121              		.align	2
 122              		.global	rt_put_prio
 123              		.thumb
 124              		.thumb_func
 126              	rt_put_prio:
 127              	.LFB8:
 128              		.file 2 "../Dave/Generated/src/RTOS001/SRC/rt_List.c"
   1:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*----------------------------------------------------------------------------
   2:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *      RL-ARM - RTX
   3:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *----------------------------------------------------------------------------
   4:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *      Name:    RT_LIST.C
   5:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *      Purpose: Functions for the management of different lists
   6:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *      Rev.:    V4.70
   7:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *----------------------------------------------------------------------------
   8:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *
   9:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * Copyright (c) 1999-2009 KEIL, 2009-2013 ARM Germany GmbH
  10:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * All rights reserved.
  11:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * Redistribution and use in source and binary forms, with or without
  12:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * modification, are permitted provided that the following conditions are met:
  13:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *  - Redistributions of source code must retain the above copyright
  14:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *    notice, this list of conditions and the following disclaimer.
  15:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *  - Redistributions in binary form must reproduce the above copyright
  16:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *    notice, this list of conditions and the following disclaimer in the
  17:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *    documentation and/or other materials provided with the distribution.
  18:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used 
  19:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *    to endorse or promote products derived from this software without 
  20:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *    specific prior written permission.
  21:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *
  22:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  23:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  24:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  25:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  26:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  27:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  28:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  29:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  30:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *---------------------------------------------------------------------------*/
  34:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  35:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "rt_TypeDef.h"
  36:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "RTX_Config.h"
  37:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "rt_System.h"
  38:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "rt_List.h"
  39:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "rt_Task.h"
  40:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "rt_Time.h"
  41:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** #include "rt_HAL_CM.h"
  42:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  43:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*----------------------------------------------------------------------------
  44:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *      Global Variables
  45:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *---------------------------------------------------------------------------*/
  46:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  47:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /* List head of chained ready tasks */
  48:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** struct OS_XCB  os_rdy;
  49:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /* List head of chained delay tasks */
  50:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** struct OS_XCB  os_dly;
  51:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  52:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  53:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*----------------------------------------------------------------------------
  54:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *      Functions
  55:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****  *---------------------------------------------------------------------------*/
  56:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  57:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  58:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_put_prio -----------------------------------*/
  59:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  60:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_put_prio (P_XCB p_CB, P_TCB p_task) {
 129              		.loc 2 60 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 24
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 80B4     		push	{r7}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 87B0     		sub	sp, sp, #28
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 32
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI5:
 143              		.cfi_def_cfa_register 7
 144 0006 7860     		str	r0, [r7, #4]
 145 0008 3960     		str	r1, [r7, #0]
  61:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Put task identified with "p_task" into list ordered by priority.       */
  62:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* "p_CB" points to head of list; list has always an element at end with  */
  63:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* a priority less than "p_task->prio".                                   */
  64:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_CB2;
  65:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   U32 prio;
  66:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   BOOL sem_mbx = __FALSE;
 146              		.loc 2 66 0
 147 000a 4FF00003 		mov	r3, #0
 148 000e 3B61     		str	r3, [r7, #16]
  67:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  68:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
 149              		.loc 2 68 0
 150 0010 7B68     		ldr	r3, [r7, #4]
 151 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 152 0014 022B     		cmp	r3, #2
 153 0016 07D0     		beq	.L7
 154              		.loc 2 68 0 is_stmt 0 discriminator 1
 155 0018 7B68     		ldr	r3, [r7, #4]
 156 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 157 001c 012B     		cmp	r3, #1
 158 001e 03D0     		beq	.L7
 159 0020 7B68     		ldr	r3, [r7, #4]
 160 0022 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 161 0024 032B     		cmp	r3, #3
 162 0026 02D1     		bne	.L8
 163              	.L7:
  69:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     sem_mbx = __TRUE;
 164              		.loc 2 69 0 is_stmt 1
 165 0028 4FF00103 		mov	r3, #1
 166 002c 3B61     		str	r3, [r7, #16]
 167              	.L8:
  70:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
  71:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   prio = p_task->prio;
 168              		.loc 2 71 0
 169 002e 3B68     		ldr	r3, [r7, #0]
 170 0030 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 171 0032 FB60     		str	r3, [r7, #12]
  72:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_CB2 = p_CB->p_lnk;
 172              		.loc 2 72 0
 173 0034 7B68     		ldr	r3, [r7, #4]
 174 0036 5B68     		ldr	r3, [r3, #4]
 175 0038 7B61     		str	r3, [r7, #20]
  73:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Search for an entry in the list */
  74:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (p_CB2 != NULL && prio <= p_CB2->prio) {
 176              		.loc 2 74 0
 177 003a 04E0     		b	.L9
 178              	.L11:
  75:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_CB = (P_XCB)p_CB2;
 179              		.loc 2 75 0
 180 003c 7B69     		ldr	r3, [r7, #20]
 181 003e 7B60     		str	r3, [r7, #4]
  76:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_CB2 = p_CB2->p_lnk;
 182              		.loc 2 76 0
 183 0040 7B69     		ldr	r3, [r7, #20]
 184 0042 5B68     		ldr	r3, [r3, #4]
 185 0044 7B61     		str	r3, [r7, #20]
 186              	.L9:
  74:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (p_CB2 != NULL && prio <= p_CB2->prio) {
 187              		.loc 2 74 0 discriminator 1
 188 0046 7B69     		ldr	r3, [r7, #20]
 189 0048 002B     		cmp	r3, #0
 190 004a 05D0     		beq	.L10
  74:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (p_CB2 != NULL && prio <= p_CB2->prio) {
 191              		.loc 2 74 0 is_stmt 0 discriminator 2
 192 004c 7B69     		ldr	r3, [r7, #20]
 193 004e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 194 0050 1A46     		mov	r2, r3
 195 0052 FB68     		ldr	r3, [r7, #12]
 196 0054 9A42     		cmp	r2, r3
 197 0056 F1D2     		bcs	.L11
 198              	.L10:
  77:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
  78:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Entry found, insert the task into the list */
  79:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_task->p_lnk = p_CB2;
 199              		.loc 2 79 0 is_stmt 1
 200 0058 3B68     		ldr	r3, [r7, #0]
 201 005a 7A69     		ldr	r2, [r7, #20]
 202 005c 5A60     		str	r2, [r3, #4]
  80:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_CB->p_lnk = p_task;
 203              		.loc 2 80 0
 204 005e 7B68     		ldr	r3, [r7, #4]
 205 0060 3A68     		ldr	r2, [r7, #0]
 206 0062 5A60     		str	r2, [r3, #4]
  81:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (sem_mbx) {
 207              		.loc 2 81 0
 208 0064 3B69     		ldr	r3, [r7, #16]
 209 0066 002B     		cmp	r3, #0
 210 0068 09D0     		beq	.L12
  82:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_CB2 != NULL) {
 211              		.loc 2 82 0
 212 006a 7B69     		ldr	r3, [r7, #20]
 213 006c 002B     		cmp	r3, #0
 214 006e 02D0     		beq	.L13
  83:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_CB2->p_rlnk = p_task;
 215              		.loc 2 83 0
 216 0070 7B69     		ldr	r3, [r7, #20]
 217 0072 3A68     		ldr	r2, [r7, #0]
 218 0074 9A60     		str	r2, [r3, #8]
 219              	.L13:
  84:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
  85:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_task->p_rlnk = (P_TCB)p_CB;
 220              		.loc 2 85 0
 221 0076 3B68     		ldr	r3, [r7, #0]
 222 0078 7A68     		ldr	r2, [r7, #4]
 223 007a 9A60     		str	r2, [r3, #8]
 224 007c 03E0     		b	.L6
 225              	.L12:
  86:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
  87:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   else {
  88:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_task->p_rlnk = NULL;
 226              		.loc 2 88 0
 227 007e 3B68     		ldr	r3, [r7, #0]
 228 0080 4FF00002 		mov	r2, #0
 229 0084 9A60     		str	r2, [r3, #8]
 230              	.L6:
  89:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
  90:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 231              		.loc 2 90 0
 232 0086 07F11C07 		add	r7, r7, #28
 233 008a BD46     		mov	sp, r7
 234 008c 80BC     		pop	{r7}
 235 008e 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE8:
 239              		.section	.text.rt_get_first,"ax",%progbits
 240              		.align	2
 241              		.global	rt_get_first
 242              		.thumb
 243              		.thumb_func
 245              	rt_get_first:
 246              	.LFB9:
  91:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  92:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  93:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_get_first ----------------------------------*/
  94:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
  95:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** P_TCB rt_get_first (P_XCB p_CB) {
 247              		.loc 2 95 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 16
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 80B4     		push	{r7}
 253              	.LCFI6:
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 85B0     		sub	sp, sp, #20
 257              	.LCFI7:
 258              		.cfi_def_cfa_offset 24
 259 0004 00AF     		add	r7, sp, #0
 260              	.LCFI8:
 261              		.cfi_def_cfa_register 7
 262 0006 7860     		str	r0, [r7, #4]
  96:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Get task at head of list: it is the task with highest priority. */
  97:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* "p_CB" points to head of list. */
  98:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_first;
  99:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 100:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_first = p_CB->p_lnk;
 263              		.loc 2 100 0
 264 0008 7B68     		ldr	r3, [r7, #4]
 265 000a 5B68     		ldr	r3, [r3, #4]
 266 000c FB60     		str	r3, [r7, #12]
 101:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_CB->p_lnk = p_first->p_lnk;
 267              		.loc 2 101 0
 268 000e FB68     		ldr	r3, [r7, #12]
 269 0010 5A68     		ldr	r2, [r3, #4]
 270 0012 7B68     		ldr	r3, [r7, #4]
 271 0014 5A60     		str	r2, [r3, #4]
 102:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
 272              		.loc 2 102 0
 273 0016 7B68     		ldr	r3, [r7, #4]
 274 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 275 001a 022B     		cmp	r3, #2
 276 001c 07D0     		beq	.L16
 277              		.loc 2 102 0 is_stmt 0 discriminator 1
 278 001e 7B68     		ldr	r3, [r7, #4]
 279 0020 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 280 0022 012B     		cmp	r3, #1
 281 0024 03D0     		beq	.L16
 282 0026 7B68     		ldr	r3, [r7, #4]
 283 0028 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 284 002a 032B     		cmp	r3, #3
 285 002c 10D1     		bne	.L17
 286              	.L16:
 103:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_first->p_lnk != NULL) {
 287              		.loc 2 103 0 is_stmt 1
 288 002e FB68     		ldr	r3, [r7, #12]
 289 0030 5B68     		ldr	r3, [r3, #4]
 290 0032 002B     		cmp	r3, #0
 291 0034 07D0     		beq	.L18
 104:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_first->p_lnk->p_rlnk = (P_TCB)p_CB;
 292              		.loc 2 104 0
 293 0036 FB68     		ldr	r3, [r7, #12]
 294 0038 5B68     		ldr	r3, [r3, #4]
 295 003a 7A68     		ldr	r2, [r7, #4]
 296 003c 9A60     		str	r2, [r3, #8]
 105:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_first->p_lnk = NULL;
 297              		.loc 2 105 0
 298 003e FB68     		ldr	r3, [r7, #12]
 299 0040 4FF00002 		mov	r2, #0
 300 0044 5A60     		str	r2, [r3, #4]
 301              	.L18:
 106:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 107:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_first->p_rlnk = NULL;
 302              		.loc 2 107 0
 303 0046 FB68     		ldr	r3, [r7, #12]
 304 0048 4FF00002 		mov	r2, #0
 305 004c 9A60     		str	r2, [r3, #8]
 306 004e 03E0     		b	.L19
 307              	.L17:
 108:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 109:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   else {
 110:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_first->p_lnk = NULL;
 308              		.loc 2 110 0
 309 0050 FB68     		ldr	r3, [r7, #12]
 310 0052 4FF00002 		mov	r2, #0
 311 0056 5A60     		str	r2, [r3, #4]
 312              	.L19:
 111:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 112:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   return (p_first);
 313              		.loc 2 112 0
 314 0058 FB68     		ldr	r3, [r7, #12]
 113:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 315              		.loc 2 113 0
 316 005a 1846     		mov	r0, r3
 317 005c 07F11407 		add	r7, r7, #20
 318 0060 BD46     		mov	sp, r7
 319 0062 80BC     		pop	{r7}
 320 0064 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE9:
 324 0066 00BF     		.section	.text.rt_put_rdy_first,"ax",%progbits
 325              		.align	2
 326              		.global	rt_put_rdy_first
 327              		.thumb
 328              		.thumb_func
 330              	rt_put_rdy_first:
 331              	.LFB10:
 114:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 115:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 116:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_put_rdy_first ------------------------------*/
 117:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 118:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_put_rdy_first (P_TCB p_task) {
 332              		.loc 2 118 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 0000 80B4     		push	{r7}
 338              	.LCFI9:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 0002 83B0     		sub	sp, sp, #12
 342              	.LCFI10:
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              	.LCFI11:
 346              		.cfi_def_cfa_register 7
 347 0006 7860     		str	r0, [r7, #4]
 119:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Put task identified with "p_task" at the head of the ready list. The   */
 120:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* task must have at least a priority equal to highest priority in list.  */
 121:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_task->p_lnk = os_rdy.p_lnk;
 348              		.loc 2 121 0
 349 0008 40F20003 		movw	r3, #:lower16:os_rdy
 350 000c C0F20003 		movt	r3, #:upper16:os_rdy
 351 0010 5A68     		ldr	r2, [r3, #4]
 352 0012 7B68     		ldr	r3, [r7, #4]
 353 0014 5A60     		str	r2, [r3, #4]
 122:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_task->p_rlnk = NULL;
 354              		.loc 2 122 0
 355 0016 7B68     		ldr	r3, [r7, #4]
 356 0018 4FF00002 		mov	r2, #0
 357 001c 9A60     		str	r2, [r3, #8]
 123:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   os_rdy.p_lnk = p_task;
 358              		.loc 2 123 0
 359 001e 40F20003 		movw	r3, #:lower16:os_rdy
 360 0022 C0F20003 		movt	r3, #:upper16:os_rdy
 361 0026 7A68     		ldr	r2, [r7, #4]
 362 0028 5A60     		str	r2, [r3, #4]
 124:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 363              		.loc 2 124 0
 364 002a 07F10C07 		add	r7, r7, #12
 365 002e BD46     		mov	sp, r7
 366 0030 80BC     		pop	{r7}
 367 0032 7047     		bx	lr
 368              		.cfi_endproc
 369              	.LFE10:
 371              		.section	.text.rt_get_same_rdy_prio,"ax",%progbits
 372              		.align	2
 373              		.global	rt_get_same_rdy_prio
 374              		.thumb
 375              		.thumb_func
 377              	rt_get_same_rdy_prio:
 378              	.LFB11:
 125:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 126:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 127:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_get_same_rdy_prio --------------------------*/
 128:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 129:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** P_TCB rt_get_same_rdy_prio (void) {
 379              		.loc 2 129 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              	.LCFI12:
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 83B0     		sub	sp, sp, #12
 389              	.LCFI13:
 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI14:
 393              		.cfi_def_cfa_register 7
 130:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Remove a task of same priority from ready list if any exists. Other-   */
 131:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* wise return NULL.                                                      */
 132:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_first;
 133:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 134:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_first = os_rdy.p_lnk;
 394              		.loc 2 134 0
 395 0006 40F20003 		movw	r3, #:lower16:os_rdy
 396 000a C0F20003 		movt	r3, #:upper16:os_rdy
 397 000e 5B68     		ldr	r3, [r3, #4]
 398 0010 7B60     		str	r3, [r7, #4]
 135:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_first->prio == os_tsk.run->prio) {
 399              		.loc 2 135 0
 400 0012 7B68     		ldr	r3, [r7, #4]
 401 0014 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 402 0016 40F20003 		movw	r3, #:lower16:os_tsk
 403 001a C0F20003 		movt	r3, #:upper16:os_tsk
 404 001e 1B68     		ldr	r3, [r3, #0]
 405 0020 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 406 0022 9A42     		cmp	r2, r3
 407 0024 0CD1     		bne	.L23
 136:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     os_rdy.p_lnk = os_rdy.p_lnk->p_lnk;
 408              		.loc 2 136 0
 409 0026 40F20003 		movw	r3, #:lower16:os_rdy
 410 002a C0F20003 		movt	r3, #:upper16:os_rdy
 411 002e 5B68     		ldr	r3, [r3, #4]
 412 0030 5A68     		ldr	r2, [r3, #4]
 413 0032 40F20003 		movw	r3, #:lower16:os_rdy
 414 0036 C0F20003 		movt	r3, #:upper16:os_rdy
 415 003a 5A60     		str	r2, [r3, #4]
 137:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     return (p_first);
 416              		.loc 2 137 0
 417 003c 7B68     		ldr	r3, [r7, #4]
 418 003e 01E0     		b	.L24
 419              	.L23:
 138:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 139:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   return (NULL);
 420              		.loc 2 139 0
 421 0040 4FF00003 		mov	r3, #0
 422              	.L24:
 140:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 423              		.loc 2 140 0
 424 0044 1846     		mov	r0, r3
 425 0046 07F10C07 		add	r7, r7, #12
 426 004a BD46     		mov	sp, r7
 427 004c 80BC     		pop	{r7}
 428 004e 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE11:
 432              		.section	.text.rt_resort_prio,"ax",%progbits
 433              		.align	2
 434              		.global	rt_resort_prio
 435              		.thumb
 436              		.thumb_func
 438              	rt_resort_prio:
 439              	.LFB12:
 141:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 142:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 143:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_resort_prio --------------------------------*/
 144:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 145:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_resort_prio (P_TCB p_task) {
 440              		.loc 2 145 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              	.LCFI15:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 84B0     		sub	sp, sp, #16
 450              	.LCFI16:
 451              		.cfi_def_cfa_offset 24
 452 0004 00AF     		add	r7, sp, #0
 453              	.LCFI17:
 454              		.cfi_def_cfa_register 7
 455 0006 7860     		str	r0, [r7, #4]
 146:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Re-sort ordered lists after the priority of 'p_task' has changed.      */
 147:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_CB;
 148:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 149:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_task->p_rlnk == NULL) {
 456              		.loc 2 149 0
 457 0008 7B68     		ldr	r3, [r7, #4]
 458 000a 9B68     		ldr	r3, [r3, #8]
 459 000c 002B     		cmp	r3, #0
 460 000e 09D1     		bne	.L26
 150:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_task->state == READY) {
 461              		.loc 2 150 0
 462 0010 7B68     		ldr	r3, [r7, #4]
 463 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 0014 012B     		cmp	r3, #1
 465 0016 17D1     		bne	.L25
 151:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* Task is chained into READY list. */
 152:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_CB = (P_TCB)&os_rdy;
 466              		.loc 2 152 0
 467 0018 40F20003 		movw	r3, #:lower16:os_rdy
 468 001c C0F20003 		movt	r3, #:upper16:os_rdy
 469 0020 FB60     		str	r3, [r7, #12]
 153:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       goto res;
 470              		.loc 2 153 0
 471 0022 0AE0     		b	.L28
 472              	.L26:
 154:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 155:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 156:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   else {
 157:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_CB = p_task->p_rlnk;
 473              		.loc 2 157 0
 474 0024 7B68     		ldr	r3, [r7, #4]
 475 0026 9B68     		ldr	r3, [r3, #8]
 476 0028 FB60     		str	r3, [r7, #12]
 158:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     while (p_CB->cb_type == TCB) {
 477              		.loc 2 158 0
 478 002a 02E0     		b	.L29
 479              	.L30:
 159:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* Find a header of this task chain list. */
 160:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_CB = p_CB->p_rlnk;
 480              		.loc 2 160 0
 481 002c FB68     		ldr	r3, [r7, #12]
 482 002e 9B68     		ldr	r3, [r3, #8]
 483 0030 FB60     		str	r3, [r7, #12]
 484              	.L29:
 158:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     while (p_CB->cb_type == TCB) {
 485              		.loc 2 158 0 discriminator 1
 486 0032 FB68     		ldr	r3, [r7, #12]
 487 0034 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 488 0036 002B     		cmp	r3, #0
 489 0038 F8D0     		beq	.L30
 490              	.L28:
 161:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 162:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** res:rt_rmv_list (p_task);
 491              		.loc 2 162 0
 492 003a 7868     		ldr	r0, [r7, #4]
 493 003c FFF7FEFF 		bl	rt_rmv_list
 163:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     rt_put_prio ((P_XCB)p_CB, p_task);
 494              		.loc 2 163 0
 495 0040 F868     		ldr	r0, [r7, #12]
 496 0042 7968     		ldr	r1, [r7, #4]
 497 0044 FFF7FEFF 		bl	rt_put_prio
 498              	.L25:
 164:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 165:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 499              		.loc 2 165 0
 500 0048 07F11007 		add	r7, r7, #16
 501 004c BD46     		mov	sp, r7
 502 004e 80BD     		pop	{r7, pc}
 503              		.cfi_endproc
 504              	.LFE12:
 506              		.section	.text.rt_put_dly,"ax",%progbits
 507              		.align	2
 508              		.global	rt_put_dly
 509              		.thumb
 510              		.thumb_func
 512              	rt_put_dly:
 513              	.LFB13:
 166:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 167:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 168:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_put_dly ------------------------------------*/
 169:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 170:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_put_dly (P_TCB p_task, U16 delay) {
 514              		.loc 2 170 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 24
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 80B4     		push	{r7}
 520              	.LCFI18:
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 87B0     		sub	sp, sp, #28
 524              	.LCFI19:
 525              		.cfi_def_cfa_offset 32
 526 0004 00AF     		add	r7, sp, #0
 527              	.LCFI20:
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 530 0008 0B46     		mov	r3, r1
 531 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 171:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Put a task identified with "p_task" into chained delay wait list using */
 172:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* a delay value of "delay".                                              */
 173:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p;
 174:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   U32 delta,idelay = delay;
 532              		.loc 2 174 0
 533 000c 7B88     		ldrh	r3, [r7, #2]
 534 000e FB60     		str	r3, [r7, #12]
 175:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 176:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p = (P_TCB)&os_dly;
 535              		.loc 2 176 0
 536 0010 40F20003 		movw	r3, #:lower16:os_dly
 537 0014 C0F20003 		movt	r3, #:upper16:os_dly
 538 0018 7B61     		str	r3, [r7, #20]
 177:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p->p_dlnk == NULL) {
 539              		.loc 2 177 0
 540 001a 7B69     		ldr	r3, [r7, #20]
 541 001c DB68     		ldr	r3, [r3, #12]
 542 001e 002B     		cmp	r3, #0
 543 0020 03D1     		bne	.L32
 178:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     /* Delay list empty */
 179:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     delta = 0;
 544              		.loc 2 179 0
 545 0022 4FF00003 		mov	r3, #0
 546 0026 3B61     		str	r3, [r7, #16]
 180:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     goto last;
 547              		.loc 2 180 0
 548 0028 0AE0     		b	.L33
 549              	.L32:
 181:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 182:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   delta = os_dly.delta_time;
 550              		.loc 2 182 0
 551 002a 40F20003 		movw	r3, #:lower16:os_dly
 552 002e C0F20003 		movt	r3, #:upper16:os_dly
 553 0032 9B8A     		ldrh	r3, [r3, #20]
 554 0034 3B61     		str	r3, [r7, #16]
 183:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (delta < idelay) {
 555              		.loc 2 183 0
 556 0036 22E0     		b	.L34
 557              	.L37:
 184:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p->p_dlnk == NULL) {
 558              		.loc 2 184 0
 559 0038 7B69     		ldr	r3, [r7, #20]
 560 003a DB68     		ldr	r3, [r3, #12]
 561 003c 002B     		cmp	r3, #0
 562 003e 16D1     		bne	.L35
 563              	.L33:
 185:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* End of list found */
 186:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** last: p_task->p_dlnk = NULL;
 564              		.loc 2 186 0
 565 0040 7B68     		ldr	r3, [r7, #4]
 566 0042 4FF00002 		mov	r2, #0
 567 0046 DA60     		str	r2, [r3, #12]
 187:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p->p_dlnk = p_task;
 568              		.loc 2 187 0
 569 0048 7B69     		ldr	r3, [r7, #20]
 570 004a 7A68     		ldr	r2, [r7, #4]
 571 004c DA60     		str	r2, [r3, #12]
 188:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_task->p_blnk = p;
 572              		.loc 2 188 0
 573 004e 7B68     		ldr	r3, [r7, #4]
 574 0050 7A69     		ldr	r2, [r7, #20]
 575 0052 1A61     		str	r2, [r3, #16]
 189:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p->delta_time = (U16)(idelay - delta);
 576              		.loc 2 189 0
 577 0054 FB68     		ldr	r3, [r7, #12]
 578 0056 9AB2     		uxth	r2, r3
 579 0058 3B69     		ldr	r3, [r7, #16]
 580 005a 9BB2     		uxth	r3, r3
 581 005c D31A     		subs	r3, r2, r3
 582 005e 9AB2     		uxth	r2, r3
 583 0060 7B69     		ldr	r3, [r7, #20]
 584 0062 9A82     		strh	r2, [r3, #20]	@ movhi
 190:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_task->delta_time = 0;
 585              		.loc 2 190 0
 586 0064 7B68     		ldr	r3, [r7, #4]
 587 0066 4FF00002 		mov	r2, #0
 588 006a 9A82     		strh	r2, [r3, #20]	@ movhi
 191:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       return;
 589              		.loc 2 191 0
 590 006c 2DE0     		b	.L31
 591              	.L35:
 192:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 193:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p = p->p_dlnk;
 592              		.loc 2 193 0
 593 006e 7B69     		ldr	r3, [r7, #20]
 594 0070 DB68     		ldr	r3, [r3, #12]
 595 0072 7B61     		str	r3, [r7, #20]
 194:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     delta += p->delta_time;
 596              		.loc 2 194 0
 597 0074 7B69     		ldr	r3, [r7, #20]
 598 0076 9B8A     		ldrh	r3, [r3, #20]
 599 0078 3A69     		ldr	r2, [r7, #16]
 600 007a D318     		adds	r3, r2, r3
 601 007c 3B61     		str	r3, [r7, #16]
 602              	.L34:
 183:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (delta < idelay) {
 603              		.loc 2 183 0 discriminator 1
 604 007e 3A69     		ldr	r2, [r7, #16]
 605 0080 FB68     		ldr	r3, [r7, #12]
 606 0082 9A42     		cmp	r2, r3
 607 0084 D8D3     		bcc	.L37
 195:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 196:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Right place found */
 197:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_task->p_dlnk = p->p_dlnk;
 608              		.loc 2 197 0
 609 0086 7B69     		ldr	r3, [r7, #20]
 610 0088 DA68     		ldr	r2, [r3, #12]
 611 008a 7B68     		ldr	r3, [r7, #4]
 612 008c DA60     		str	r2, [r3, #12]
 198:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p->p_dlnk = p_task;
 613              		.loc 2 198 0
 614 008e 7B69     		ldr	r3, [r7, #20]
 615 0090 7A68     		ldr	r2, [r7, #4]
 616 0092 DA60     		str	r2, [r3, #12]
 199:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_task->p_blnk = p;
 617              		.loc 2 199 0
 618 0094 7B68     		ldr	r3, [r7, #4]
 619 0096 7A69     		ldr	r2, [r7, #20]
 620 0098 1A61     		str	r2, [r3, #16]
 200:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_task->p_dlnk != NULL) {
 621              		.loc 2 200 0
 622 009a 7B68     		ldr	r3, [r7, #4]
 623 009c DB68     		ldr	r3, [r3, #12]
 624 009e 002B     		cmp	r3, #0
 625 00a0 03D0     		beq	.L38
 201:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_task->p_dlnk->p_blnk = p_task;
 626              		.loc 2 201 0
 627 00a2 7B68     		ldr	r3, [r7, #4]
 628 00a4 DB68     		ldr	r3, [r3, #12]
 629 00a6 7A68     		ldr	r2, [r7, #4]
 630 00a8 1A61     		str	r2, [r3, #16]
 631              	.L38:
 202:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 203:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_task->delta_time = (U16)(delta - idelay);
 632              		.loc 2 203 0
 633 00aa 3B69     		ldr	r3, [r7, #16]
 634 00ac 9AB2     		uxth	r2, r3
 635 00ae FB68     		ldr	r3, [r7, #12]
 636 00b0 9BB2     		uxth	r3, r3
 637 00b2 D31A     		subs	r3, r2, r3
 638 00b4 9AB2     		uxth	r2, r3
 639 00b6 7B68     		ldr	r3, [r7, #4]
 640 00b8 9A82     		strh	r2, [r3, #20]	@ movhi
 204:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p->delta_time -= p_task->delta_time;
 641              		.loc 2 204 0
 642 00ba 7B69     		ldr	r3, [r7, #20]
 643 00bc 9A8A     		ldrh	r2, [r3, #20]
 644 00be 7B68     		ldr	r3, [r7, #4]
 645 00c0 9B8A     		ldrh	r3, [r3, #20]
 646 00c2 D31A     		subs	r3, r2, r3
 647 00c4 9AB2     		uxth	r2, r3
 648 00c6 7B69     		ldr	r3, [r7, #20]
 649 00c8 9A82     		strh	r2, [r3, #20]	@ movhi
 650              	.L31:
 205:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 651              		.loc 2 205 0
 652 00ca 07F11C07 		add	r7, r7, #28
 653 00ce BD46     		mov	sp, r7
 654 00d0 80BC     		pop	{r7}
 655 00d2 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE13:
 659              		.section	.text.rt_dec_dly,"ax",%progbits
 660              		.align	2
 661              		.global	rt_dec_dly
 662              		.thumb
 663              		.thumb_func
 665              	rt_dec_dly:
 666              	.LFB14:
 206:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 207:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 208:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_dec_dly ------------------------------------*/
 209:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 210:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_dec_dly (void) {
 667              		.loc 2 210 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 8
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              	.LCFI21:
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 82B0     		sub	sp, sp, #8
 677              	.LCFI22:
 678              		.cfi_def_cfa_offset 16
 679 0004 00AF     		add	r7, sp, #0
 680              	.LCFI23:
 681              		.cfi_def_cfa_register 7
 211:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Decrement delta time of list head: remove tasks having a value of zero.*/
 212:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_rdy;
 213:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 214:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (os_dly.p_dlnk == NULL) {
 682              		.loc 2 214 0
 683 0006 40F20003 		movw	r3, #:lower16:os_dly
 684 000a C0F20003 		movt	r3, #:upper16:os_dly
 685 000e DB68     		ldr	r3, [r3, #12]
 686 0010 002B     		cmp	r3, #0
 687 0012 78D0     		beq	.L48
 688              	.L40:
 215:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     return;
 216:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 217:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   os_dly.delta_time--;
 689              		.loc 2 217 0
 690 0014 40F20003 		movw	r3, #:lower16:os_dly
 691 0018 C0F20003 		movt	r3, #:upper16:os_dly
 692 001c 9B8A     		ldrh	r3, [r3, #20]
 693 001e 03F1FF33 		add	r3, r3, #-1
 694 0022 9AB2     		uxth	r2, r3
 695 0024 40F20003 		movw	r3, #:lower16:os_dly
 696 0028 C0F20003 		movt	r3, #:upper16:os_dly
 697 002c 9A82     		strh	r2, [r3, #20]	@ movhi
 218:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
 698              		.loc 2 218 0
 699 002e 5BE0     		b	.L42
 700              	.L47:
 219:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_rdy = os_dly.p_dlnk;
 701              		.loc 2 219 0
 702 0030 40F20003 		movw	r3, #:lower16:os_dly
 703 0034 C0F20003 		movt	r3, #:upper16:os_dly
 704 0038 DB68     		ldr	r3, [r3, #12]
 705 003a 7B60     		str	r3, [r7, #4]
 220:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_rdy->p_rlnk != NULL) {
 706              		.loc 2 220 0
 707 003c 7B68     		ldr	r3, [r7, #4]
 708 003e 9B68     		ldr	r3, [r3, #8]
 709 0040 002B     		cmp	r3, #0
 710 0042 15D0     		beq	.L43
 221:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* Task is really enqueued, remove task from semaphore/mailbox */
 222:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* timeout waiting list. */
 223:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_rdy->p_rlnk->p_lnk = p_rdy->p_lnk;
 711              		.loc 2 223 0
 712 0044 7B68     		ldr	r3, [r7, #4]
 713 0046 9B68     		ldr	r3, [r3, #8]
 714 0048 7A68     		ldr	r2, [r7, #4]
 715 004a 5268     		ldr	r2, [r2, #4]
 716 004c 5A60     		str	r2, [r3, #4]
 224:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       if (p_rdy->p_lnk != NULL) {
 717              		.loc 2 224 0
 718 004e 7B68     		ldr	r3, [r7, #4]
 719 0050 5B68     		ldr	r3, [r3, #4]
 720 0052 002B     		cmp	r3, #0
 721 0054 08D0     		beq	.L44
 225:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****         p_rdy->p_lnk->p_rlnk = p_rdy->p_rlnk;
 722              		.loc 2 225 0
 723 0056 7B68     		ldr	r3, [r7, #4]
 724 0058 5B68     		ldr	r3, [r3, #4]
 725 005a 7A68     		ldr	r2, [r7, #4]
 726 005c 9268     		ldr	r2, [r2, #8]
 727 005e 9A60     		str	r2, [r3, #8]
 226:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****         p_rdy->p_lnk = NULL;
 728              		.loc 2 226 0
 729 0060 7B68     		ldr	r3, [r7, #4]
 730 0062 4FF00002 		mov	r2, #0
 731 0066 5A60     		str	r2, [r3, #4]
 732              	.L44:
 227:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       }
 228:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_rdy->p_rlnk = NULL;
 733              		.loc 2 228 0
 734 0068 7B68     		ldr	r3, [r7, #4]
 735 006a 4FF00002 		mov	r2, #0
 736 006e 9A60     		str	r2, [r3, #8]
 737              	.L43:
 229:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 230:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     rt_put_prio (&os_rdy, p_rdy);
 738              		.loc 2 230 0
 739 0070 40F20000 		movw	r0, #:lower16:os_rdy
 740 0074 C0F20000 		movt	r0, #:upper16:os_rdy
 741 0078 7968     		ldr	r1, [r7, #4]
 742 007a FFF7FEFF 		bl	rt_put_prio
 231:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     os_dly.delta_time = p_rdy->delta_time;
 743              		.loc 2 231 0
 744 007e 7B68     		ldr	r3, [r7, #4]
 745 0080 9A8A     		ldrh	r2, [r3, #20]
 746 0082 40F20003 		movw	r3, #:lower16:os_dly
 747 0086 C0F20003 		movt	r3, #:upper16:os_dly
 748 008a 9A82     		strh	r2, [r3, #20]	@ movhi
 232:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_rdy->state == WAIT_ITV) {
 749              		.loc 2 232 0
 750 008c 7B68     		ldr	r3, [r7, #4]
 751 008e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 752 0090 042B     		cmp	r3, #4
 753 0092 0BD1     		bne	.L45
 233:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* Calculate the next time for interval wait. */
 234:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_rdy->delta_time = p_rdy->interval_time + (U16)os_time;
 754              		.loc 2 234 0
 755 0094 7B68     		ldr	r3, [r7, #4]
 756 0096 DA8A     		ldrh	r2, [r3, #22]
 757 0098 40F20003 		movw	r3, #:lower16:os_time
 758 009c C0F20003 		movt	r3, #:upper16:os_time
 759 00a0 1B68     		ldr	r3, [r3, #0]
 760 00a2 9BB2     		uxth	r3, r3
 761 00a4 D318     		adds	r3, r2, r3
 762 00a6 9AB2     		uxth	r2, r3
 763 00a8 7B68     		ldr	r3, [r7, #4]
 764 00aa 9A82     		strh	r2, [r3, #20]	@ movhi
 765              	.L45:
 235:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 236:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_rdy->state   = READY;
 766              		.loc 2 236 0
 767 00ac 7B68     		ldr	r3, [r7, #4]
 768 00ae 4FF00102 		mov	r2, #1
 769 00b2 5A70     		strb	r2, [r3, #1]
 237:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     os_dly.p_dlnk = p_rdy->p_dlnk;
 770              		.loc 2 237 0
 771 00b4 7B68     		ldr	r3, [r7, #4]
 772 00b6 DA68     		ldr	r2, [r3, #12]
 773 00b8 40F20003 		movw	r3, #:lower16:os_dly
 774 00bc C0F20003 		movt	r3, #:upper16:os_dly
 775 00c0 DA60     		str	r2, [r3, #12]
 238:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_rdy->p_dlnk != NULL) {
 776              		.loc 2 238 0
 777 00c2 7B68     		ldr	r3, [r7, #4]
 778 00c4 DB68     		ldr	r3, [r3, #12]
 779 00c6 002B     		cmp	r3, #0
 780 00c8 0AD0     		beq	.L46
 239:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_rdy->p_dlnk->p_blnk =  (P_TCB)&os_dly;
 781              		.loc 2 239 0
 782 00ca 7B68     		ldr	r3, [r7, #4]
 783 00cc DA68     		ldr	r2, [r3, #12]
 784 00ce 40F20003 		movw	r3, #:lower16:os_dly
 785 00d2 C0F20003 		movt	r3, #:upper16:os_dly
 786 00d6 1361     		str	r3, [r2, #16]
 240:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_rdy->p_dlnk = NULL;
 787              		.loc 2 240 0
 788 00d8 7B68     		ldr	r3, [r7, #4]
 789 00da 4FF00002 		mov	r2, #0
 790 00de DA60     		str	r2, [r3, #12]
 791              	.L46:
 241:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 242:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_rdy->p_blnk = NULL;
 792              		.loc 2 242 0
 793 00e0 7B68     		ldr	r3, [r7, #4]
 794 00e2 4FF00002 		mov	r2, #0
 795 00e6 1A61     		str	r2, [r3, #16]
 796              	.L42:
 218:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
 797              		.loc 2 218 0 discriminator 1
 798 00e8 40F20003 		movw	r3, #:lower16:os_dly
 799 00ec C0F20003 		movt	r3, #:upper16:os_dly
 800 00f0 9B8A     		ldrh	r3, [r3, #20]
 801 00f2 002B     		cmp	r3, #0
 802 00f4 08D1     		bne	.L39
 218:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
 803              		.loc 2 218 0 is_stmt 0 discriminator 2
 804 00f6 40F20003 		movw	r3, #:lower16:os_dly
 805 00fa C0F20003 		movt	r3, #:upper16:os_dly
 806 00fe DB68     		ldr	r3, [r3, #12]
 807 0100 002B     		cmp	r3, #0
 808 0102 95D1     		bne	.L47
 809 0104 00E0     		b	.L39
 810              	.L48:
 215:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     return;
 811              		.loc 2 215 0 is_stmt 1
 812 0106 00BF     		nop
 813              	.L39:
 243:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 244:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 814              		.loc 2 244 0
 815 0108 07F10807 		add	r7, r7, #8
 816 010c BD46     		mov	sp, r7
 817 010e 80BD     		pop	{r7, pc}
 818              		.cfi_endproc
 819              	.LFE14:
 821              		.section	.text.rt_rmv_list,"ax",%progbits
 822              		.align	2
 823              		.global	rt_rmv_list
 824              		.thumb
 825              		.thumb_func
 827              	rt_rmv_list:
 828              	.LFB15:
 245:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 246:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 247:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_rmv_list -----------------------------------*/
 248:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 249:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_rmv_list (P_TCB p_task) {
 829              		.loc 2 249 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 16
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 80B4     		push	{r7}
 835              	.LCFI24:
 836              		.cfi_def_cfa_offset 4
 837              		.cfi_offset 7, -4
 838 0002 85B0     		sub	sp, sp, #20
 839              	.LCFI25:
 840              		.cfi_def_cfa_offset 24
 841 0004 00AF     		add	r7, sp, #0
 842              	.LCFI26:
 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 250:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Remove task identified with "p_task" from ready, semaphore or mailbox  */
 251:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* waiting list if enqueued.                                              */
 252:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_b;
 253:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 254:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_task->p_rlnk != NULL) {
 845              		.loc 2 254 0
 846 0008 7B68     		ldr	r3, [r7, #4]
 847 000a 9B68     		ldr	r3, [r3, #8]
 848 000c 002B     		cmp	r3, #0
 849 000e 0ED0     		beq	.L50
 255:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     /* A task is enqueued in semaphore / mailbox waiting list. */
 256:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_task->p_rlnk->p_lnk = p_task->p_lnk;
 850              		.loc 2 256 0
 851 0010 7B68     		ldr	r3, [r7, #4]
 852 0012 9B68     		ldr	r3, [r3, #8]
 853 0014 7A68     		ldr	r2, [r7, #4]
 854 0016 5268     		ldr	r2, [r2, #4]
 855 0018 5A60     		str	r2, [r3, #4]
 257:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_task->p_lnk != NULL) {
 856              		.loc 2 257 0
 857 001a 7B68     		ldr	r3, [r7, #4]
 858 001c 5B68     		ldr	r3, [r3, #4]
 859 001e 002B     		cmp	r3, #0
 860 0020 1CD0     		beq	.L56
 258:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_task->p_lnk->p_rlnk = p_task->p_rlnk;
 861              		.loc 2 258 0
 862 0022 7B68     		ldr	r3, [r7, #4]
 863 0024 5B68     		ldr	r3, [r3, #4]
 864 0026 7A68     		ldr	r2, [r7, #4]
 865 0028 9268     		ldr	r2, [r2, #8]
 866 002a 9A60     		str	r2, [r3, #8]
 259:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 260:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     return;
 867              		.loc 2 260 0
 868 002c 16E0     		b	.L56
 869              	.L50:
 261:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 262:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 263:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_b = (P_TCB)&os_rdy;
 870              		.loc 2 263 0
 871 002e 40F20003 		movw	r3, #:lower16:os_rdy
 872 0032 C0F20003 		movt	r3, #:upper16:os_rdy
 873 0036 FB60     		str	r3, [r7, #12]
 264:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (p_b != NULL) {
 874              		.loc 2 264 0
 875 0038 0CE0     		b	.L53
 876              	.L55:
 265:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     /* Search the ready list for task "p_task" */
 266:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_b->p_lnk == p_task) {
 877              		.loc 2 266 0
 878 003a FB68     		ldr	r3, [r7, #12]
 879 003c 5A68     		ldr	r2, [r3, #4]
 880 003e 7B68     		ldr	r3, [r7, #4]
 881 0040 9A42     		cmp	r2, r3
 882 0042 04D1     		bne	.L54
 267:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_b->p_lnk = p_task->p_lnk;
 883              		.loc 2 267 0
 884 0044 7B68     		ldr	r3, [r7, #4]
 885 0046 5A68     		ldr	r2, [r3, #4]
 886 0048 FB68     		ldr	r3, [r7, #12]
 887 004a 5A60     		str	r2, [r3, #4]
 268:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       return;
 888              		.loc 2 268 0
 889 004c 07E0     		b	.L49
 890              	.L54:
 269:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 270:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_b = p_b->p_lnk;
 891              		.loc 2 270 0
 892 004e FB68     		ldr	r3, [r7, #12]
 893 0050 5B68     		ldr	r3, [r3, #4]
 894 0052 FB60     		str	r3, [r7, #12]
 895              	.L53:
 264:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   while (p_b != NULL) {
 896              		.loc 2 264 0 discriminator 1
 897 0054 FB68     		ldr	r3, [r7, #12]
 898 0056 002B     		cmp	r3, #0
 899 0058 EFD1     		bne	.L55
 900 005a 00E0     		b	.L49
 901              	.L56:
 260:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     return;
 902              		.loc 2 260 0
 903 005c 00BF     		nop
 904              	.L49:
 271:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 272:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 905              		.loc 2 272 0
 906 005e 07F11407 		add	r7, r7, #20
 907 0062 BD46     		mov	sp, r7
 908 0064 80BC     		pop	{r7}
 909 0066 7047     		bx	lr
 910              		.cfi_endproc
 911              	.LFE15:
 913              		.section	.text.rt_rmv_dly,"ax",%progbits
 914              		.align	2
 915              		.global	rt_rmv_dly
 916              		.thumb
 917              		.thumb_func
 919              	rt_rmv_dly:
 920              	.LFB16:
 273:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 274:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 275:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_rmv_dly ------------------------------------*/
 276:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 277:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_rmv_dly (P_TCB p_task) {
 921              		.loc 2 277 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 16
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926 0000 80B4     		push	{r7}
 927              	.LCFI27:
 928              		.cfi_def_cfa_offset 4
 929              		.cfi_offset 7, -4
 930 0002 85B0     		sub	sp, sp, #20
 931              	.LCFI28:
 932              		.cfi_def_cfa_offset 24
 933 0004 00AF     		add	r7, sp, #0
 934              	.LCFI29:
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 278:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Remove task identified with "p_task" from delay list if enqueued.      */
 279:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   P_TCB p_b;
 280:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 281:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   p_b = p_task->p_blnk;
 937              		.loc 2 281 0
 938 0008 7B68     		ldr	r3, [r7, #4]
 939 000a 1B69     		ldr	r3, [r3, #16]
 940 000c FB60     		str	r3, [r7, #12]
 282:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (p_b != NULL) {
 941              		.loc 2 282 0
 942 000e FB68     		ldr	r3, [r7, #12]
 943 0010 002B     		cmp	r3, #0
 944 0012 20D0     		beq	.L57
 283:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     /* Task is really enqueued */
 284:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_b->p_dlnk = p_task->p_dlnk;
 945              		.loc 2 284 0
 946 0014 7B68     		ldr	r3, [r7, #4]
 947 0016 DA68     		ldr	r2, [r3, #12]
 948 0018 FB68     		ldr	r3, [r7, #12]
 949 001a DA60     		str	r2, [r3, #12]
 285:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     if (p_task->p_dlnk != NULL) {
 950              		.loc 2 285 0
 951 001c 7B68     		ldr	r3, [r7, #4]
 952 001e DB68     		ldr	r3, [r3, #12]
 953 0020 002B     		cmp	r3, #0
 954 0022 10D0     		beq	.L59
 286:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* 'p_task' is in the middle of list */
 287:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_b->delta_time += p_task->delta_time;
 955              		.loc 2 287 0
 956 0024 FB68     		ldr	r3, [r7, #12]
 957 0026 9A8A     		ldrh	r2, [r3, #20]
 958 0028 7B68     		ldr	r3, [r7, #4]
 959 002a 9B8A     		ldrh	r3, [r3, #20]
 960 002c D318     		adds	r3, r2, r3
 961 002e 9AB2     		uxth	r2, r3
 962 0030 FB68     		ldr	r3, [r7, #12]
 963 0032 9A82     		strh	r2, [r3, #20]	@ movhi
 288:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_task->p_dlnk->p_blnk = p_b;
 964              		.loc 2 288 0
 965 0034 7B68     		ldr	r3, [r7, #4]
 966 0036 DB68     		ldr	r3, [r3, #12]
 967 0038 FA68     		ldr	r2, [r7, #12]
 968 003a 1A61     		str	r2, [r3, #16]
 289:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_task->p_dlnk = NULL;
 969              		.loc 2 289 0
 970 003c 7B68     		ldr	r3, [r7, #4]
 971 003e 4FF00002 		mov	r2, #0
 972 0042 DA60     		str	r2, [r3, #12]
 973 0044 03E0     		b	.L60
 974              	.L59:
 290:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 291:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     else {
 292:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       /* 'p_task' is at the end of list */
 293:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****       p_b->delta_time = 0;
 975              		.loc 2 293 0
 976 0046 FB68     		ldr	r3, [r7, #12]
 977 0048 4FF00002 		mov	r2, #0
 978 004c 9A82     		strh	r2, [r3, #20]	@ movhi
 979              	.L60:
 294:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     }
 295:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     p_task->p_blnk = NULL;
 980              		.loc 2 295 0
 981 004e 7B68     		ldr	r3, [r7, #4]
 982 0050 4FF00002 		mov	r2, #0
 983 0054 1A61     		str	r2, [r3, #16]
 984              	.L57:
 296:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 297:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 985              		.loc 2 297 0
 986 0056 07F11407 		add	r7, r7, #20
 987 005a BD46     		mov	sp, r7
 988 005c 80BC     		pop	{r7}
 989 005e 7047     		bx	lr
 990              		.cfi_endproc
 991              	.LFE16:
 993              		.section	.text.rt_psq_enq,"ax",%progbits
 994              		.align	2
 995              		.global	rt_psq_enq
 996              		.thumb
 997              		.thumb_func
 999              	rt_psq_enq:
 1000              	.LFB17:
 298:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 299:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 300:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** /*--------------------------- rt_psq_enq ------------------------------------*/
 301:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 302:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** void rt_psq_enq (OS_ID entry, U32 arg) {
 1001              		.loc 2 302 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 16
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005 0000 80B5     		push	{r7, lr}
 1006              	.LCFI30:
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 84B0     		sub	sp, sp, #16
 1011              	.LCFI31:
 1012              		.cfi_def_cfa_offset 24
 1013 0004 00AF     		add	r7, sp, #0
 1014              	.LCFI32:
 1015              		.cfi_def_cfa_register 7
 1016 0006 7860     		str	r0, [r7, #4]
 1017 0008 3960     		str	r1, [r7, #0]
 303:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   /* Insert post service request "entry" into ps-queue. */
 304:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   U32 idx;
 305:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** 
 306:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   idx = rt_inc_qi (os_psq->size, &os_psq->count, &os_psq->first);
 1018              		.loc 2 306 0
 1019 000a 40F20003 		movw	r3, #:lower16:os_fifo
 1020 000e C0F20003 		movt	r3, #:upper16:os_fifo
 1021 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1022 0014 1846     		mov	r0, r3
 1023 0016 1749     		ldr	r1, .L64
 1024 0018 40F20002 		movw	r2, #:lower16:os_fifo
 1025 001c C0F20002 		movt	r2, #:upper16:os_fifo
 1026 0020 FFF7FEFF 		bl	rt_inc_qi
 1027 0024 F860     		str	r0, [r7, #12]
 307:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   if (idx < os_psq->size) {
 1028              		.loc 2 307 0
 1029 0026 40F20003 		movw	r3, #:lower16:os_fifo
 1030 002a C0F20003 		movt	r3, #:upper16:os_fifo
 1031 002e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1032 0030 1A46     		mov	r2, r3
 1033 0032 FB68     		ldr	r3, [r7, #12]
 1034 0034 9A42     		cmp	r2, r3
 1035 0036 14D9     		bls	.L62
 308:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     os_psq->q[idx].id  = entry;
 1036              		.loc 2 308 0
 1037 0038 40F20002 		movw	r2, #:lower16:os_fifo
 1038 003c C0F20002 		movt	r2, #:upper16:os_fifo
 1039 0040 FB68     		ldr	r3, [r7, #12]
 1040 0042 4FEAC303 		lsl	r3, r3, #3
 1041 0046 D318     		adds	r3, r2, r3
 1042 0048 7A68     		ldr	r2, [r7, #4]
 1043 004a 5A60     		str	r2, [r3, #4]
 309:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     os_psq->q[idx].arg = arg;
 1044              		.loc 2 309 0
 1045 004c 40F20002 		movw	r2, #:lower16:os_fifo
 1046 0050 C0F20002 		movt	r2, #:upper16:os_fifo
 1047 0054 FB68     		ldr	r3, [r7, #12]
 1048 0056 4FEAC303 		lsl	r3, r3, #3
 1049 005a D318     		adds	r3, r2, r3
 1050 005c 3A68     		ldr	r2, [r7, #0]
 1051 005e 9A60     		str	r2, [r3, #8]
 1052 0060 03E0     		b	.L61
 1053              	.L62:
 310:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 311:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   else {
 312:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****     os_error (OS_ERR_FIFO_OVF);
 1054              		.loc 2 312 0
 1055 0062 4FF00200 		mov	r0, #2
 1056 0066 FFF7FEFF 		bl	os_error
 1057              	.L61:
 313:../Dave/Generated/src/RTOS001/SRC/rt_List.c ****   }
 314:../Dave/Generated/src/RTOS001/SRC/rt_List.c **** }
 1058              		.loc 2 314 0
 1059 006a 07F11007 		add	r7, r7, #16
 1060 006e BD46     		mov	sp, r7
 1061 0070 80BD     		pop	{r7, pc}
 1062              	.L65:
 1063 0072 00BF     		.align	2
 1064              	.L64:
 1065 0074 02000000 		.word	os_fifo+2
 1066              		.cfi_endproc
 1067              	.LFE17:
 1069              		.text
 1070              	.Letext0:
 1071              		.file 3 "../Dave/Generated/src/RTOS001/SRC/rt_TypeDef.h"
 1072              		.file 4 "../Dave/Generated/src/RTOS001/SRC/RTX_Config.h"
 1073              		.file 5 "../Dave/Generated/src/RTOS001/SRC/rt_Task.h"
 1074              		.file 6 "../Dave/Generated/src/RTOS001/SRC/rt_Time.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rt_List.c
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:20     .text.rt_inc_qi:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:24     .text.rt_inc_qi:00000000 rt_inc_qi
                            *COM*:00000018 os_rdy
                            *COM*:00000018 os_dly
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:121    .text.rt_put_prio:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:126    .text.rt_put_prio:00000000 rt_put_prio
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:240    .text.rt_get_first:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:245    .text.rt_get_first:00000000 rt_get_first
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:325    .text.rt_put_rdy_first:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:330    .text.rt_put_rdy_first:00000000 rt_put_rdy_first
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:372    .text.rt_get_same_rdy_prio:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:377    .text.rt_get_same_rdy_prio:00000000 rt_get_same_rdy_prio
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:433    .text.rt_resort_prio:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:438    .text.rt_resort_prio:00000000 rt_resort_prio
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:827    .text.rt_rmv_list:00000000 rt_rmv_list
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:507    .text.rt_put_dly:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:512    .text.rt_put_dly:00000000 rt_put_dly
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:660    .text.rt_dec_dly:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:665    .text.rt_dec_dly:00000000 rt_dec_dly
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:822    .text.rt_rmv_list:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:914    .text.rt_rmv_dly:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:919    .text.rt_rmv_dly:00000000 rt_rmv_dly
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:994    .text.rt_psq_enq:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:999    .text.rt_psq_enq:00000000 rt_psq_enq
C:\Users\LIUDAN~1\AppData\Local\Temp\ccVUjiCo.s:1065   .text.rt_psq_enq:00000074 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.rt_TypeDef.h.79.db0d61ef3f79bbdae3d134fa36f08304
                           .group:00000000 wm4.RTX_Config.h.42.eb93c57b7f787c25a05db70c41047f1a
                           .group:00000000 wm4.rt_List.h.38.eac26046fac8ea42e6920eca3c3ee440
                           .group:00000000 wm4.rt_Task.h.38.ad357e63c89f04311a4b4ec53df91b63
                           .group:00000000 wm4.rt_HAL_CM.h.36.531af519683d77df9d264c8d6c8a6b22

UNDEFINED SYMBOLS
os_tsk
os_time
os_fifo
os_error

   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"rt_Time.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	os_time,4,4
  20              		.section	.text.rt_time_get,"ax",%progbits
  21              		.align	2
  22              		.global	rt_time_get
  23              		.thumb
  24              		.thumb_func
  26              	rt_time_get:
  27              	.LFB0:
  28              		.file 1 "../Dave/Generated/src/RTOS001/SRC/rt_Time.c"
   1:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*----------------------------------------------------------------------------
   2:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *      RL-ARM - RTX
   3:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *----------------------------------------------------------------------------
   4:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *      Name:    RT_TIME.C
   5:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *      Purpose: Delay and interval wait functions
   6:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *      Rev.:    V4.70
   7:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *----------------------------------------------------------------------------
   8:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *
   9:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * Copyright (c) 1999-2009 KEIL, 2009-2013 ARM Germany GmbH
  10:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * All rights reserved.
  11:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * Redistribution and use in source and binary forms, with or without
  12:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * modification, are permitted provided that the following conditions are met:
  13:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *  - Redistributions of source code must retain the above copyright
  14:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *    notice, this list of conditions and the following disclaimer.
  15:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *  - Redistributions in binary form must reproduce the above copyright
  16:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *    notice, this list of conditions and the following disclaimer in the
  17:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *    documentation and/or other materials provided with the distribution.
  18:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used 
  19:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *    to endorse or promote products derived from this software without 
  20:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *    specific prior written permission.
  21:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *
  22:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  23:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  24:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  25:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  26:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  27:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  28:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  29:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  30:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *---------------------------------------------------------------------------*/
  34:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  35:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** #include "rt_TypeDef.h"
  36:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** #include "RTX_Config.h"
  37:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** #include "rt_Task.h"
  38:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** #include "rt_Time.h"
  39:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  40:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*----------------------------------------------------------------------------
  41:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *      Global Variables
  42:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *---------------------------------------------------------------------------*/
  43:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  44:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /* Free running system tick counter */
  45:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** U32 os_time;
  46:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  47:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  48:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*----------------------------------------------------------------------------
  49:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *      Functions
  50:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****  *---------------------------------------------------------------------------*/
  51:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  52:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  53:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*--------------------------- rt_time_get -----------------------------------*/
  54:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  55:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** U32 rt_time_get (void) {
  29              		.loc 1 55 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  56:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   /* Get system time tick */
  57:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   return (os_time);
  41              		.loc 1 57 0
  42 0004 40F20003 		movw	r3, #:lower16:os_time
  43 0008 C0F20003 		movt	r3, #:upper16:os_time
  44 000c 1B68     		ldr	r3, [r3, #0]
  58:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** }
  45              		.loc 1 58 0
  46 000e 1846     		mov	r0, r3
  47 0010 BD46     		mov	sp, r7
  48 0012 80BC     		pop	{r7}
  49 0014 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE0:
  53 0016 00BF     		.section	.text.rt_dly_wait,"ax",%progbits
  54              		.align	2
  55              		.global	rt_dly_wait
  56              		.thumb
  57              		.thumb_func
  59              	rt_dly_wait:
  60              	.LFB1:
  59:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  60:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  61:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*--------------------------- rt_dly_wait -----------------------------------*/
  62:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  63:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** void rt_dly_wait (U16 delay_time) {
  61              		.loc 1 63 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 8
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 82B0     		sub	sp, sp, #8
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 16
  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 7
  76 0006 0346     		mov	r3, r0
  77 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  64:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   /* Delay task by "delay_time" */
  65:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   rt_block (delay_time, WAIT_DLY);
  78              		.loc 1 65 0
  79 000a FB88     		ldrh	r3, [r7, #6]
  80 000c 1846     		mov	r0, r3
  81 000e 4FF00301 		mov	r1, #3
  82 0012 FFF7FEFF 		bl	rt_block
  66:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** }
  83              		.loc 1 66 0
  84 0016 07F10807 		add	r7, r7, #8
  85 001a BD46     		mov	sp, r7
  86 001c 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE1:
  90 001e 00BF     		.section	.text.rt_itv_set,"ax",%progbits
  91              		.align	2
  92              		.global	rt_itv_set
  93              		.thumb
  94              		.thumb_func
  96              	rt_itv_set:
  97              	.LFB2:
  67:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  68:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  69:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*--------------------------- rt_itv_set ------------------------------------*/
  70:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  71:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** void rt_itv_set (U16 interval_time) {
  98              		.loc 1 71 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 8
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
 104              	.LCFI5:
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 7, -4
 107 0002 83B0     		sub	sp, sp, #12
 108              	.LCFI6:
 109              		.cfi_def_cfa_offset 16
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI7:
 112              		.cfi_def_cfa_register 7
 113 0006 0346     		mov	r3, r0
 114 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  72:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   /* Set interval length and define start of first interval */
  73:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   os_tsk.run->interval_time = interval_time;
 115              		.loc 1 73 0
 116 000a 40F20003 		movw	r3, #:lower16:os_tsk
 117 000e C0F20003 		movt	r3, #:upper16:os_tsk
 118 0012 1B68     		ldr	r3, [r3, #0]
 119 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 120 0016 DA82     		strh	r2, [r3, #22]	@ movhi
  74:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   os_tsk.run->delta_time = interval_time + (U16)os_time;
 121              		.loc 1 74 0
 122 0018 40F20003 		movw	r3, #:lower16:os_tsk
 123 001c C0F20003 		movt	r3, #:upper16:os_tsk
 124 0020 1A68     		ldr	r2, [r3, #0]
 125 0022 40F20003 		movw	r3, #:lower16:os_time
 126 0026 C0F20003 		movt	r3, #:upper16:os_time
 127 002a 1B68     		ldr	r3, [r3, #0]
 128 002c 99B2     		uxth	r1, r3
 129 002e FB88     		ldrh	r3, [r7, #6]	@ movhi
 130 0030 CB18     		adds	r3, r1, r3
 131 0032 9BB2     		uxth	r3, r3
 132 0034 9382     		strh	r3, [r2, #20]	@ movhi
  75:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** }
 133              		.loc 1 75 0
 134 0036 07F10C07 		add	r7, r7, #12
 135 003a BD46     		mov	sp, r7
 136 003c 80BC     		pop	{r7}
 137 003e 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE2:
 141              		.section	.text.rt_itv_wait,"ax",%progbits
 142              		.align	2
 143              		.global	rt_itv_wait
 144              		.thumb
 145              		.thumb_func
 147              	rt_itv_wait:
 148              	.LFB3:
  76:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  77:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  78:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** /*--------------------------- rt_itv_wait -----------------------------------*/
  79:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  80:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** void rt_itv_wait (void) {
 149              		.loc 1 80 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI8:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI9:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              	.LCFI10:
 163              		.cfi_def_cfa_register 7
  81:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   /* Wait for interval end and define start of next one */
  82:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   U16 delta;
  83:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** 
  84:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   delta = os_tsk.run->delta_time - (U16)os_time;
 164              		.loc 1 84 0
 165 0006 40F20003 		movw	r3, #:lower16:os_tsk
 166 000a C0F20003 		movt	r3, #:upper16:os_tsk
 167 000e 1B68     		ldr	r3, [r3, #0]
 168 0010 9A8A     		ldrh	r2, [r3, #20]
 169 0012 40F20003 		movw	r3, #:lower16:os_time
 170 0016 C0F20003 		movt	r3, #:upper16:os_time
 171 001a 1B68     		ldr	r3, [r3, #0]
 172 001c 9BB2     		uxth	r3, r3
 173 001e D31A     		subs	r3, r2, r3
 174 0020 FB80     		strh	r3, [r7, #6]	@ movhi
  85:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   os_tsk.run->delta_time += os_tsk.run->interval_time;
 175              		.loc 1 85 0
 176 0022 40F20003 		movw	r3, #:lower16:os_tsk
 177 0026 C0F20003 		movt	r3, #:upper16:os_tsk
 178 002a 1A68     		ldr	r2, [r3, #0]
 179 002c 40F20003 		movw	r3, #:lower16:os_tsk
 180 0030 C0F20003 		movt	r3, #:upper16:os_tsk
 181 0034 1B68     		ldr	r3, [r3, #0]
 182 0036 998A     		ldrh	r1, [r3, #20]
 183 0038 40F20003 		movw	r3, #:lower16:os_tsk
 184 003c C0F20003 		movt	r3, #:upper16:os_tsk
 185 0040 1B68     		ldr	r3, [r3, #0]
 186 0042 DB8A     		ldrh	r3, [r3, #22]
 187 0044 CB18     		adds	r3, r1, r3
 188 0046 9BB2     		uxth	r3, r3
 189 0048 9382     		strh	r3, [r2, #20]	@ movhi
  86:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   if ((delta & 0x8000) == 0) {
 190              		.loc 1 86 0
 191 004a FB88     		ldrh	r3, [r7, #6]
 192 004c 1BB2     		sxth	r3, r3
 193 004e 002B     		cmp	r3, #0
 194 0050 05DB     		blt	.L5
  87:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****     rt_block (delta, WAIT_ITV);
 195              		.loc 1 87 0
 196 0052 FB88     		ldrh	r3, [r7, #6]
 197 0054 1846     		mov	r0, r3
 198 0056 4FF00401 		mov	r1, #4
 199 005a FFF7FEFF 		bl	rt_block
 200              	.L5:
  88:../Dave/Generated/src/RTOS001/SRC/rt_Time.c ****   }
  89:../Dave/Generated/src/RTOS001/SRC/rt_Time.c **** }
 201              		.loc 1 89 0
 202 005e 07F10807 		add	r7, r7, #8
 203 0062 BD46     		mov	sp, r7
 204 0064 80BD     		pop	{r7, pc}
 205              		.cfi_endproc
 206              	.LFE3:
 208 0066 00BF     		.text
 209              	.Letext0:
 210              		.file 2 "../Dave/Generated/src/RTOS001/SRC/rt_TypeDef.h"
 211              		.file 3 "../Dave/Generated/src/RTOS001/SRC/rt_Task.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rt_Time.c
                            *COM*:00000004 os_time
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:21     .text.rt_time_get:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:26     .text.rt_time_get:00000000 rt_time_get
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:54     .text.rt_dly_wait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:59     .text.rt_dly_wait:00000000 rt_dly_wait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:91     .text.rt_itv_set:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:96     .text.rt_itv_set:00000000 rt_itv_set
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:142    .text.rt_itv_wait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc6VoSdw.s:147    .text.rt_itv_wait:00000000 rt_itv_wait
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.rt_TypeDef.h.79.db0d61ef3f79bbdae3d134fa36f08304
                           .group:00000000 wm4.RTX_Config.h.42.eb93c57b7f787c25a05db70c41047f1a
                           .group:00000000 wm4.rt_Task.h.38.ad357e63c89f04311a4b4ec53df91b63

UNDEFINED SYMBOLS
rt_block
os_tsk

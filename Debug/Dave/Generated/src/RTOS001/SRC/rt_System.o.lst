   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"rt_System.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.rt_systick_init,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	rt_systick_init:
  25              	.LFB4:
  26              		.file 1 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h"
   1:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /*----------------------------------------------------------------------------
   2:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      RL-ARM - RTX
   3:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *----------------------------------------------------------------------------
   4:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      Name:    RT_HAL_CM.H
   5:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      Purpose: Hardware Abstraction Layer for Cortex-M definitions
   6:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *      Rev.:    V4.70
   7:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *----------------------------------------------------------------------------
   8:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *
   9:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * Copyright (c) 1999-2009 KEIL, 2009-2013 ARM Germany GmbH
  10:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * All rights reserved.
  11:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * Redistribution and use in source and binary forms, with or without
  12:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * modification, are permitted provided that the following conditions are met:
  13:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *  - Redistributions of source code must retain the above copyright
  14:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    notice, this list of conditions and the following disclaimer.
  15:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *  - Redistributions in binary form must reproduce the above copyright
  16:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    notice, this list of conditions and the following disclaimer in the
  17:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    documentation and/or other materials provided with the distribution.
  18:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *  - Neither the name of ARM  nor the names of its contributors may be used 
  19:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    to endorse or promote products derived from this software without 
  20:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *    specific prior written permission.
  21:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *
  22:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  23:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  24:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  25:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  26:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  27:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  28:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  29:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  30:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  *---------------------------------------------------------------------------*/
  34:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  35:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Definitions */
  36:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define INITIAL_xPSR    0x01000000
  37:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define DEMCR_TRCENA    0x01000000
  38:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_ITMENA      0x00000001
  39:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define MAGIC_WORD      0xE25A2EA5
  40:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  41:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined (__CC_ARM)          /* ARM Compiler */
  42:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  43:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if ((__TARGET_ARCH_7_M || __TARGET_ARCH_7E_M) && !defined(NO_EXCLUSIVE_ACCESS))
  44:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define __USE_EXCLUSIVE_ACCESS
  45:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
  46:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #undef  __USE_EXCLUSIVE_ACCESS
  47:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  48:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  49:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #elif defined (__GNUC__)        /* GNU Compiler */
  50:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  51:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #undef  __USE_EXCLUSIVE_ACCESS
  52:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  53:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined (__CORTEX_M0)
  54:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 1
  55:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
  56:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 0
  57:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  58:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  59:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  60:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 1
  61:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
  62:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 0
  63:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  64:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  65:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __inline inline
  66:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __weak   __attribute__((weak))
  67:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  68:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifndef __CMSIS_GENERIC
  69:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  70:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __attribute__((always_inline)) static inline void __enable_irq(void)
  71:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
  72:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsie i");
  73:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  74:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  75:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __attribute__((always_inline)) static inline U32 __disable_irq(void)
  76:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
  77:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U32 result;
  78:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  79:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("mrs %0, primask" : "=r" (result));
  80:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsid i");
  81:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result & 1);
  82:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  83:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  84:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
  85:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  86:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __attribute__(( always_inline)) static inline U8 __clz(U32 value)
  87:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
  88:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U8 result;
  89:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   
  90:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("clz %0, %1" : "=r" (result) : "r" (value));
  91:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result);
  92:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  93:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  94:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #elif defined (__ICCARM__)      /* IAR Compiler */
  95:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  96:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #undef  __USE_EXCLUSIVE_ACCESS
  97:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
  98:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if (__CORE__ == __ARM6M__)
  99:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 1
 100:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 101:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_ARCH_6S_M 0
 102:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 103:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 104:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if defined __ARMVFP__
 105:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 1
 106:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 107:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __TARGET_FPU_VFP 0
 108:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 109:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 110:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define __inline inline
 111:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 112:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifndef __CMSIS_GENERIC
 113:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 114:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** static inline void __enable_irq(void)
 115:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
 116:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsie i");
 117:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 118:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 119:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** static inline U32 __disable_irq(void)
 120:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
 121:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U32 result;
 122:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   
 123:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("mrs %0, primask" : "=r" (result));
 124:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsid i");
 125:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result & 1);
 126:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 127:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 128:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 129:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 130:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** static inline U8 __clz(U32 value)
 131:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** {
 132:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U8 result;
 133:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   
 134:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("clz %0, %1" : "=r" (result) : "r" (value));
 135:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return(result);
 136:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 137:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 138:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 139:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 140:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* NVIC registers */
 141:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ST_CTRL    (*((volatile U32 *)0xE000E010))
 142:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ST_RELOAD  (*((volatile U32 *)0xE000E014))
 143:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ST_CURRENT (*((volatile U32 *)0xE000E018))
 144:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ISER         ((volatile U32 *)0xE000E100)
 145:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_ICER         ((volatile U32 *)0xE000E180)
 146:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if (__TARGET_ARCH_6S_M)
 147:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_IP           ((volatile U32 *)0xE000E400)
 148:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 149:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_IP           ((volatile U8  *)0xE000E400)
 150:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 151:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_INT_CTRL   (*((volatile U32 *)0xE000ED04))
 152:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_AIR_CTRL   (*((volatile U32 *)0xE000ED0C))
 153:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_SYS_PRI2   (*((volatile U32 *)0xE000ED1C))
 154:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define NVIC_SYS_PRI3   (*((volatile U32 *)0xE000ED20))
 155:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 156:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_PEND_IRQ()   NVIC_INT_CTRL  = (1<<28)
 157:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_PENDING      ((NVIC_INT_CTRL >> 26) & (1<<2 | 1))
 158:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_UNPEND(fl)   NVIC_INT_CTRL  = (*fl = OS_PENDING) << 25
 159:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_PEND(fl,p)   NVIC_INT_CTRL  = (fl | p<<2) << 26
 160:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_LOCK()       NVIC_ST_CTRL   =  0x0005
 161:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_UNLOCK()     NVIC_ST_CTRL   =  0x0007
 162:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 163:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_PENDING    ((NVIC_INT_CTRL >> 28) & 1)
 164:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_UNPEND(fl) NVIC_INT_CTRL  = (*fl = OS_X_PENDING) << 27
 165:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_PEND(fl,p) NVIC_INT_CTRL  = (fl | p) << 28
 166:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #if (__TARGET_ARCH_6S_M)
 167:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_INIT(n)    NVIC_IP[n>>2] |= 0xFF << (8*(n & 0x03)); \
 168:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****                         NVIC_ISER[n>>5] = 1 << (n & 0x1F)
 169:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 170:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_INIT(n)    NVIC_IP[n] = 0xFF; \
 171:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****                         NVIC_ISER[n>>5] = 1 << (n & 0x1F)
 172:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 173:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_LOCK(n)    NVIC_ICER[n>>5] = 1 << (n & 0x1F)
 174:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define OS_X_UNLOCK(n)  NVIC_ISER[n>>5] = 1 << (n & 0x1F)
 175:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 176:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Core Debug registers */
 177:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define DEMCR           (*((volatile U32 *)0xE000EDFC))
 178:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 179:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* ITM registers */
 180:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_CONTROL     (*((volatile U32 *)0xE0000E80))
 181:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_ENABLE      (*((volatile U32 *)0xE0000E00))
 182:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT30_U32  (*((volatile U32 *)0xE0000078))
 183:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT31_U32  (*((volatile U32 *)0xE000007C))
 184:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT31_U16  (*((volatile U16 *)0xE000007C))
 185:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #define ITM_PORT31_U8   (*((volatile U8  *)0xE000007C))
 186:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 187:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Variables */
 188:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** extern BIT dbg_msg;
 189:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 190:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** /* Functions */
 191:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifdef __USE_EXCLUSIVE_ACCESS
 192:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_inc(p)     while(__strex((__ldrex(p)+1),p))
 193:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_dec(p)     while(__strex((__ldrex(p)-1),p))
 194:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 195:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_inc(p)     __disable_irq();(*p)++;__enable_irq();
 196:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****  #define rt_dec(p)     __disable_irq();(*p)--;__enable_irq();
 197:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 198:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 199:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __inline static U32 rt_inc_qi (U32 size, U8 *count, U8 *first) {
 200:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   U32 cnt,c2;
 201:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #ifdef __USE_EXCLUSIVE_ACCESS
 202:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   do {
 203:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     if ((cnt = __ldrex(count)) == size) {
 204:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****       __clrex();
 205:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****       return (cnt); }
 206:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   } while (__strex(cnt+1, count));
 207:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   do {
 208:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     c2 = (cnt = __ldrex(first)) + 1;
 209:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     if (c2 == size) c2 = 0;
 210:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   } while (__strex(c2, first));
 211:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #else
 212:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __disable_irq();
 213:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   if ((cnt = *count) < size) {
 214:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     *count = cnt+1;
 215:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     c2 = (cnt = *first) + 1;
 216:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     if (c2 == size) c2 = 0;
 217:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****     *first = c2; 
 218:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   }
 219:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __enable_irq ();
 220:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** #endif
 221:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return (cnt);
 222:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 223:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 224:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __inline static void rt_systick_init (void) {
  27              		.loc 1 224 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 225:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   NVIC_ST_RELOAD  = os_trv;
  39              		.loc 1 225 0
  40 0004 4EF21403 		movw	r3, #57364
  41 0008 CEF20003 		movt	r3, 57344
  42 000c 40F20002 		movw	r2, #:lower16:os_trv
  43 0010 C0F20002 		movt	r2, #:upper16:os_trv
  44 0014 1268     		ldr	r2, [r2, #0]
  45 0016 1A60     		str	r2, [r3, #0]
 226:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   NVIC_ST_CURRENT = 0;
  46              		.loc 1 226 0
  47 0018 4EF21803 		movw	r3, #57368
  48 001c CEF20003 		movt	r3, 57344
  49 0020 4FF00002 		mov	r2, #0
  50 0024 1A60     		str	r2, [r3, #0]
 227:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   NVIC_ST_CTRL    = 0x0007;
  51              		.loc 1 227 0
  52 0026 4EF21003 		movw	r3, #57360
  53 002a CEF20003 		movt	r3, 57344
  54 002e 4FF00702 		mov	r2, #7
  55 0032 1A60     		str	r2, [r3, #0]
 228:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   NVIC_SYS_PRI3  |= 0xFF000000;
  56              		.loc 1 228 0
  57 0034 4EF62053 		movw	r3, #60704
  58 0038 CEF20003 		movt	r3, 57344
  59 003c 4EF62052 		movw	r2, #60704
  60 0040 CEF20002 		movt	r2, 57344
  61 0044 1268     		ldr	r2, [r2, #0]
  62 0046 42F07F42 		orr	r2, r2, #-16777216
  63 004a 1A60     		str	r2, [r3, #0]
 229:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  64              		.loc 1 229 0
  65 004c BD46     		mov	sp, r7
  66 004e 80BC     		pop	{r7}
  67 0050 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE4:
  71 0052 00BF     		.section	.text.rt_systick_val,"ax",%progbits
  72              		.align	2
  73              		.thumb
  74              		.thumb_func
  76              	rt_systick_val:
  77              	.LFB5:
 230:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 231:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __inline static U32 rt_systick_val (void) {
  78              		.loc 1 231 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              	.LCFI3:
  89              		.cfi_def_cfa_register 7
 232:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return (os_trv - NVIC_ST_CURRENT);
  90              		.loc 1 232 0
  91 0004 40F20003 		movw	r3, #:lower16:os_trv
  92 0008 C0F20003 		movt	r3, #:upper16:os_trv
  93 000c 1A68     		ldr	r2, [r3, #0]
  94 000e 4EF21803 		movw	r3, #57368
  95 0012 CEF20003 		movt	r3, 57344
  96 0016 1B68     		ldr	r3, [r3, #0]
  97 0018 D31A     		subs	r3, r2, r3
 233:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
  98              		.loc 1 233 0
  99 001a 1846     		mov	r0, r3
 100 001c BD46     		mov	sp, r7
 101 001e 80BC     		pop	{r7}
 102 0020 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE5:
 106 0022 00BF     		.section	.text.rt_systick_ovf,"ax",%progbits
 107              		.align	2
 108              		.thumb
 109              		.thumb_func
 111              	rt_systick_ovf:
 112              	.LFB6:
 234:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** 
 235:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** __inline static U32 rt_systick_ovf (void) {
 113              		.loc 1 235 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              	.LCFI4:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 7, -4
 122 0002 00AF     		add	r7, sp, #0
 123              	.LCFI5:
 124              		.cfi_def_cfa_register 7
 236:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   return ((NVIC_INT_CTRL >> 26) & 1);
 125              		.loc 1 236 0
 126 0004 4EF60453 		movw	r3, #60676
 127 0008 CEF20003 		movt	r3, 57344
 128 000c 1B68     		ldr	r3, [r3, #0]
 129 000e 4FEA9363 		lsr	r3, r3, #26
 130 0012 03F00103 		and	r3, r3, #1
 237:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h **** }
 131              		.loc 1 237 0
 132 0016 1846     		mov	r0, r3
 133 0018 BD46     		mov	sp, r7
 134 001a 80BC     		pop	{r7}
 135 001c 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE6:
 139              		.comm	os_tick_irqn,4,4
 140 001e 00BF     		.bss
 141              	os_lock:
 142 0000 00       		.space	1
 143              	os_psh_flag:
 144 0001 00       		.space	1
 145              	pend_flags:
 146 0002 00       		.space	1
 147              		.section	.text.rt_suspend,"ax",%progbits
 148              		.align	2
 149              		.global	rt_suspend
 150              		.thumb
 151              		.thumb_func
 153              	rt_suspend:
 154              	.LFB8:
 155              		.file 2 "../Dave/Generated/src/RTOS001/SRC/rt_System.c"
   1:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*----------------------------------------------------------------------------
   2:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      RL-ARM - RTX
   3:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *----------------------------------------------------------------------------
   4:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      Name:    RT_SYSTEM.C
   5:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      Purpose: System Task Manager
   6:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      Rev.:    V4.73
   7:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *----------------------------------------------------------------------------
   8:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *
   9:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * Copyright (c) 1999-2009 KEIL, 2009-2013 ARM Germany GmbH
  10:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * All rights reserved.
  11:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * Redistribution and use in source and binary forms, with or without
  12:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * modification, are permitted provided that the following conditions are met:
  13:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *  - Redistributions of source code must retain the above copyright
  14:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *    notice, this list of conditions and the following disclaimer.
  15:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *  - Redistributions in binary form must reproduce the above copyright
  16:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *    notice, this list of conditions and the following disclaimer in the
  17:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *    documentation and/or other materials provided with the distribution.
  18:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used 
  19:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *    to endorse or promote products derived from this software without 
  20:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *    specific prior written permission.
  21:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *
  22:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  23:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  24:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  25:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  26:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  27:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  28:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  29:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  30:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  * POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *---------------------------------------------------------------------------*/
  34:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  35:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_TypeDef.h"
  36:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "RTX_Config.h"
  37:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Task.h"
  38:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_System.h"
  39:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Event.h"
  40:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_List.h"
  41:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Mailbox.h"
  42:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Semaphore.h"
  43:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Time.h"
  44:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Timer.h"
  45:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_Robin.h"
  46:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #include "rt_HAL_CM.h"
  47:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  48:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*----------------------------------------------------------------------------
  49:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      Global Variables
  50:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *---------------------------------------------------------------------------*/
  51:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  52:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** int os_tick_irqn;
  53:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  54:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*----------------------------------------------------------------------------
  55:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      Local Variables
  56:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *---------------------------------------------------------------------------*/
  57:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  58:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** static volatile BIT os_lock;
  59:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** static volatile BIT os_psh_flag;
  60:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** static          U8  pend_flags;
  61:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  62:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*----------------------------------------------------------------------------
  63:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *      Global Functions
  64:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****  *---------------------------------------------------------------------------*/
  65:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  66:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #define RL_RTX_VER      0x473
  67:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  68:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #if defined (__CC_ARM)
  69:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __asm void $$RTX$$version (void) {
  70:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****    /* Export a version number symbol for a version control. */
  71:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  72:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****                 EXPORT  __RL_RTX_VER
  73:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  74:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __RL_RTX_VER    EQU     RL_RTX_VER
  75:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
  76:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #endif
  77:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  78:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  79:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_suspend ------------------------------------*/
  80:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  81:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** extern U32 sysUserTimerWakeupTime(void);
  82:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  83:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** U32 rt_suspend (void) {
 156              		.loc 2 83 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              	.LCFI6:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 82B0     		sub	sp, sp, #8
 166              	.LCFI7:
 167              		.cfi_def_cfa_offset 16
 168 0004 00AF     		add	r7, sp, #0
 169              	.LCFI8:
 170              		.cfi_def_cfa_register 7
  84:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Suspend OS scheduler */
  85:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   U32 delta = 0xFFFF;
 171              		.loc 2 85 0
 172 0006 4FF6FF73 		movw	r3, #65535
 173 000a 7B60     		str	r3, [r7, #4]
  86:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #ifdef __CMSIS_RTOS
  87:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   U32 sleep;
  88:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #endif
  89:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
  90:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_tsk_lock();
 174              		.loc 2 90 0
 175 000c FFF7FEFF 		bl	rt_tsk_lock
  91:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   
  92:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_dly.p_dlnk) {
 176              		.loc 2 92 0
 177 0010 40F20003 		movw	r3, #:lower16:os_dly
 178 0014 C0F20003 		movt	r3, #:upper16:os_dly
 179 0018 DB68     		ldr	r3, [r3, #12]
 180 001a 002B     		cmp	r3, #0
 181 001c 05D0     		beq	.L7
  93:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     delta = os_dly.delta_time;
 182              		.loc 2 93 0
 183 001e 40F20003 		movw	r3, #:lower16:os_dly
 184 0022 C0F20003 		movt	r3, #:upper16:os_dly
 185 0026 9B8A     		ldrh	r3, [r3, #20]
 186 0028 7B60     		str	r3, [r7, #4]
 187              	.L7:
  94:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
  95:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #ifdef __CMSIS_RTOS
  96:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   sleep = sysUserTimerWakeupTime();
 188              		.loc 2 96 0
 189 002a FFF7FEFF 		bl	sysUserTimerWakeupTime
 190 002e 3860     		str	r0, [r7, #0]
  97:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (sleep < delta) delta = sleep;
 191              		.loc 2 97 0
 192 0030 3A68     		ldr	r2, [r7, #0]
 193 0032 7B68     		ldr	r3, [r7, #4]
 194 0034 9A42     		cmp	r2, r3
 195 0036 01D2     		bcs	.L8
 196              		.loc 2 97 0 is_stmt 0 discriminator 1
 197 0038 3B68     		ldr	r3, [r7, #0]
 198 003a 7B60     		str	r3, [r7, #4]
 199              	.L8:
  98:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #else
  99:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_tmr.next) {
 100:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     if (os_tmr.tcnt < delta) delta = os_tmr.tcnt;
 101:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 102:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #endif
 103:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 104:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   return (delta);
 200              		.loc 2 104 0 is_stmt 1
 201 003c 7B68     		ldr	r3, [r7, #4]
 105:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 202              		.loc 2 105 0
 203 003e 1846     		mov	r0, r3
 204 0040 07F10807 		add	r7, r7, #8
 205 0044 BD46     		mov	sp, r7
 206 0046 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE8:
 210              		.section	.text.rt_resume,"ax",%progbits
 211              		.align	2
 212              		.global	rt_resume
 213              		.thumb
 214              		.thumb_func
 216              	rt_resume:
 217              	.LFB9:
 106:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 107:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 108:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_resume -------------------------------------*/
 109:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 110:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** extern void sysUserTimerUpdate (U32 sleep_time);
 111:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 112:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** void rt_resume (U32 sleep_time) {
 218              		.loc 2 112 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 16
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 80B5     		push	{r7, lr}
 223              	.LCFI9:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 84B0     		sub	sp, sp, #16
 228              	.LCFI10:
 229              		.cfi_def_cfa_offset 24
 230 0004 00AF     		add	r7, sp, #0
 231              	.LCFI11:
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 113:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Resume OS scheduler after suspend */
 114:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   P_TCB next;
 115:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   U32   delta;
 116:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 117:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   os_tsk.run->state = READY;
 234              		.loc 2 117 0
 235 0008 40F20003 		movw	r3, #:lower16:os_tsk
 236 000c C0F20003 		movt	r3, #:upper16:os_tsk
 237 0010 1B68     		ldr	r3, [r3, #0]
 238 0012 4FF00102 		mov	r2, #1
 239 0016 5A70     		strb	r2, [r3, #1]
 118:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_put_rdy_first (os_tsk.run);
 240              		.loc 2 118 0
 241 0018 40F20003 		movw	r3, #:lower16:os_tsk
 242 001c C0F20003 		movt	r3, #:upper16:os_tsk
 243 0020 1B68     		ldr	r3, [r3, #0]
 244 0022 1846     		mov	r0, r3
 245 0024 FFF7FEFF 		bl	rt_put_rdy_first
 119:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 120:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   os_robin.task = NULL;
 246              		.loc 2 120 0
 247 0028 40F20003 		movw	r3, #:lower16:os_robin
 248 002c C0F20003 		movt	r3, #:upper16:os_robin
 249 0030 4FF00002 		mov	r2, #0
 250 0034 1A60     		str	r2, [r3, #0]
 121:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 122:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Update delays. */
 123:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_dly.p_dlnk) {
 251              		.loc 2 123 0
 252 0036 40F20003 		movw	r3, #:lower16:os_dly
 253 003a C0F20003 		movt	r3, #:upper16:os_dly
 254 003e DB68     		ldr	r3, [r3, #12]
 255 0040 002B     		cmp	r3, #0
 256 0042 63D0     		beq	.L11
 124:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     delta = sleep_time;
 257              		.loc 2 124 0
 258 0044 7B68     		ldr	r3, [r7, #4]
 259 0046 FB60     		str	r3, [r7, #12]
 125:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     if (delta >= os_dly.delta_time) {
 260              		.loc 2 125 0
 261 0048 40F20003 		movw	r3, #:lower16:os_dly
 262 004c C0F20003 		movt	r3, #:upper16:os_dly
 263 0050 9B8A     		ldrh	r3, [r3, #20]
 264 0052 1A46     		mov	r2, r3
 265 0054 FB68     		ldr	r3, [r7, #12]
 266 0056 9A42     		cmp	r2, r3
 267 0058 3DD8     		bhi	.L12
 126:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       delta   -= os_dly.delta_time;
 268              		.loc 2 126 0
 269 005a 40F20003 		movw	r3, #:lower16:os_dly
 270 005e C0F20003 		movt	r3, #:upper16:os_dly
 271 0062 9B8A     		ldrh	r3, [r3, #20]
 272 0064 FA68     		ldr	r2, [r7, #12]
 273 0066 D31A     		subs	r3, r2, r3
 274 0068 FB60     		str	r3, [r7, #12]
 127:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       os_time += os_dly.delta_time;
 275              		.loc 2 127 0
 276 006a 40F20003 		movw	r3, #:lower16:os_dly
 277 006e C0F20003 		movt	r3, #:upper16:os_dly
 278 0072 9B8A     		ldrh	r3, [r3, #20]
 279 0074 1A46     		mov	r2, r3
 280 0076 40F20003 		movw	r3, #:lower16:os_time
 281 007a C0F20003 		movt	r3, #:upper16:os_time
 282 007e 1B68     		ldr	r3, [r3, #0]
 283 0080 D218     		adds	r2, r2, r3
 284 0082 40F20003 		movw	r3, #:lower16:os_time
 285 0086 C0F20003 		movt	r3, #:upper16:os_time
 286 008a 1A60     		str	r2, [r3, #0]
 128:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       os_dly.delta_time = 1;
 287              		.loc 2 128 0
 288 008c 40F20003 		movw	r3, #:lower16:os_dly
 289 0090 C0F20003 		movt	r3, #:upper16:os_dly
 290 0094 4FF00102 		mov	r2, #1
 291 0098 9A82     		strh	r2, [r3, #20]	@ movhi
 129:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       while (os_dly.p_dlnk) {
 292              		.loc 2 129 0
 293 009a 14E0     		b	.L13
 294              	.L16:
 130:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         rt_dec_dly();
 295              		.loc 2 130 0
 296 009c FFF7FEFF 		bl	rt_dec_dly
 131:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         if (delta == 0) break;
 297              		.loc 2 131 0
 298 00a0 FB68     		ldr	r3, [r7, #12]
 299 00a2 002B     		cmp	r3, #0
 300 00a4 3FD0     		beq	.L18
 301              	.L14:
 132:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         delta--;
 302              		.loc 2 132 0
 303 00a6 FB68     		ldr	r3, [r7, #12]
 304 00a8 03F1FF33 		add	r3, r3, #-1
 305 00ac FB60     		str	r3, [r7, #12]
 133:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         os_time++;
 306              		.loc 2 133 0
 307 00ae 40F20003 		movw	r3, #:lower16:os_time
 308 00b2 C0F20003 		movt	r3, #:upper16:os_time
 309 00b6 1B68     		ldr	r3, [r3, #0]
 310 00b8 03F10102 		add	r2, r3, #1
 311 00bc 40F20003 		movw	r3, #:lower16:os_time
 312 00c0 C0F20003 		movt	r3, #:upper16:os_time
 313 00c4 1A60     		str	r2, [r3, #0]
 314              	.L13:
 129:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       while (os_dly.p_dlnk) {
 315              		.loc 2 129 0 discriminator 1
 316 00c6 40F20003 		movw	r3, #:lower16:os_dly
 317 00ca C0F20003 		movt	r3, #:upper16:os_dly
 318 00ce DB68     		ldr	r3, [r3, #12]
 319 00d0 002B     		cmp	r3, #0
 320 00d2 E3D1     		bne	.L16
 129:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       while (os_dly.p_dlnk) {
 321              		.loc 2 129 0 is_stmt 0
 322 00d4 28E0     		b	.L17
 323              	.L12:
 134:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       }
 135:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     } else {
 136:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       os_time           += delta;
 324              		.loc 2 136 0 is_stmt 1
 325 00d6 40F20003 		movw	r3, #:lower16:os_time
 326 00da C0F20003 		movt	r3, #:upper16:os_time
 327 00de 1A68     		ldr	r2, [r3, #0]
 328 00e0 FB68     		ldr	r3, [r7, #12]
 329 00e2 D218     		adds	r2, r2, r3
 330 00e4 40F20003 		movw	r3, #:lower16:os_time
 331 00e8 C0F20003 		movt	r3, #:upper16:os_time
 332 00ec 1A60     		str	r2, [r3, #0]
 137:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       os_dly.delta_time -= delta;
 333              		.loc 2 137 0
 334 00ee 40F20003 		movw	r3, #:lower16:os_dly
 335 00f2 C0F20003 		movt	r3, #:upper16:os_dly
 336 00f6 9A8A     		ldrh	r2, [r3, #20]
 337 00f8 FB68     		ldr	r3, [r7, #12]
 338 00fa 9BB2     		uxth	r3, r3
 339 00fc D31A     		subs	r3, r2, r3
 340 00fe 9AB2     		uxth	r2, r3
 341 0100 40F20003 		movw	r3, #:lower16:os_dly
 342 0104 C0F20003 		movt	r3, #:upper16:os_dly
 343 0108 9A82     		strh	r2, [r3, #20]	@ movhi
 344 010a 0DE0     		b	.L17
 345              	.L11:
 138:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     }
 139:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   } else {
 140:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_time += sleep_time;
 346              		.loc 2 140 0
 347 010c 40F20003 		movw	r3, #:lower16:os_time
 348 0110 C0F20003 		movt	r3, #:upper16:os_time
 349 0114 1A68     		ldr	r2, [r3, #0]
 350 0116 7B68     		ldr	r3, [r7, #4]
 351 0118 D218     		adds	r2, r2, r3
 352 011a 40F20003 		movw	r3, #:lower16:os_time
 353 011e C0F20003 		movt	r3, #:upper16:os_time
 354 0122 1A60     		str	r2, [r3, #0]
 355 0124 00E0     		b	.L17
 356              	.L18:
 131:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         if (delta == 0) break;
 357              		.loc 2 131 0
 358 0126 00BF     		nop
 359              	.L17:
 141:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 142:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 143:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Check the user timers. */
 144:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #ifdef __CMSIS_RTOS
 145:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   sysUserTimerUpdate(sleep_time);
 360              		.loc 2 145 0
 361 0128 7868     		ldr	r0, [r7, #4]
 362 012a FFF7FEFF 		bl	sysUserTimerUpdate
 146:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #else
 147:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_tmr.next) {
 148:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     delta = sleep_time;
 149:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     if (delta >= os_tmr.tcnt) {
 150:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       delta   -= os_tmr.tcnt;
 151:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       os_tmr.tcnt = 1;
 152:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       while (os_tmr.next) {
 153:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         rt_tmr_tick();
 154:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         if (delta == 0) break;
 155:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****         delta--;
 156:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       }
 157:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     } else {
 158:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       os_tmr.tcnt -= delta;
 159:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     }
 160:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 161:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #endif
 162:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 163:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Switch back to highest ready task */
 164:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   next = rt_get_first (&os_rdy);
 363              		.loc 2 164 0
 364 012e 40F20000 		movw	r0, #:lower16:os_rdy
 365 0132 C0F20000 		movt	r0, #:upper16:os_rdy
 366 0136 FFF7FEFF 		bl	rt_get_first
 367 013a B860     		str	r0, [r7, #8]
 165:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_switch_req (next);
 368              		.loc 2 165 0
 369 013c B868     		ldr	r0, [r7, #8]
 370 013e FFF7FEFF 		bl	rt_switch_req
 166:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 167:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_tsk_unlock();
 371              		.loc 2 167 0
 372 0142 FFF7FEFF 		bl	rt_tsk_unlock
 168:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 373              		.loc 2 168 0
 374 0146 07F11007 		add	r7, r7, #16
 375 014a BD46     		mov	sp, r7
 376 014c 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE9:
 380 014e 00BF     		.section	.text.rt_tsk_lock,"ax",%progbits
 381              		.align	2
 382              		.global	rt_tsk_lock
 383              		.thumb
 384              		.thumb_func
 386              	rt_tsk_lock:
 387              	.LFB10:
 169:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 170:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 171:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_tsk_lock -----------------------------------*/
 172:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 173:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** void rt_tsk_lock (void) {
 388              		.loc 2 173 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393 0000 80B4     		push	{r7}
 394              	.LCFI12:
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 00AF     		add	r7, sp, #0
 398              	.LCFI13:
 399              		.cfi_def_cfa_register 7
 174:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Prevent task switching by locking out scheduler */
 175:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_tick_irqn < 0) {
 400              		.loc 2 175 0
 401 0004 40F20003 		movw	r3, #:lower16:os_tick_irqn
 402 0008 C0F20003 		movt	r3, #:upper16:os_tick_irqn
 403 000c 1B68     		ldr	r3, [r3, #0]
 404 000e 002B     		cmp	r3, #0
 405 0010 2ADA     		bge	.L20
 176:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_LOCK();
 406              		.loc 2 176 0
 407 0012 4EF21003 		movw	r3, #57360
 408 0016 CEF20003 		movt	r3, 57344
 409 001a 4FF00502 		mov	r2, #5
 410 001e 1A60     		str	r2, [r3, #0]
 177:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_lock = __TRUE;
 411              		.loc 2 177 0
 412 0020 40F20003 		movw	r3, #:lower16:os_lock
 413 0024 C0F20003 		movt	r3, #:upper16:os_lock
 414 0028 4FF00102 		mov	r2, #1
 415 002c 1A70     		strb	r2, [r3, #0]
 178:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_UNPEND (&pend_flags);
 416              		.loc 2 178 0
 417 002e 4EF60453 		movw	r3, #60676
 418 0032 CEF20003 		movt	r3, 57344
 419 0036 4EF60452 		movw	r2, #60676
 420 003a CEF20002 		movt	r2, 57344
 421 003e 1268     		ldr	r2, [r2, #0]
 422 0040 4FEA9262 		lsr	r2, r2, #26
 423 0044 D2B2     		uxtb	r2, r2
 424 0046 02F00502 		and	r2, r2, #5
 425 004a D1B2     		uxtb	r1, r2
 426 004c 40F20002 		movw	r2, #:lower16:pend_flags
 427 0050 C0F20002 		movt	r2, #:upper16:pend_flags
 428 0054 1170     		strb	r1, [r2, #0]
 429 0056 40F20002 		movw	r2, #:lower16:pend_flags
 430 005a C0F20002 		movt	r2, #:upper16:pend_flags
 431 005e 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 432 0060 4FEA4262 		lsl	r2, r2, #25
 433 0064 1A60     		str	r2, [r3, #0]
 434 0066 3CE0     		b	.L19
 435              	.L20:
 179:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   } else {
 180:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_X_LOCK(os_tick_irqn);
 436              		.loc 2 180 0
 437 0068 40F20003 		movw	r3, #:lower16:os_tick_irqn
 438 006c C0F20003 		movt	r3, #:upper16:os_tick_irqn
 439 0070 1B68     		ldr	r3, [r3, #0]
 440 0072 4FEA6313 		asr	r3, r3, #5
 441 0076 4FEA8302 		lsl	r2, r3, #2
 442 007a 4EF28013 		movw	r3, #57728
 443 007e CEF20003 		movt	r3, 57344
 444 0082 D318     		adds	r3, r2, r3
 445 0084 40F20002 		movw	r2, #:lower16:os_tick_irqn
 446 0088 C0F20002 		movt	r2, #:upper16:os_tick_irqn
 447 008c 1268     		ldr	r2, [r2, #0]
 448 008e 02F01F02 		and	r2, r2, #31
 449 0092 4FF00101 		mov	r1, #1
 450 0096 01FA02F2 		lsl	r2, r1, r2
 451 009a 1A60     		str	r2, [r3, #0]
 181:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_lock = __TRUE;
 452              		.loc 2 181 0
 453 009c 40F20003 		movw	r3, #:lower16:os_lock
 454 00a0 C0F20003 		movt	r3, #:upper16:os_lock
 455 00a4 4FF00102 		mov	r2, #1
 456 00a8 1A70     		strb	r2, [r3, #0]
 182:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_X_UNPEND (&pend_flags);
 457              		.loc 2 182 0
 458 00aa 4EF60453 		movw	r3, #60676
 459 00ae CEF20003 		movt	r3, 57344
 460 00b2 4EF60452 		movw	r2, #60676
 461 00b6 CEF20002 		movt	r2, 57344
 462 00ba 1268     		ldr	r2, [r2, #0]
 463 00bc 4FEA1272 		lsr	r2, r2, #28
 464 00c0 D2B2     		uxtb	r2, r2
 465 00c2 02F00102 		and	r2, r2, #1
 466 00c6 D1B2     		uxtb	r1, r2
 467 00c8 40F20002 		movw	r2, #:lower16:pend_flags
 468 00cc C0F20002 		movt	r2, #:upper16:pend_flags
 469 00d0 1170     		strb	r1, [r2, #0]
 470 00d2 40F20002 		movw	r2, #:lower16:pend_flags
 471 00d6 C0F20002 		movt	r2, #:upper16:pend_flags
 472 00da 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 473 00dc 4FEAC262 		lsl	r2, r2, #27
 474 00e0 1A60     		str	r2, [r3, #0]
 475              	.L19:
 183:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 184:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 476              		.loc 2 184 0
 477 00e2 BD46     		mov	sp, r7
 478 00e4 80BC     		pop	{r7}
 479 00e6 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE10:
 483              		.section	.text.rt_tsk_unlock,"ax",%progbits
 484              		.align	2
 485              		.global	rt_tsk_unlock
 486              		.thumb
 487              		.thumb_func
 489              	rt_tsk_unlock:
 490              	.LFB11:
 185:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 186:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 187:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_tsk_unlock ---------------------------------*/
 188:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 189:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** void rt_tsk_unlock (void) {
 491              		.loc 2 189 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496 0000 80B4     		push	{r7}
 497              	.LCFI14:
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
 500 0002 00AF     		add	r7, sp, #0
 501              	.LCFI15:
 502              		.cfi_def_cfa_register 7
 190:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Unlock scheduler and re-enable task switching */
 191:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_tick_irqn < 0) {
 503              		.loc 2 191 0
 504 0004 40F20003 		movw	r3, #:lower16:os_tick_irqn
 505 0008 C0F20003 		movt	r3, #:upper16:os_tick_irqn
 506 000c 1B68     		ldr	r3, [r3, #0]
 507 000e 002B     		cmp	r3, #0
 508 0010 2BDA     		bge	.L23
 192:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_UNLOCK();
 509              		.loc 2 192 0
 510 0012 4EF21003 		movw	r3, #57360
 511 0016 CEF20003 		movt	r3, 57344
 512 001a 4FF00702 		mov	r2, #7
 513 001e 1A60     		str	r2, [r3, #0]
 193:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_lock = __FALSE;
 514              		.loc 2 193 0
 515 0020 40F20003 		movw	r3, #:lower16:os_lock
 516 0024 C0F20003 		movt	r3, #:upper16:os_lock
 517 0028 4FF00002 		mov	r2, #0
 518 002c 1A70     		strb	r2, [r3, #0]
 194:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_PEND (pend_flags, os_psh_flag);
 519              		.loc 2 194 0
 520 002e 4EF60453 		movw	r3, #60676
 521 0032 CEF20003 		movt	r3, 57344
 522 0036 40F20002 		movw	r2, #:lower16:pend_flags
 523 003a C0F20002 		movt	r2, #:upper16:pend_flags
 524 003e 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 525 0040 1146     		mov	r1, r2
 526 0042 40F20002 		movw	r2, #:lower16:os_psh_flag
 527 0046 C0F20002 		movt	r2, #:upper16:os_psh_flag
 528 004a 1278     		ldrb	r2, [r2, #0]
 529 004c D2B2     		uxtb	r2, r2
 530 004e 4FEA8202 		lsl	r2, r2, #2
 531 0052 0A43     		orrs	r2, r2, r1
 532 0054 4FEA8262 		lsl	r2, r2, #26
 533 0058 1A60     		str	r2, [r3, #0]
 195:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_psh_flag = __FALSE;
 534              		.loc 2 195 0
 535 005a 40F20003 		movw	r3, #:lower16:os_psh_flag
 536 005e C0F20003 		movt	r3, #:upper16:os_psh_flag
 537 0062 4FF00002 		mov	r2, #0
 538 0066 1A70     		strb	r2, [r3, #0]
 539 0068 3AE0     		b	.L22
 540              	.L23:
 196:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   } else {
 197:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_X_UNLOCK(os_tick_irqn);
 541              		.loc 2 197 0
 542 006a 40F20003 		movw	r3, #:lower16:os_tick_irqn
 543 006e C0F20003 		movt	r3, #:upper16:os_tick_irqn
 544 0072 1B68     		ldr	r3, [r3, #0]
 545 0074 4FEA6313 		asr	r3, r3, #5
 546 0078 4FEA8303 		lsl	r3, r3, #2
 547 007c 03F16043 		add	r3, r3, #-536870912
 548 0080 03F56143 		add	r3, r3, #57600
 549 0084 40F20002 		movw	r2, #:lower16:os_tick_irqn
 550 0088 C0F20002 		movt	r2, #:upper16:os_tick_irqn
 551 008c 1268     		ldr	r2, [r2, #0]
 552 008e 02F01F02 		and	r2, r2, #31
 553 0092 4FF00101 		mov	r1, #1
 554 0096 01FA02F2 		lsl	r2, r1, r2
 555 009a 1A60     		str	r2, [r3, #0]
 198:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_lock = __FALSE;
 556              		.loc 2 198 0
 557 009c 40F20003 		movw	r3, #:lower16:os_lock
 558 00a0 C0F20003 		movt	r3, #:upper16:os_lock
 559 00a4 4FF00002 		mov	r2, #0
 560 00a8 1A70     		strb	r2, [r3, #0]
 199:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_X_PEND (pend_flags, os_psh_flag);
 561              		.loc 2 199 0
 562 00aa 4EF60453 		movw	r3, #60676
 563 00ae CEF20003 		movt	r3, 57344
 564 00b2 40F20002 		movw	r2, #:lower16:pend_flags
 565 00b6 C0F20002 		movt	r2, #:upper16:pend_flags
 566 00ba 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 567 00bc 40F20002 		movw	r2, #:lower16:os_psh_flag
 568 00c0 C0F20002 		movt	r2, #:upper16:os_psh_flag
 569 00c4 1278     		ldrb	r2, [r2, #0]
 570 00c6 D2B2     		uxtb	r2, r2
 571 00c8 0A43     		orrs	r2, r2, r1
 572 00ca D2B2     		uxtb	r2, r2
 573 00cc 4FEA0272 		lsl	r2, r2, #28
 574 00d0 1A60     		str	r2, [r3, #0]
 200:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_psh_flag = __FALSE;
 575              		.loc 2 200 0
 576 00d2 40F20003 		movw	r3, #:lower16:os_psh_flag
 577 00d6 C0F20003 		movt	r3, #:upper16:os_psh_flag
 578 00da 4FF00002 		mov	r2, #0
 579 00de 1A70     		strb	r2, [r3, #0]
 580              	.L22:
 201:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 202:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 581              		.loc 2 202 0
 582 00e0 BD46     		mov	sp, r7
 583 00e2 80BC     		pop	{r7}
 584 00e4 7047     		bx	lr
 585              		.cfi_endproc
 586              	.LFE11:
 588 00e6 00BF     		.section	.text.rt_psh_req,"ax",%progbits
 589              		.align	2
 590              		.global	rt_psh_req
 591              		.thumb
 592              		.thumb_func
 594              	rt_psh_req:
 595              	.LFB12:
 203:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 204:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 205:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_psh_req ------------------------------------*/
 206:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 207:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** void rt_psh_req (void) {
 596              		.loc 2 207 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 0000 80B4     		push	{r7}
 602              	.LCFI16:
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 7, -4
 605 0002 00AF     		add	r7, sp, #0
 606              	.LCFI17:
 607              		.cfi_def_cfa_register 7
 208:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Initiate a post service handling request if required. */
 209:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if (os_lock == __FALSE) {
 608              		.loc 2 209 0
 609 0004 40F20003 		movw	r3, #:lower16:os_lock
 610 0008 C0F20003 		movt	r3, #:upper16:os_lock
 611 000c 1B78     		ldrb	r3, [r3, #0]
 612 000e DBB2     		uxtb	r3, r3
 613 0010 002B     		cmp	r3, #0
 614 0012 07D1     		bne	.L26
 210:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     OS_PEND_IRQ ();
 615              		.loc 2 210 0
 616 0014 4EF60453 		movw	r3, #60676
 617 0018 CEF20003 		movt	r3, 57344
 618 001c 4FF08052 		mov	r2, #268435456
 619 0020 1A60     		str	r2, [r3, #0]
 620 0022 06E0     		b	.L25
 621              	.L26:
 211:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 212:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   else {
 213:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_psh_flag = __TRUE;
 622              		.loc 2 213 0
 623 0024 40F20003 		movw	r3, #:lower16:os_psh_flag
 624 0028 C0F20003 		movt	r3, #:upper16:os_psh_flag
 625 002c 4FF00102 		mov	r2, #1
 626 0030 1A70     		strb	r2, [r3, #0]
 627              	.L25:
 214:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 215:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 628              		.loc 2 215 0
 629 0032 BD46     		mov	sp, r7
 630 0034 80BC     		pop	{r7}
 631 0036 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE12:
 635              		.section	.text.rt_pop_req,"ax",%progbits
 636              		.align	2
 637              		.global	rt_pop_req
 638              		.thumb
 639              		.thumb_func
 641              	rt_pop_req:
 642              	.LFB13:
 216:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 217:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 218:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_pop_req ------------------------------------*/
 219:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 220:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** void rt_pop_req (void) {
 643              		.loc 2 220 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 16
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 90B5     		push	{r4, r7, lr}
 648              	.LCFI18:
 649              		.cfi_def_cfa_offset 12
 650              		.cfi_offset 4, -12
 651              		.cfi_offset 7, -8
 652              		.cfi_offset 14, -4
 653 0002 85B0     		sub	sp, sp, #20
 654              	.LCFI19:
 655              		.cfi_def_cfa_offset 32
 656 0004 00AF     		add	r7, sp, #0
 657              	.LCFI20:
 658              		.cfi_def_cfa_register 7
 221:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Process an ISR post service requests. */
 222:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   struct OS_XCB *p_CB;
 223:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   P_TCB next;
 224:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   U32  idx;
 225:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 226:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   os_tsk.run->state = READY;
 659              		.loc 2 226 0
 660 0006 40F20003 		movw	r3, #:lower16:os_tsk
 661 000a C0F20003 		movt	r3, #:upper16:os_tsk
 662 000e 1B68     		ldr	r3, [r3, #0]
 663 0010 4FF00102 		mov	r2, #1
 664 0014 5A70     		strb	r2, [r3, #1]
 227:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_put_rdy_first (os_tsk.run);
 665              		.loc 2 227 0
 666 0016 40F20003 		movw	r3, #:lower16:os_tsk
 667 001a C0F20003 		movt	r3, #:upper16:os_tsk
 668 001e 1B68     		ldr	r3, [r3, #0]
 669 0020 1846     		mov	r0, r3
 670 0022 FFF7FEFF 		bl	rt_put_rdy_first
 228:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 229:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   idx = os_psq->last;
 671              		.loc 2 229 0
 672 0026 40F20003 		movw	r3, #:lower16:os_fifo
 673 002a C0F20003 		movt	r3, #:upper16:os_fifo
 674 002e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 675 0030 FB60     		str	r3, [r7, #12]
 230:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   while (os_psq->count) {
 676              		.loc 2 230 0
 677 0032 4BE0     		b	.L29
 678              	.L35:
 231:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     p_CB = os_psq->q[idx].id;
 679              		.loc 2 231 0
 680 0034 40F20002 		movw	r2, #:lower16:os_fifo
 681 0038 C0F20002 		movt	r2, #:upper16:os_fifo
 682 003c FB68     		ldr	r3, [r7, #12]
 683 003e 4FEAC303 		lsl	r3, r3, #3
 684 0042 D318     		adds	r3, r2, r3
 685 0044 5B68     		ldr	r3, [r3, #4]
 686 0046 BB60     		str	r3, [r7, #8]
 232:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     if (p_CB->cb_type == TCB) {
 687              		.loc 2 232 0
 688 0048 BB68     		ldr	r3, [r7, #8]
 689 004a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 690 004c 002B     		cmp	r3, #0
 691 004e 0ED1     		bne	.L30
 233:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       /* Is of TCB type */
 234:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       rt_evt_psh ((P_TCB)p_CB, (U16)os_psq->q[idx].arg);
 692              		.loc 2 234 0
 693 0050 40F20002 		movw	r2, #:lower16:os_fifo
 694 0054 C0F20002 		movt	r2, #:upper16:os_fifo
 695 0058 FB68     		ldr	r3, [r7, #12]
 696 005a 4FEAC303 		lsl	r3, r3, #3
 697 005e D318     		adds	r3, r2, r3
 698 0060 9B68     		ldr	r3, [r3, #8]
 699 0062 9BB2     		uxth	r3, r3
 700 0064 B868     		ldr	r0, [r7, #8]
 701 0066 1946     		mov	r1, r3
 702 0068 FFF7FEFF 		bl	rt_evt_psh
 703 006c 14E0     		b	.L31
 704              	.L30:
 235:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     }
 236:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     else if (p_CB->cb_type == MCB) {
 705              		.loc 2 236 0
 706 006e BB68     		ldr	r3, [r7, #8]
 707 0070 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 708 0072 012B     		cmp	r3, #1
 709 0074 0DD1     		bne	.L32
 237:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       /* Is of MCB type */
 238:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       rt_mbx_psh ((P_MCB)p_CB, (void *)os_psq->q[idx].arg);
 710              		.loc 2 238 0
 711 0076 40F20002 		movw	r2, #:lower16:os_fifo
 712 007a C0F20002 		movt	r2, #:upper16:os_fifo
 713 007e FB68     		ldr	r3, [r7, #12]
 714 0080 4FEAC303 		lsl	r3, r3, #3
 715 0084 D318     		adds	r3, r2, r3
 716 0086 9B68     		ldr	r3, [r3, #8]
 717 0088 B868     		ldr	r0, [r7, #8]
 718 008a 1946     		mov	r1, r3
 719 008c FFF7FEFF 		bl	rt_mbx_psh
 720 0090 02E0     		b	.L31
 721              	.L32:
 239:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     }
 240:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     else {
 241:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       /* Must be of SCB type */
 242:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       rt_sem_psh ((P_SCB)p_CB);
 722              		.loc 2 242 0
 723 0092 B868     		ldr	r0, [r7, #8]
 724 0094 FFF7FEFF 		bl	rt_sem_psh
 725              	.L31:
 243:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     }
 244:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     if (++idx == os_psq->size) idx = 0;
 726              		.loc 2 244 0
 727 0098 FB68     		ldr	r3, [r7, #12]
 728 009a 03F10103 		add	r3, r3, #1
 729 009e FB60     		str	r3, [r7, #12]
 730 00a0 40F20003 		movw	r3, #:lower16:os_fifo
 731 00a4 C0F20003 		movt	r3, #:upper16:os_fifo
 732 00a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 733 00aa FA68     		ldr	r2, [r7, #12]
 734 00ac 9A42     		cmp	r2, r3
 735 00ae 02D1     		bne	.L33
 736              		.loc 2 244 0 is_stmt 0 discriminator 1
 737 00b0 4FF00003 		mov	r3, #0
 738 00b4 FB60     		str	r3, [r7, #12]
 739              	.L33:
 740              	.LBB6:
 741              	.LBB7:
  79:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("mrs %0, primask" : "=r" (result));
 742              		.loc 1 79 0 is_stmt 1
 743              	@ 79 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h" 1
 744 00b6 EFF31084 		mrs r4, primask
 745              	@ 0 "" 2
 746              		.thumb
 747 00ba 3C60     		str	r4, [r7, #0]
  80:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsid i");
 748              		.loc 1 80 0
 749              	@ 80 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h" 1
 750 00bc 72B6     		cpsid i
 751              	@ 0 "" 2
 752              		.thumb
 753              	.LBE7:
 754              	.LBE6:
 245:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     rt_dec (&os_psq->count);
 755              		.loc 2 245 0
 756 00be 114B     		ldr	r3, .L36
 757 00c0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 758 00c2 02F1FF32 		add	r2, r2, #-1
 759 00c6 D2B2     		uxtb	r2, r2
 760 00c8 1A70     		strb	r2, [r3, #0]
 761              	.LBB8:
 762              	.LBB9:
  72:../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h ****   __asm volatile ("cpsie i");
 763              		.loc 1 72 0
 764              	@ 72 "../Dave/Generated/src/RTOS001/SRC/rt_HAL_CM.h" 1
 765 00ca 62B6     		cpsie i
 766              	@ 0 "" 2
 767              		.thumb
 768              	.L29:
 769              	.LBE9:
 770              	.LBE8:
 230:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   while (os_psq->count) {
 771              		.loc 2 230 0 discriminator 1
 772 00cc 40F20003 		movw	r3, #:lower16:os_fifo
 773 00d0 C0F20003 		movt	r3, #:upper16:os_fifo
 774 00d4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 775 00d6 002B     		cmp	r3, #0
 776 00d8 ACD1     		bne	.L35
 246:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 247:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   os_psq->last = idx;
 777              		.loc 2 247 0
 778 00da 40F20003 		movw	r3, #:lower16:os_fifo
 779 00de C0F20003 		movt	r3, #:upper16:os_fifo
 780 00e2 FA68     		ldr	r2, [r7, #12]
 781 00e4 D2B2     		uxtb	r2, r2
 782 00e6 5A70     		strb	r2, [r3, #1]
 248:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 249:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   next = rt_get_first (&os_rdy);
 783              		.loc 2 249 0
 784 00e8 40F20000 		movw	r0, #:lower16:os_rdy
 785 00ec C0F20000 		movt	r0, #:upper16:os_rdy
 786 00f0 FFF7FEFF 		bl	rt_get_first
 787 00f4 7860     		str	r0, [r7, #4]
 250:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_switch_req (next);
 788              		.loc 2 250 0
 789 00f6 7868     		ldr	r0, [r7, #4]
 790 00f8 FFF7FEFF 		bl	rt_switch_req
 251:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 791              		.loc 2 251 0
 792 00fc 07F11407 		add	r7, r7, #20
 793 0100 BD46     		mov	sp, r7
 794 0102 90BD     		pop	{r4, r7, pc}
 795              	.L37:
 796              		.align	2
 797              	.L36:
 798 0104 02000000 		.word	os_fifo+2
 799              		.cfi_endproc
 800              	.LFE13:
 802              		.section	.text.os_tick_init,"ax",%progbits
 803              		.align	2
 804              		.weak	os_tick_init
 805              		.thumb
 806              		.thumb_func
 808              	os_tick_init:
 809              	.LFB14:
 252:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 253:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 254:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- os_tick_init ----------------------------------*/
 255:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 256:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __weak int os_tick_init (void) {
 810              		.loc 2 256 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              	.LCFI21:
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 00AF     		add	r7, sp, #0
 820              	.LCFI22:
 821              		.cfi_def_cfa_register 7
 257:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Initialize SysTick timer as system tick timer. */
 258:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_systick_init();
 822              		.loc 2 258 0
 823 0004 FFF7FEFF 		bl	rt_systick_init
 259:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   return (-1);  /* Return IRQ number of SysTick timer */
 824              		.loc 2 259 0
 825 0008 4FF0FF33 		mov	r3, #-1
 260:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 826              		.loc 2 260 0
 827 000c 1846     		mov	r0, r3
 828 000e 80BD     		pop	{r7, pc}
 829              		.cfi_endproc
 830              	.LFE14:
 832              		.section	.text.os_tick_val,"ax",%progbits
 833              		.align	2
 834              		.weak	os_tick_val
 835              		.thumb
 836              		.thumb_func
 838              	os_tick_val:
 839              	.LFB15:
 261:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 262:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- os_tick_val -----------------------------------*/
 263:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 264:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __weak U32 os_tick_val (void) {
 840              		.loc 2 264 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              	.LCFI23:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 00AF     		add	r7, sp, #0
 850              	.LCFI24:
 851              		.cfi_def_cfa_register 7
 265:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Get SysTick timer current value (0 .. OS_TRV). */
 266:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   return rt_systick_val();
 852              		.loc 2 266 0
 853 0004 FFF7FEFF 		bl	rt_systick_val
 854 0008 0346     		mov	r3, r0
 267:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 855              		.loc 2 267 0
 856 000a 1846     		mov	r0, r3
 857 000c 80BD     		pop	{r7, pc}
 858              		.cfi_endproc
 859              	.LFE15:
 861 000e 00BF     		.section	.text.os_tick_ovf,"ax",%progbits
 862              		.align	2
 863              		.weak	os_tick_ovf
 864              		.thumb
 865              		.thumb_func
 867              	os_tick_ovf:
 868              	.LFB16:
 268:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 269:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- os_tick_ovf -----------------------------------*/
 270:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 271:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __weak U32 os_tick_ovf (void) {
 869              		.loc 2 271 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873 0000 80B5     		push	{r7, lr}
 874              	.LCFI25:
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 7, -8
 877              		.cfi_offset 14, -4
 878 0002 00AF     		add	r7, sp, #0
 879              	.LCFI26:
 880              		.cfi_def_cfa_register 7
 272:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Get SysTick timer overflow flag */
 273:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   return rt_systick_ovf();
 881              		.loc 2 273 0
 882 0004 FFF7FEFF 		bl	rt_systick_ovf
 883 0008 0346     		mov	r3, r0
 274:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 884              		.loc 2 274 0
 885 000a 1846     		mov	r0, r3
 886 000c 80BD     		pop	{r7, pc}
 887              		.cfi_endproc
 888              	.LFE16:
 890 000e 00BF     		.section	.text.os_tick_irqack,"ax",%progbits
 891              		.align	2
 892              		.weak	os_tick_irqack
 893              		.thumb
 894              		.thumb_func
 896              	os_tick_irqack:
 897              	.LFB17:
 275:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 276:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- os_tick_irqack --------------------------------*/
 277:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 278:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __weak void os_tick_irqack (void) {
 898              		.loc 2 278 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              	.LCFI27:
 905              		.cfi_def_cfa_offset 4
 906              		.cfi_offset 7, -4
 907 0002 00AF     		add	r7, sp, #0
 908              	.LCFI28:
 909              		.cfi_def_cfa_register 7
 279:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Acknowledge timer interrupt. */
 280:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 910              		.loc 2 280 0
 911 0004 BD46     		mov	sp, r7
 912 0006 80BC     		pop	{r7}
 913 0008 7047     		bx	lr
 914              		.cfi_endproc
 915              	.LFE17:
 917 000a 00BF     		.section	.text.rt_systick,"ax",%progbits
 918              		.align	2
 919              		.global	rt_systick
 920              		.thumb
 921              		.thumb_func
 923              	rt_systick:
 924              	.LFB18:
 281:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 282:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 283:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_systick ------------------------------------*/
 284:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 285:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** extern void sysTimerTick(void);
 286:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 287:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** void rt_systick (void) {
 925              		.loc 2 287 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 8
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 80B5     		push	{r7, lr}
 930              	.LCFI29:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              	.LCFI30:
 936              		.cfi_def_cfa_offset 16
 937 0004 00AF     		add	r7, sp, #0
 938              	.LCFI31:
 939              		.cfi_def_cfa_register 7
 288:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Check for system clock update, suspend running task. */
 289:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   P_TCB next;
 290:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 291:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   os_tsk.run->state = READY;
 940              		.loc 2 291 0
 941 0006 40F20003 		movw	r3, #:lower16:os_tsk
 942 000a C0F20003 		movt	r3, #:upper16:os_tsk
 943 000e 1B68     		ldr	r3, [r3, #0]
 944 0010 4FF00102 		mov	r2, #1
 945 0014 5A70     		strb	r2, [r3, #1]
 292:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_put_rdy_first (os_tsk.run);
 946              		.loc 2 292 0
 947 0016 40F20003 		movw	r3, #:lower16:os_tsk
 948 001a C0F20003 		movt	r3, #:upper16:os_tsk
 949 001e 1B68     		ldr	r3, [r3, #0]
 950 0020 1846     		mov	r0, r3
 951 0022 FFF7FEFF 		bl	rt_put_rdy_first
 293:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 294:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Check Round Robin timeout. */
 295:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_chk_robin ();
 952              		.loc 2 295 0
 953 0026 FFF7FEFF 		bl	rt_chk_robin
 296:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 297:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Update delays. */
 298:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   os_time++;
 954              		.loc 2 298 0
 955 002a 40F20003 		movw	r3, #:lower16:os_time
 956 002e C0F20003 		movt	r3, #:upper16:os_time
 957 0032 1B68     		ldr	r3, [r3, #0]
 958 0034 03F10102 		add	r2, r3, #1
 959 0038 40F20003 		movw	r3, #:lower16:os_time
 960 003c C0F20003 		movt	r3, #:upper16:os_time
 961 0040 1A60     		str	r2, [r3, #0]
 299:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_dec_dly ();
 962              		.loc 2 299 0
 963 0042 FFF7FEFF 		bl	rt_dec_dly
 300:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 301:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Check the user timers. */
 302:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #ifdef __CMSIS_RTOS
 303:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   sysTimerTick();
 964              		.loc 2 303 0
 965 0046 FFF7FEFF 		bl	sysTimerTick
 304:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #else
 305:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_tmr_tick ();
 306:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** #endif
 307:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 308:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Switch back to highest ready task */
 309:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   next = rt_get_first (&os_rdy);
 966              		.loc 2 309 0
 967 004a 40F20000 		movw	r0, #:lower16:os_rdy
 968 004e C0F20000 		movt	r0, #:upper16:os_rdy
 969 0052 FFF7FEFF 		bl	rt_get_first
 970 0056 7860     		str	r0, [r7, #4]
 310:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   rt_switch_req (next);
 971              		.loc 2 310 0
 972 0058 7868     		ldr	r0, [r7, #4]
 973 005a FFF7FEFF 		bl	rt_switch_req
 311:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 974              		.loc 2 311 0
 975 005e 07F10807 		add	r7, r7, #8
 976 0062 BD46     		mov	sp, r7
 977 0064 80BD     		pop	{r7, pc}
 978              		.cfi_endproc
 979              	.LFE18:
 981 0066 00BF     		.section	.text.rt_stk_check,"ax",%progbits
 982              		.align	2
 983              		.weak	rt_stk_check
 984              		.thumb
 985              		.thumb_func
 987              	rt_stk_check:
 988              	.LFB19:
 312:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 313:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** /*--------------------------- rt_stk_check ----------------------------------*/
 314:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** 
 315:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** __weak void rt_stk_check (void) {
 989              		.loc 2 315 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 80B5     		push	{r7, lr}
 994              	.LCFI32:
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 00AF     		add	r7, sp, #0
 999              	.LCFI33:
 1000              		.cfi_def_cfa_register 7
 316:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   /* Check for stack overflow. */
 317:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if ((os_tsk.run->tsk_stack < (U32)os_tsk.run->stack) || 
 1001              		.loc 2 317 0
 1002 0004 40F20003 		movw	r3, #:lower16:os_tsk
 1003 0008 C0F20003 		movt	r3, #:upper16:os_tsk
 1004 000c 1B68     		ldr	r3, [r3, #0]
 1005 000e 9A6A     		ldr	r2, [r3, #40]
 1006 0010 40F20003 		movw	r3, #:lower16:os_tsk
 1007 0014 C0F20003 		movt	r3, #:upper16:os_tsk
 1008 0018 1B68     		ldr	r3, [r3, #0]
 1009 001a DB6A     		ldr	r3, [r3, #44]
 1010 001c 9A42     		cmp	r2, r3
 1011 001e 0CD3     		bcc	.L47
 318:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****       (os_tsk.run->stack[0] != MAGIC_WORD)) {
 1012              		.loc 2 318 0 discriminator 1
 1013 0020 40F20003 		movw	r3, #:lower16:os_tsk
 1014 0024 C0F20003 		movt	r3, #:upper16:os_tsk
 1015 0028 1B68     		ldr	r3, [r3, #0]
 1016 002a DB6A     		ldr	r3, [r3, #44]
 1017 002c 1A68     		ldr	r2, [r3, #0]
 317:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   if ((os_tsk.run->tsk_stack < (U32)os_tsk.run->stack) || 
 1018              		.loc 2 317 0 discriminator 1
 1019 002e 42F6A563 		movw	r3, #11941
 1020 0032 CEF25A23 		movt	r3, 57946
 1021 0036 9A42     		cmp	r2, r3
 1022 0038 03D0     		beq	.L46
 1023              	.L47:
 319:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****     os_error (OS_ERR_STK_OVF);
 1024              		.loc 2 319 0
 1025 003a 4FF00100 		mov	r0, #1
 1026 003e FFF7FEFF 		bl	os_error
 1027              	.L46:
 320:../Dave/Generated/src/RTOS001/SRC/rt_System.c ****   }
 321:../Dave/Generated/src/RTOS001/SRC/rt_System.c **** }
 1028              		.loc 2 321 0
 1029 0042 80BD     		pop	{r7, pc}
 1030              		.cfi_endproc
 1031              	.LFE19:
 1033              		.text
 1034              	.Letext0:
 1035              		.file 3 "../Dave/Generated/src/RTOS001/SRC/rt_TypeDef.h"
 1036              		.file 4 "../Dave/Generated/src/RTOS001/SRC/RTX_Config.h"
 1037              		.file 5 "../Dave/Generated/src/RTOS001/SRC/rt_Task.h"
 1038              		.file 6 "../Dave/Generated/src/RTOS001/SRC/rt_List.h"
 1039              		.file 7 "../Dave/Generated/src/RTOS001/SRC/rt_Time.h"
 1040              		.file 8 "../Dave/Generated/src/RTOS001/SRC/rt_Robin.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rt_System.c
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:20     .text.rt_systick_init:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:24     .text.rt_systick_init:00000000 rt_systick_init
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:72     .text.rt_systick_val:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:76     .text.rt_systick_val:00000000 rt_systick_val
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:107    .text.rt_systick_ovf:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:111    .text.rt_systick_ovf:00000000 rt_systick_ovf
                            *COM*:00000004 os_tick_irqn
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:141    .bss:00000000 os_lock
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:142    .bss:00000000 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:143    .bss:00000001 os_psh_flag
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:145    .bss:00000002 pend_flags
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:148    .text.rt_suspend:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:153    .text.rt_suspend:00000000 rt_suspend
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:386    .text.rt_tsk_lock:00000000 rt_tsk_lock
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:211    .text.rt_resume:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:216    .text.rt_resume:00000000 rt_resume
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:489    .text.rt_tsk_unlock:00000000 rt_tsk_unlock
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:381    .text.rt_tsk_lock:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:484    .text.rt_tsk_unlock:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:589    .text.rt_psh_req:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:594    .text.rt_psh_req:00000000 rt_psh_req
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:636    .text.rt_pop_req:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:641    .text.rt_pop_req:00000000 rt_pop_req
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:798    .text.rt_pop_req:00000104 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:803    .text.os_tick_init:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:808    .text.os_tick_init:00000000 os_tick_init
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:833    .text.os_tick_val:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:838    .text.os_tick_val:00000000 os_tick_val
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:862    .text.os_tick_ovf:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:867    .text.os_tick_ovf:00000000 os_tick_ovf
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:891    .text.os_tick_irqack:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:896    .text.os_tick_irqack:00000000 os_tick_irqack
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:918    .text.rt_systick:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:923    .text.rt_systick:00000000 rt_systick
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:982    .text.rt_stk_check:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\ccZF5HxK.s:987    .text.rt_stk_check:00000000 rt_stk_check
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.rt_TypeDef.h.79.db0d61ef3f79bbdae3d134fa36f08304
                           .group:00000000 wm4.RTX_Config.h.42.eb93c57b7f787c25a05db70c41047f1a
                           .group:00000000 wm4.rt_Task.h.38.ad357e63c89f04311a4b4ec53df91b63
                           .group:00000000 wm4.rt_List.h.38.eac26046fac8ea42e6920eca3c3ee440
                           .group:00000000 wm4.rt_HAL_CM.h.36.531af519683d77df9d264c8d6c8a6b22

UNDEFINED SYMBOLS
os_trv
os_dly
sysUserTimerWakeupTime
os_tsk
rt_put_rdy_first
os_robin
os_time
rt_dec_dly
sysUserTimerUpdate
os_rdy
rt_get_first
rt_switch_req
os_fifo
rt_evt_psh
rt_mbx_psh
rt_sem_psh
rt_chk_robin
sysTimerTick
os_error

   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"rt_CMSIS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.rt_ms2tick,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	rt_ms2tick:
  25              	.LFB101:
  26              		.file 1 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c"
   1:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /*******************************************************************************
   2:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** **  DAVE App Name : RTOS001       App Version: 1.0.24               
   3:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** *******************************************************************************/
   6:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
   7:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /*----------------------------------------------------------------------------
   8:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *      RL-ARM - RTX
   9:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *----------------------------------------------------------------------------
  10:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *      Name:    rt_CMSIS.c
  11:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *      Purpose: CMSIS RTOS API
  12:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *      Rev.:    V4.74
  13:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *----------------------------------------------------------------------------
  14:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *
  15:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * Copyright (c) 1999-2009 KEIL, 2009-2013 ARM Germany GmbH
  16:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * All rights reserved.
  17:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * Redistribution and use in source and binary forms, with or without
  18:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * modification, are permitted provided that the following conditions are met:
  19:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *  - Redistributions of source code must retain the above copyright
  20:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *    notice, this list of conditions and the following disclaimer.
  21:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *  - Redistributions in binary form must reproduce the above copyright
  22:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *    notice, this list of conditions and the following disclaimer in the
  23:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *    documentation and/or other materials provided with the distribution.
  24:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used 
  25:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *    to endorse or promote products derived from this software without 
  26:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *    specific prior written permission.
  27:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *
  28:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  29:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  30:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  31:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  32:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  33:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  34:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  35:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  36:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  37:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  *---------------------------------------------------------------------------*/
  40:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  41:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #ifdef __GNUC__
  42:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #pragma GCC optimize("-O1")
  43:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
  44:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  45:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define __CMSIS_GENERIC
  46:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  47:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #ifndef __FPU_PRESENT
  48:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define __FPU_PRESENT 1
  49:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
  50:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "core_cm4.h"
  51:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****  
  52:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_TypeDef.h"
  53:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "RTX_Config.h"
  54:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_System.h"
  55:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Task.h"
  56:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Event.h"
  57:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_List.h"
  58:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Time.h"
  59:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Mutex.h"
  60:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Semaphore.h"
  61:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Mailbox.h"
  62:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_MemBox.h"
  63:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_Memory.h"
  64:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "rt_HAL_CM.h"
  65:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  66:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define os_thread_cb OS_TCB
  67:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  68:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #include "../INC/cmsis_os.h"
  69:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  70:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if (osFeature_Signals != 16)
  71:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #error Invalid "osFeature_Signals" value!
  72:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
  73:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if (osFeature_Semaphore > 65535)
  74:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #error Invalid "osFeature_Semaphore" value!
  75:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
  76:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if (osFeature_Wait != 0)
  77:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #error osWait not supported!
  78:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
  79:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  80:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  81:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Enumeration, structures, defines ====
  82:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  83:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Service Calls defines
  84:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  85:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if defined (__CC_ARM)          /* ARM Compiler */
  86:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  87:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define __NO_RETURN __declspec(noreturn)
  88:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  89:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_type       osEvent
  90:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_status ret
  91:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_value  ret
  92:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_msg    ret
  93:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_mail   ret
  94:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  95:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osCallback_type    osCallback
  96:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osCallback_ret     ret
  97:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
  98:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_0_1(f,t,...)                                                       \
  99:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __svc_indirect(0) t  _##f (t(*)());                                            \
 100:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****                   t     f (void);                                              \
 101:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 102:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __inline   t __##f (void) {                                             \
 103:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(f);                                                              \
 104:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 105:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 106:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_0(f,t,t1,...)                                                    \
 107:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __svc_indirect(0) t  _##f (t(*)(t1),t1);                                       \
 108:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****                   t     f (t1 a1);                                             \
 109:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 110:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __inline   t __##f (t1 a1) {                                            \
 111:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _##f(f,a1);                                                                  \
 112:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 113:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 114:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_1(f,t,t1,...)                                                    \
 115:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __svc_indirect(0) t  _##f (t(*)(t1),t1);                                       \
 116:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****                   t     f (t1 a1);                                             \
 117:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 118:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __inline   t __##f (t1 a1) {                                            \
 119:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(f,a1);                                                           \
 120:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 121:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 122:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_2_1(f,t,t1,t2,...)                                                 \
 123:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __svc_indirect(0) t  _##f (t(*)(t1,t2),t1,t2);                                 \
 124:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****                   t     f (t1 a1, t2 a2);                                      \
 125:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 126:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __inline   t __##f (t1 a1, t2 a2) {                                     \
 127:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(f,a1,a2);                                                        \
 128:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 129:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 130:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_3_1(f,t,t1,t2,t3,...)                                              \
 131:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __svc_indirect(0) t  _##f (t(*)(t1,t2,t3),t1,t2,t3);                           \
 132:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****                   t     f (t1 a1, t2 a2, t3 a3);                               \
 133:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 134:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __inline   t __##f (t1 a1, t2 a2, t3 a3) {                              \
 135:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(f,a1,a2,a3);                                                     \
 136:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 137:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 138:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_4_1(f,t,t1,t2,t3,t4,...)                                           \
 139:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __svc_indirect(0) t  _##f (t(*)(t1,t2,t3,t4),t1,t2,t3,t4);                     \
 140:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****                   t     f (t1 a1, t2 a2, t3 a3, t4 a4);                        \
 141:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 142:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __inline   t __##f (t1 a1, t2 a2, t3 a3, t4 a4) {                       \
 143:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(f,a1,a2,a3,a4);                                                  \
 144:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 145:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 146:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_2 SVC_1_1 
 147:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_3 SVC_1_1 
 148:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_2_3 SVC_2_1 
 149:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 150:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #elif defined (__GNUC__)        /* GNU Compiler */
 151:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 152:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define __NO_RETURN __attribute__((noreturn))
 153:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 154:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** typedef uint32_t __attribute__((vector_size(8)))  ret64;
 155:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** typedef uint32_t __attribute__((vector_size(16))) ret128;
 156:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 157:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_pointer    __r0
 158:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_int32_t    __r0
 159:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_uint32_t   __r0
 160:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_osStatus   __r0
 161:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_osPriority __r0
 162:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_osEvent    {(osStatus)__r0, {(uint32_t)__r1}, {(void *)__r2}}
 163:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_osCallback {(void *)__r0, (void *)__r1}
 164:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 165:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_type        ret128
 166:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_status (ret128){ret.status}
 167:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_value  (ret128){ret.status, ret.value.v}
 168:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_msg    (ret128){ret.status, ret.value.v, (uint32_t)ret.def.message_id}
 169:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_mail   (ret128){ret.status, ret.value.v, (uint32_t)ret.def.mail_id}
 170:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 171:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osCallback_type     ret64
 172:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osCallback_ret     (ret64) {(uint32_t)ret.fp, (uint32_t)ret.arg}
 173:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 174:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_ArgN(n) \
 175:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   register int __r##n __asm("r"#n);
 176:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 177:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_ArgR(n,t,a) \
 178:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   register t   __r##n __asm("r"#n) = a;
 179:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 180:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Arg0()                                                             \
 181:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(0)                                                                  \
 182:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(1)                                                                  \
 183:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(2)                                                                  \
 184:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(3)
 185:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 186:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Arg1(t1)                                                           \
 187:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(0,t1,a1)                                                            \
 188:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(1)                                                                  \
 189:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(2)                                                                  \
 190:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(3)
 191:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 192:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Arg2(t1,t2)                                                        \
 193:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(0,t1,a1)                                                            \
 194:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(1,t2,a2)                                                            \
 195:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(2)                                                                  \
 196:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(3)
 197:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 198:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Arg3(t1,t2,t3)                                                     \
 199:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(0,t1,a1)                                                            \
 200:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(1,t2,a2)                                                            \
 201:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(2,t3,a3)                                                            \
 202:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgN(3)
 203:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 204:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Arg4(t1,t2,t3,t4)                                                  \
 205:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(0,t1,a1)                                                            \
 206:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(1,t2,a2)                                                            \
 207:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(2,t3,a3)                                                            \
 208:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_ArgR(3,t4,a4)
 209:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 210:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if (defined (__CORTEX_M0))
 211:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Call(f)                                                            \
 212:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm volatile                                                               \
 213:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   (                                                                            \
 214:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "ldr r7,="#f"\n\t"                                                         \
 215:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "mov r12,r7\n\t"                                                           \
 216:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "svc 0"                                                                    \
 217:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     :               "=r" (__r0), "=r" (__r1), "=r" (__r2), "=r" (__r3)         \
 218:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     :                "r" (__r0),  "r" (__r1),  "r" (__r2),  "r" (__r3)         \
 219:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     : "r7", "r12", "lr", "cc"                                                  \
 220:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   );
 221:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #else
 222:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Call(f)                                                            \
 223:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm volatile                                                               \
 224:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   (                                                                            \
 225:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "ldr r12,="#f"\n\t"                                                        \
 226:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "svc 0"                                                                    \
 227:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     :               "=r" (__r0), "=r" (__r1), "=r" (__r2), "=r" (__r3)         \
 228:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     :                "r" (__r0),  "r" (__r1),  "r" (__r2),  "r" (__r3)         \
 229:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     : "r12", "lr", "cc"                                                        \
 230:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   );
 231:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 232:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 233:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_0_1(f,t,rv)                                                        \
 234:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 235:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline  t __##f (void) {                                                \
 236:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Arg0();                                                                  \
 237:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Call(f);                                                                 \
 238:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (t) rv;                                                               \
 239:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 240:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 241:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_0(f,t,t1)                                                        \
 242:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 243:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline  t __##f (t1 a1) {                                               \
 244:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Arg1(t1);                                                                \
 245:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Call(f);                                                                 \
 246:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 247:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 248:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_1(f,t,t1,rv)                                                     \
 249:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 250:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline  t __##f (t1 a1) {                                               \
 251:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Arg1(t1);                                                                \
 252:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Call(f);                                                                 \
 253:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (t) rv;                                                               \
 254:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 255:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 256:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_2_1(f,t,t1,t2,rv)                                                  \
 257:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 258:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline  t __##f (t1 a1, t2 a2) {                                        \
 259:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Arg2(t1,t2);                                                             \
 260:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Call(f);                                                                 \
 261:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (t) rv;                                                               \
 262:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 263:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 264:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_3_1(f,t,t1,t2,t3,rv)                                               \
 265:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 266:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline  t __##f (t1 a1, t2 a2, t3 a3) {                                 \
 267:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Arg3(t1,t2,t3);                                                          \
 268:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Call(f);                                                                 \
 269:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (t) rv;                                                               \
 270:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 271:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 272:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_4_1(f,t,t1,t2,t3,t4,rv)                                            \
 273:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __attribute__((always_inline))                                                 \
 274:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline  t __##f (t1 a1, t2 a2, t3 a3, t4 a4) {                          \
 275:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Arg4(t1,t2,t3,t4);                                                       \
 276:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Call(f);                                                                 \
 277:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (t) rv;                                                               \
 278:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 279:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 280:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_2 SVC_1_1 
 281:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_3 SVC_1_1 
 282:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_2_3 SVC_2_1 
 283:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 284:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #elif defined (__ICCARM__)      /* IAR Compiler */
 285:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 286:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define __NO_RETURN __noreturn
 287:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 288:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_osEvent        "=r"(ret.status), "=r"(ret.value), "=r"(ret.def)
 289:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define RET_osCallback     "=r"(ret.fp), "=r"(ret.arg)
 290:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 291:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_type       osEvent
 292:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_status ret
 293:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_value  ret
 294:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_msg    ret
 295:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osEvent_ret_mail   ret
 296:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 297:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osCallback_type    uint64_t
 298:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osCallback_ret     ((uint64_t)ret.fp | ((uint64_t)ret.arg)<<32)
 299:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 300:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Setup(f)                                                           \
 301:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm(                                                                       \
 302:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "mov r12,%0\n"                                                             \
 303:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     :: "r"(&f): "r12"                                                          \
 304:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   );
 305:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 306:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_Ret3()                                                             \
 307:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm(                                                                       \
 308:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "ldr r0,[sp,#0]\n"                                                         \
 309:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "ldr r1,[sp,#4]\n"                                                         \
 310:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     "ldr r2,[sp,#8]\n"                                                         \
 311:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   );
 312:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 313:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_0_1(f,t,...)                                                       \
 314:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (void);                                                                    \
 315:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi t _##f (void);                                   \
 316:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (void) {                                                 \
 317:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 318:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f();                                                               \
 319:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 320:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 321:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_0(f,t,t1,...)                                                    \
 322:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1);                                                                   \
 323:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi t _##f (t1 a1);                                  \
 324:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1) {                                                \
 325:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 326:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _##f(a1);                                                                    \
 327:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 328:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 329:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_1(f,t,t1,...)                                                    \
 330:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1);                                                                   \
 331:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi t _##f (t1 a1);                                  \
 332:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1) {                                                \
 333:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 334:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(a1);                                                             \
 335:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 336:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 337:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_2_1(f,t,t1,t2,...)                                                 \
 338:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1, t2 a2);                                                            \
 339:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi t _##f (t1 a1, t2 a2);                           \
 340:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1, t2 a2) {                                         \
 341:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 342:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(a1,a2);                                                          \
 343:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 344:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 345:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_3_1(f,t,t1,t2,t3,...)                                              \
 346:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1, t2 a2, t3 a3);                                                     \
 347:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi t _##f (t1 a1, t2 a2, t3 a3);                    \
 348:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1, t2 a2, t3 a3) {                                  \
 349:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 350:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(a1,a2,a3);                                                       \
 351:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 352:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 353:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_4_1(f,t,t1,t2,t3,t4,...)                                           \
 354:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1, t2 a2, t3 a3, t4 a4);                                              \
 355:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi t _##f (t1 a1, t2 a2, t3 a3, t4 a4);             \
 356:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1, t2 a2, t3 a3, t4 a4) {                           \
 357:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 358:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return _##f(a1,a2,a3,a4);                                                    \
 359:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 360:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 361:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_2(f,t,t1,rr)                                                     \
 362:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint64_t f (t1 a1);                                                            \
 363:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi uint64_t _##f (t1 a1);                           \
 364:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1) {                                                \
 365:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   t ret;                                                                       \
 366:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f);                                                                \
 367:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _##f(a1);                                                                    \
 368:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm("" : rr : :);                                                          \
 369:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ret;                                                                  \
 370:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 371:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 372:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_1_3(f,t,t1,rr)                                                     \
 373:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1);                                                                   \
 374:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void f##_ (t1 a1) {                                                            \
 375:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   f(a1);                                                                       \
 376:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Ret3();                                                                  \
 377:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }                                                                              \
 378:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi void _##f (t1 a1);                               \
 379:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1) {                                                \
 380:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   t ret;                                                                       \
 381:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f##_);                                                             \
 382:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _##f(a1);                                                                    \
 383:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm("" : rr : :);                                                          \
 384:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ret;                                                                  \
 385:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 386:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 387:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define SVC_2_3(f,t,t1,t2,rr)                                                  \
 388:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** t f (t1 a1, t2 a2);                                                            \
 389:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void f##_ (t1 a1, t2 a2) {                                                     \
 390:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   f(a1,a2);                                                                    \
 391:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Ret3();                                                                  \
 392:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }                                                                              \
 393:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** _Pragma("swi_number=0") __swi void _##f (t1 a1, t2 a2);                        \
 394:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static inline t __##f (t1 a1, t2 a2) {                                         \
 395:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   t ret;                                                                       \
 396:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   SVC_Setup(f##_);                                                             \
 397:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _##f(a1,a2);                                                                 \
 398:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __asm("" : rr : :);                                                          \
 399:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ret;                                                                  \
 400:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 401:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 402:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 403:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 404:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 405:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Callback structure
 406:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** typedef struct {
 407:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void *fp;             // Function pointer
 408:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void *arg;            // Function argument
 409:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** } osCallback;
 410:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 411:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 412:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // OS Section definitions
 413:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #ifdef OS_SECTIONS_LINK_INFO
 414:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern const uint32_t  os_section_id$$Base;
 415:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern const uint32_t  os_section_id$$Limit;
 416:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 417:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 418:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // OS Stack Memory for Threads definitions
 419:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern       uint64_t  os_stack_mem[];
 420:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern const uint32_t  os_stack_sz;
 421:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 422:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // OS Timers external resources
 423:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern const osThreadDef_t   os_thread_def_osTimerThread;
 424:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern       osThreadId      osThreadId_osTimerThread;
 425:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern const osMessageQDef_t os_messageQ_def_osTimerMessageQ;
 426:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** extern       osMessageQId    osMessageQId_osTimerMessageQ;
 427:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 428:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 429:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Helper Functions ====
 430:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 431:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Convert timeout in millisec to system ticks
 432:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static uint32_t rt_ms2tick (uint32_t millisec) {
  27              		.loc 1 432 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 433:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t tick;
 434:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 435:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec == osWaitForever) return 0xFFFF; // Indefinite timeout
  32              		.loc 1 435 0
  33 0000 B0F1FF3F 		cmp	r0, #-1
  34 0004 18D0     		beq	.L3
 436:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec > 4000000) return 0xFFFE;        // Max ticks supported
  35              		.loc 1 436 0
  36 0006 4FF41063 		mov	r3, #2304
  37 000a C0F23D03 		movt	r3, 61
  38 000e 9842     		cmp	r0, r3
  39 0010 15D8     		bhi	.L4
 437:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 438:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tick = ((1000 * millisec) + os_clockrate - 1)  / os_clockrate;
  40              		.loc 1 438 0
  41 0012 40F20003 		movw	r3, #:lower16:os_clockrate
  42 0016 C0F20003 		movt	r3, #:upper16:os_clockrate
  43 001a 1B68     		ldr	r3, [r3, #0]
  44 001c 03F1FF32 		add	r2, r3, #-1
  45 0020 4FF47A71 		mov	r1, #1000
  46 0024 01FB0020 		mla	r0, r1, r0, r2
  47 0028 B0FBF3F0 		udiv	r0, r0, r3
  48 002c 4FF6FE72 		movw	r2, #65534
  49 0030 9042     		cmp	r0, r2
  50 0032 28BF     		it	cs
  51 0034 1046     		movcs	r0, r2
  52 0036 7047     		bx	lr
  53              	.L3:
 435:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec == osWaitForever) return 0xFFFF; // Indefinite timeout
  54              		.loc 1 435 0
  55 0038 4FF6FF70 		movw	r0, #65535
  56 003c 7047     		bx	lr
  57              	.L4:
 436:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec > 4000000) return 0xFFFE;        // Max ticks supported
  58              		.loc 1 436 0
  59 003e 4FF6FE70 		movw	r0, #65534
 439:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tick > 0xFFFE) return 0xFFFE;
 440:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
 441:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return tick;
 442:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
  60              		.loc 1 442 0
  61 0042 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE101:
  65              		.section	.text.rt_tid2ptcb,"ax",%progbits
  66              		.align	2
  67              		.thumb
  68              		.thumb_func
  70              	rt_tid2ptcb:
  71              	.LFB102:
 443:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 444:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Convert Thread ID to TCB pointer
 445:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static P_TCB rt_tid2ptcb (osThreadId thread_id) {
  72              		.loc 1 445 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 446:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB ptcb;
 447:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 448:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (thread_id == NULL) return NULL;
  77              		.loc 1 448 0
  78 0000 0346     		mov	r3, r0
  79 0002 40B1     		cbz	r0, .L7
 449:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 450:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((uint32_t)thread_id & 3) return NULL;
  80              		.loc 1 450 0
  81 0004 10F0030F 		tst	r0, #3
  82 0008 08D1     		bne	.L8
 451:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 452:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #ifdef OS_SECTIONS_LINK_INFO
 453:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((os_section_id$$Base != 0) && (os_section_id$$Limit != 0)) {
 454:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (thread_id  < (osThreadId)os_section_id$$Base)  return NULL;
 455:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (thread_id >= (osThreadId)os_section_id$$Limit) return NULL;
 456:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 457:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 458:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 459:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = thread_id;
 460:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 461:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb->cb_type != TCB) return NULL;
  83              		.loc 1 461 0
  84 000a 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
  85 000c 0028     		cmp	r0, #0
  86 000e 0CBF     		ite	eq
  87 0010 1846     		moveq	r0, r3
  88 0012 0020     		movne	r0, #0
  89 0014 7047     		bx	lr
  90              	.L7:
 448:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (thread_id == NULL) return NULL;
  91              		.loc 1 448 0
  92 0016 4FF00000 		mov	r0, #0
  93 001a 7047     		bx	lr
  94              	.L8:
 450:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((uint32_t)thread_id & 3) return NULL;
  95              		.loc 1 450 0
  96 001c 4FF00000 		mov	r0, #0
 462:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 463:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ptcb;
 464:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
  97              		.loc 1 464 0
  98 0020 7047     		bx	lr
  99              		.cfi_endproc
 100              	.LFE102:
 102 0022 00BF     		.section	.text.rt_id2obj,"ax",%progbits
 103              		.align	2
 104              		.thumb
 105              		.thumb_func
 107              	rt_id2obj:
 108              	.LFB103:
 465:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 466:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Convert ID pointer to Object pointer
 467:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static void *rt_id2obj (void *id) {
 109              		.loc 1 467 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 468:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 469:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((uint32_t)id & 3) return NULL;
 114              		.loc 1 469 0
 115 0000 00F00303 		and	r3, r0, #3
 470:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 471:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #ifdef OS_SECTIONS_LINK_INFO
 472:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((os_section_id$$Base != 0) && (os_section_id$$Limit != 0)) {
 473:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (id  < (void *)os_section_id$$Base)  return NULL;
 474:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (id >= (void *)os_section_id$$Limit) return NULL;
 475:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 476:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 477:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 478:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return id;
 479:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 116              		.loc 1 479 0
 117 0004 002B     		cmp	r3, #0
 118 0006 18BF     		it	ne
 119 0008 0020     		movne	r0, #0
 120 000a 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE103:
 124              		.comm	os_initialized,1,1
 125              		.comm	os_running,1,1
 126              		.section	.text.svcKernelInitialize,"ax",%progbits
 127              		.align	2
 128              		.global	svcKernelInitialize
 129              		.thumb
 130              		.thumb_func
 132              	svcKernelInitialize:
 133              	.LFB108:
 480:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 481:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 482:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Kernel Control ====
 483:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 484:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint8_t os_initialized;                         // Kernel Initialized flag
 485:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint8_t os_running;                             // Kernel Running flag
 486:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 487:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Kernel Control Service Calls declarations
 488:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelInitialize, osStatus, RET_osStatus)
 489:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelStart,      osStatus, RET_osStatus)
 490:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelRunning,    int32_t,  RET_int32_t)
 491:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelSysTick,    uint32_t, RET_uint32_t)
 492:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 493:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static void  sysThreadError   (osStatus status);
 494:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osThreadId   svcThreadCreate  (const osThreadDef_t *thread_def, void *argument);
 495:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMessageQId svcMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id);
 496:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 497:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Kernel Control Service Calls
 498:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 499:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Initialize the RTOS Kernel for creating objects
 500:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcKernelInitialize (void) {
 134              		.loc 1 500 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 08B5     		push	{r3, lr}
 139              	.LCFI0:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
 501:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   int ret;
 502:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 503:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (!os_initialized) {
 143              		.loc 1 503 0
 144 0002 40F20003 		movw	r3, #:lower16:os_initialized
 145 0006 C0F20003 		movt	r3, #:upper16:os_initialized
 146 000a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 147 000c 73B9     		cbnz	r3, .L13
 504:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 505:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Init Thread Stack Memory (must be 8-byte aligned)
 506:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if ((uint32_t)os_stack_mem & 7) return osErrorNoMemory;
 507:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret = rt_init_mem(os_stack_mem, os_stack_sz);
 148              		.loc 1 507 0
 149 000e 40F20003 		movw	r3, #:lower16:os_stack_sz
 150 0012 C0F20003 		movt	r3, #:upper16:os_stack_sz
 151 0016 40F20000 		movw	r0, #:lower16:os_stack_mem
 152 001a C0F20000 		movt	r0, #:upper16:os_stack_mem
 153 001e 1968     		ldr	r1, [r3, #0]
 154 0020 FFF7FEFF 		bl	rt_init_mem
 508:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (ret != 0) return osErrorNoMemory;
 155              		.loc 1 508 0
 156 0024 0028     		cmp	r0, #0
 157 0026 38D1     		bne	.L16
 509:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 510:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     rt_sys_init();                              // RTX System Initialization
 158              		.loc 1 510 0
 159 0028 FFF7FEFF 		bl	rt_sys_init
 160              	.L13:
 511:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 512:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 513:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_tsk.run->prio = 255;                       // Highest priority
 161              		.loc 1 513 0
 162 002c 40F20003 		movw	r3, #:lower16:os_tsk
 163 0030 C0F20003 		movt	r3, #:upper16:os_tsk
 164 0034 1B68     		ldr	r3, [r3, #0]
 165 0036 4FF0FF02 		mov	r2, #255
 166 003a 9A70     		strb	r2, [r3, #2]
 514:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 515:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (!os_initialized) {
 167              		.loc 1 515 0
 168 003c 40F20003 		movw	r3, #:lower16:os_initialized
 169 0040 C0F20003 		movt	r3, #:upper16:os_initialized
 170 0044 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 171 0046 CBB9     		cbnz	r3, .L15
 516:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Create OS Timers resources (Message Queue & Thread)
 517:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     osMessageQId_osTimerMessageQ = svcMessageCreate (&os_messageQ_def_osTimerMessageQ, NULL);
 172              		.loc 1 517 0
 173 0048 40F20000 		movw	r0, #:lower16:os_messageQ_def_osTimerMessageQ
 174 004c C0F20000 		movt	r0, #:upper16:os_messageQ_def_osTimerMessageQ
 175 0050 4FF00001 		mov	r1, #0
 176 0054 FFF7FEFF 		bl	svcMessageCreate
 177 0058 40F20003 		movw	r3, #:lower16:osMessageQId_osTimerMessageQ
 178 005c C0F20003 		movt	r3, #:upper16:osMessageQId_osTimerMessageQ
 179 0060 1860     		str	r0, [r3, #0]
 518:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     osThreadId_osTimerThread = svcThreadCreate(&os_thread_def_osTimerThread, NULL);
 180              		.loc 1 518 0
 181 0062 40F20000 		movw	r0, #:lower16:os_thread_def_osTimerThread
 182 0066 C0F20000 		movt	r0, #:upper16:os_thread_def_osTimerThread
 183 006a 4FF00001 		mov	r1, #0
 184 006e FFF7FEFF 		bl	svcThreadCreate
 185 0072 40F20003 		movw	r3, #:lower16:osThreadId_osTimerThread
 186 0076 C0F20003 		movt	r3, #:upper16:osThreadId_osTimerThread
 187 007a 1860     		str	r0, [r3, #0]
 188              	.L15:
 519:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 520:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 521:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sysThreadError(osOK);
 522:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 523:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_initialized = 1;
 189              		.loc 1 523 0
 190 007c 40F20003 		movw	r3, #:lower16:os_initialized
 191 0080 C0F20003 		movt	r3, #:upper16:os_initialized
 192 0084 4FF00102 		mov	r2, #1
 193 0088 1A70     		strb	r2, [r3, #0]
 524:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_running = 0;
 194              		.loc 1 524 0
 195 008a 40F20003 		movw	r3, #:lower16:os_running
 196 008e C0F20003 		movt	r3, #:upper16:os_running
 197 0092 4FF00000 		mov	r0, #0
 198 0096 1870     		strb	r0, [r3, #0]
 525:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 526:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 199              		.loc 1 526 0
 200 0098 08BD     		pop	{r3, pc}
 201              	.L16:
 508:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (ret != 0) return osErrorNoMemory;
 202              		.loc 1 508 0
 203 009a 4FF08500 		mov	r0, #133
 527:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 204              		.loc 1 527 0
 205 009e 08BD     		pop	{r3, pc}
 206              		.cfi_endproc
 207              	.LFE108:
 209              		.section	.text.svcKernelStart,"ax",%progbits
 210              		.align	2
 211              		.global	svcKernelStart
 212              		.thumb
 213              		.thumb_func
 215              	svcKernelStart:
 216              	.LFB109:
 528:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 529:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Start the RTOS Kernel
 530:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcKernelStart (void) {
 217              		.loc 1 530 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 10B5     		push	{r4, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 4, -8
 225              		.cfi_offset 14, -4
 531:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 532:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (os_running) return osOK;
 226              		.loc 1 532 0
 227 0002 40F20003 		movw	r3, #:lower16:os_running
 228 0006 C0F20003 		movt	r3, #:upper16:os_running
 229 000a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 230 000c 53BB     		cbnz	r3, .L18
 533:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 534:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_tsk_prio(0, os_tsk.run->prio_base);        // Restore priority
 231              		.loc 1 534 0
 232 000e 40F20004 		movw	r4, #:lower16:os_tsk
 233 0012 C0F20004 		movt	r4, #:upper16:os_tsk
 234 0016 2368     		ldr	r3, [r4, #0]
 235 0018 4FF00000 		mov	r0, #0
 236 001c 93F82410 		ldrb	r1, [r3, #36]	@ zero_extendqisi2
 237 0020 FFF7FEFF 		bl	rt_tsk_prio
 535:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (os_tsk.run->task_id == 0xFF) {            // Idle Thread
 238              		.loc 1 535 0
 239 0024 2268     		ldr	r2, [r4, #0]
 240 0026 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 241 0028 FF2B     		cmp	r3, #255
 242 002a 04D1     		bne	.L19
 536:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     __set_PSP(os_tsk.run->tsk_stack + 8*4);     // Setup PSP
 243              		.loc 1 536 0
 244 002c 936A     		ldr	r3, [r2, #40]
 245 002e 03F12003 		add	r3, r3, #32
 246              	.LBB204:
 247              	.LBB205:
 248              		.file 2 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cmFunc.h"
   1:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /**************************************************************************//**
   2:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  * @file     core_cmFunc.h
   3:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  * @version  V3.20
   5:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  * @date     25. February 2013
   6:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  *
   7:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  * @note
   8:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  *
   9:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  ******************************************************************************/
  10:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  12:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    All rights reserved.
  13:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    - Redistributions of source code must retain the above copyright
  16:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****      documentation and/or other materials provided with the distribution.
  20:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****      to endorse or promote products derived from this software without
  22:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****      specific prior written permission.
  23:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    *
  24:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    ---------------------------------------------------------------------------*/
  36:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  37:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  38:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  39:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #define __CORE_CMFUNC_H
  40:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  41:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  42:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  43:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  44:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  45:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   @{
  46:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
  47:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  48:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* ARM armcc specific functions */
  50:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  51:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  52:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #endif
  54:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  55:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  56:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  57:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  58:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Control Register
  59:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  60:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the Control Register.
  61:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  62:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               Control Register value
  63:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
  64:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  65:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
  66:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  67:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regControl);
  68:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
  69:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  70:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  71:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Control Register
  72:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  73:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function writes the given value to the Control Register.
  74:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  75:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    control  Control Register value to set
  76:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
  77:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  78:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
  79:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  80:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regControl = control;
  81:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
  82:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  83:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  84:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get IPSR Register
  85:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  86:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the IPSR Register.
  87:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  88:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               IPSR Register value
  89:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
  90:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  91:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
  92:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  93:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regIPSR);
  94:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
  95:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  96:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  97:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get APSR Register
  98:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
  99:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the APSR Register.
 100:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 101:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               APSR Register value
 102:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 103:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
 104:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 105:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
 106:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regAPSR);
 107:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 108:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 109:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 110:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get xPSR Register
 111:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 112:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the xPSR Register.
 113:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 114:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               xPSR Register value
 115:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 116:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 117:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 118:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 119:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regXPSR);
 120:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 121:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 122:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 123:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 124:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 125:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 126:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 127:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               PSP Register value
 128:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 129:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 130:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 131:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 132:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regProcessStackPointer);
 133:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 134:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 135:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 136:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 137:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 138:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 139:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 140:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 141:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 142:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 143:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 144:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 145:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 146:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 147:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 148:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 149:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 150:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 151:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 152:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 153:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               MSP Register value
 154:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 155:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 156:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 157:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 158:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regMainStackPointer);
 159:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 160:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 161:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 162:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 163:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 164:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 165:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 166:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 167:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 168:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 169:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 170:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 171:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 172:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 173:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 174:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 175:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Priority Mask
 176:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 177:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 178:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 179:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               Priority Mask value
 180:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 181:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 182:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 183:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 184:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regPriMask);
 185:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 186:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 187:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 188:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Priority Mask
 189:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 190:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 191:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 192:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 193:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 194:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 195:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 196:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 197:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regPriMask = (priMask);
 198:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 199:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 200:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 201:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 202:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 203:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Enable FIQ
 204:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 205:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 206:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     Can only be executed in Privileged modes.
 207:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 208:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 209:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 210:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 211:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Disable FIQ
 212:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 213:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 214:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     Can only be executed in Privileged modes.
 215:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 216:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 217:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 218:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 219:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Base Priority
 220:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 221:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 222:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 223:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               Base Priority register value
 224:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 225:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 226:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 227:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 228:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regBasePri);
 229:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 230:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 231:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 232:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Base Priority
 233:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 234:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 235:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 236:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 237:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 238:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 239:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 240:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 241:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 242:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 243:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 244:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 245:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Fault Mask
 246:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 247:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 248:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 249:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               Fault Mask register value
 250:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 251:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 252:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 253:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 254:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regFaultMask);
 255:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 256:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 257:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 258:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Fault Mask
 259:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 260:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 261:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 262:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 263:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 264:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 265:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 266:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 267:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 268:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 269:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 270:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 271:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 272:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 273:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 274:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 275:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get FPSCR
 276:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 277:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 278:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 279:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               Floating Point Status/Control register value
 280:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 281:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 282:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 283:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 284:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 285:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(__regfpscr);
 286:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #else
 287:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****    return(0);
 288:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #endif
 289:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 290:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 291:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 292:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set FPSCR
 293:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 294:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 295:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 296:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 297:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 298:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 299:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 300:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 301:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 302:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __regfpscr = (fpscr);
 303:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #endif
 304:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 305:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 306:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 307:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 308:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 309:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 310:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* IAR iccarm specific functions */
 311:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 312:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #include <cmsis_iar.h>
 313:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 314:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 315:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 316:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* TI CCS specific functions */
 317:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 318:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #include <cmsis_ccs.h>
 319:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 320:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 321:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 322:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /* GNU gcc specific functions */
 323:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 324:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 325:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 326:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 327:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   Can only be executed in Privileged modes.
 328:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 329:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 330:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 331:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 332:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 333:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 334:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 335:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 336:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 337:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 338:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   Can only be executed in Privileged modes.
 339:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 340:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 341:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 342:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 343:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 344:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 345:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 346:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Control Register
 347:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 348:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the Control Register.
 349:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 350:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               Control Register value
 351:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 352:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
 353:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 354:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   uint32_t result;
 355:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 357:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(result);
 358:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 359:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 360:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 361:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Control Register
 362:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 363:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function writes the given value to the Control Register.
 364:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 365:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    control  Control Register value to set
 366:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 367:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 368:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 369:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 370:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 371:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 372:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 373:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get IPSR Register
 374:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 375:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the IPSR Register.
 376:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 377:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               IPSR Register value
 378:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 379:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 380:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 381:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   uint32_t result;
 382:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 384:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(result);
 385:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 386:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 387:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 388:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get APSR Register
 389:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 390:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the APSR Register.
 391:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 392:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               APSR Register value
 393:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 394:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 395:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 396:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   uint32_t result;
 397:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 398:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 399:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(result);
 400:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 401:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 402:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 403:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get xPSR Register
 404:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 405:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the content of the xPSR Register.
 406:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 407:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               xPSR Register value
 408:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 409:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 410:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 411:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   uint32_t result;
 412:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 413:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 414:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(result);
 415:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 416:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 417:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 418:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 419:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 420:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 421:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 422:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \return               PSP Register value
 423:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 424:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 425:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 426:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   register uint32_t result;
 427:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 428:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 429:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   return(result);
 430:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** }
 431:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 432:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 433:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 434:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 435:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 436:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** 
 437:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 438:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****  */
 439:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 440:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h **** {
 441:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 249              		.loc 2 441 0
 250              	@ 441 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 251 0032 83F30988 		MSR psp, r3
 252              	
 253              	@ 0 "" 2
 254              		.thumb
 255              	.L19:
 256              	.LBE205:
 257              	.LBE204:
 537:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 538:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (os_tsk.new == NULL) {                     // Force context switch
 258              		.loc 1 538 0
 259 0036 40F20003 		movw	r3, #:lower16:os_tsk
 260 003a C0F20003 		movt	r3, #:upper16:os_tsk
 261 003e 5B68     		ldr	r3, [r3, #4]
 262 0040 3BB9     		cbnz	r3, .L20
 539:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     os_tsk.new = os_tsk.run;
 263              		.loc 1 539 0
 264 0042 40F20003 		movw	r3, #:lower16:os_tsk
 265 0046 C0F20003 		movt	r3, #:upper16:os_tsk
 266 004a 5A60     		str	r2, [r3, #4]
 540:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     os_tsk.run = NULL;
 267              		.loc 1 540 0
 268 004c 4FF00002 		mov	r2, #0
 269 0050 1A60     		str	r2, [r3, #0]
 270              	.L20:
 541:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 542:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 543:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_sys_start();
 271              		.loc 1 543 0
 272 0052 FFF7FEFF 		bl	rt_sys_start
 544:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 545:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_running = 1;
 273              		.loc 1 545 0
 274 0056 40F20003 		movw	r3, #:lower16:os_running
 275 005a C0F20003 		movt	r3, #:upper16:os_running
 276 005e 4FF00102 		mov	r2, #1
 277 0062 1A70     		strb	r2, [r3, #0]
 278              	.L18:
 546:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 547:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 548:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 279              		.loc 1 548 0
 280 0064 4FF00000 		mov	r0, #0
 281 0068 10BD     		pop	{r4, pc}
 282              		.cfi_endproc
 283              	.LFE109:
 285 006a 00BF     		.section	.text.svcKernelRunning,"ax",%progbits
 286              		.align	2
 287              		.global	svcKernelRunning
 288              		.thumb
 289              		.thumb_func
 291              	svcKernelRunning:
 292              	.LFB110:
 549:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 550:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Check if the RTOS kernel is already started
 551:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t svcKernelRunning (void) {
 293              		.loc 1 551 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 552:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return os_running;
 298              		.loc 1 552 0
 299 0000 40F20003 		movw	r3, #:lower16:os_running
 300 0004 C0F20003 		movt	r3, #:upper16:os_running
 553:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 301              		.loc 1 553 0
 302 0008 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 303 000a 7047     		bx	lr
 304              		.cfi_endproc
 305              	.LFE110:
 307              		.section	.text.svcKernelSysTick,"ax",%progbits
 308              		.align	2
 309              		.global	svcKernelSysTick
 310              		.thumb
 311              		.thumb_func
 313              	svcKernelSysTick:
 314              	.LFB111:
 554:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 555:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get the RTOS kernel system timer counter
 556:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint32_t svcKernelSysTick (void) {
 315              		.loc 1 556 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 557:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t tick, tick0;
 558:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 559:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tick = os_tick_val();
 324              		.loc 1 559 0
 325 0002 FFF7FEFF 		bl	os_tick_val
 326 0006 0446     		mov	r4, r0
 560:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (os_tick_ovf()) {
 327              		.loc 1 560 0
 328 0008 FFF7FEFF 		bl	os_tick_ovf
 329 000c A0B1     		cbz	r0, .L23
 561:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     tick0 = os_tick_val();
 330              		.loc 1 561 0
 331 000e FFF7FEFF 		bl	os_tick_val
 562:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (tick0 < tick) tick = tick0;
 563:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     tick += (os_trv + 1) * (os_time + 1);
 332              		.loc 1 563 0
 333 0012 40F20003 		movw	r3, #:lower16:os_time
 334 0016 C0F20003 		movt	r3, #:upper16:os_time
 335 001a 1968     		ldr	r1, [r3, #0]
 336 001c 40F20002 		movw	r2, #:lower16:os_trv
 337 0020 C0F20002 		movt	r2, #:upper16:os_trv
 338 0024 1368     		ldr	r3, [r2, #0]
 339 0026 03F10103 		add	r3, r3, #1
 340 002a 01FB0333 		mla	r3, r1, r3, r3
 341 002e A042     		cmp	r0, r4
 342 0030 94BF     		ite	ls
 343 0032 1818     		addls	r0, r3, r0
 344 0034 1819     		addhi	r0, r3, r4
 345 0036 10BD     		pop	{r4, pc}
 346              	.L23:
 564:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
 565:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     tick += (os_trv + 1) *  os_time;
 347              		.loc 1 565 0
 348 0038 40F20003 		movw	r3, #:lower16:os_trv
 349 003c C0F20003 		movt	r3, #:upper16:os_trv
 350 0040 1868     		ldr	r0, [r3, #0]
 351 0042 40F20003 		movw	r3, #:lower16:os_time
 352 0046 C0F20003 		movt	r3, #:upper16:os_time
 353 004a 1B68     		ldr	r3, [r3, #0]
 354 004c 00FB0333 		mla	r3, r0, r3, r3
 355 0050 E018     		adds	r0, r4, r3
 566:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 567:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 568:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return tick;
 569:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 356              		.loc 1 569 0
 357 0052 10BD     		pop	{r4, pc}
 358              		.cfi_endproc
 359              	.LFE111:
 361              		.section	.text.osKernelInitialize,"ax",%progbits
 362              		.align	2
 363              		.global	osKernelInitialize
 364              		.thumb
 365              		.thumb_func
 367              	osKernelInitialize:
 368              	.LFB112:
 570:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 571:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Kernel Control Public API
 572:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 573:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Initialize the RTOS Kernel for creating objects
 574:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osKernelInitialize (void) {
 369              		.loc 1 574 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 10B5     		push	{r4, lr}
 374              	.LCFI3:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 378              	.LBB206:
 379              	.LBB207:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 380              		.loc 2 383 0
 381              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 382 0002 EFF30584 		MRS r4, ipsr
 383              	@ 0 "" 2
 384              		.thumb
 385              	.LBE207:
 386              	.LBE206:
 575:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 387              		.loc 1 575 0
 388 0006 5CB9     		cbnz	r4, .L28
 389              	.LBB208:
 390              	.LBB209:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 391              		.loc 2 356 0
 392              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 393 0008 EFF31484 		MRS r4, control
 394              	@ 0 "" 2
 395              		.thumb
 396              	.LBE209:
 397              	.LBE208:
 576:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((__get_CONTROL() & 1) == 0) {             // Privileged mode
 398              		.loc 1 576 0
 399 000c 14F0010F 		tst	r4, #1
 400 0010 02D1     		bne	.L27
 577:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcKernelInitialize();
 401              		.loc 1 577 0
 402 0012 FFF7FEFF 		bl	svcKernelInitialize
 403 0016 10BD     		pop	{r4, pc}
 404              	.L27:
 405              	.LBB210:
 406              	.LBB211:
 488:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelInitialize, osStatus, RET_osStatus)
 407              		.loc 1 488 0
 408              	@ 488 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 409 0018 DFF80CC0 		ldr r12,=svcKernelInitialize
 410 001c 00DF     		svc 0
 411              	@ 0 "" 2
 412              		.thumb
 413              	.LBE211:
 414              	.LBE210:
 578:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
 579:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcKernelInitialize();
 415              		.loc 1 579 0
 416 001e 10BD     		pop	{r4, pc}
 417              	.L28:
 575:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 418              		.loc 1 575 0
 419 0020 4FF08200 		mov	r0, #130
 580:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 581:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 420              		.loc 1 581 0
 421 0024 10BD     		pop	{r4, pc}
 422              		.cfi_endproc
 423              	.LFE112:
 425 0026 0000     		.section	.text.osKernelStart,"ax",%progbits
 426              		.align	2
 427              		.global	osKernelStart
 428              		.thumb
 429              		.thumb_func
 431              	osKernelStart:
 432              	.LFB113:
 582:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 583:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Start the RTOS Kernel
 584:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osKernelStart (void) {
 433              		.loc 1 584 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 32
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437 0000 30B5     		push	{r4, r5, lr}
 438              	.LCFI4:
 439              		.cfi_def_cfa_offset 12
 440              		.cfi_offset 4, -12
 441              		.cfi_offset 5, -8
 442              		.cfi_offset 14, -4
 443 0002 89B0     		sub	sp, sp, #36
 444              	.LCFI5:
 445              		.cfi_def_cfa_offset 48
 446              	.LBB212:
 447              	.LBB213:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 448              		.loc 2 383 0
 449              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 450 0004 EFF30584 		MRS r4, ipsr
 451              	@ 0 "" 2
 452              		.thumb
 453              	.LBE213:
 454              	.LBE212:
 585:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t stack[8];
 586:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 587:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 455              		.loc 1 587 0
 456 0008 002C     		cmp	r4, #0
 457 000a 3AD1     		bne	.L38
 458              	.LBB214:
 459              	.LBB215:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 460              		.loc 2 356 0
 461              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 462 000c EFF31484 		MRS r4, control
 463              	@ 0 "" 2
 464              		.thumb
 465              	.LBE215:
 466              	.LBE214:
 588:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   switch (__get_CONTROL() & 0x03) {
 467              		.loc 1 588 0
 468 0010 04F00304 		and	r4, r4, #3
 469 0014 032C     		cmp	r4, #3
 470 0016 30D8     		bhi	.L31
 471 0018 DFE804F0 		tbb	[pc, r4]
 472              	.L35:
 473 001c 02       		.byte	(.L32-.L35)/2
 474 001d 36       		.byte	(.L39-.L35)/2
 475 001e 16       		.byte	(.L33-.L35)/2
 476 001f 27       		.byte	(.L34-.L35)/2
 477              		.align	1
 478              	.L32:
 479              	.LBB216:
 480              	.LBB217:
 481              		.loc 2 441 0
 482 0020 08AC     		add	r4, sp, #32
 483              	@ 441 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 484 0022 84F30988 		MSR psp, r4
 485              	
 486              	@ 0 "" 2
 487              		.thumb
 488              	.LBE217:
 489              	.LBE216:
 589:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case 0x00:                                  // Privileged Thread mode & MSP
 590:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       __set_PSP((uint32_t)(stack + 8));         // Initial PSP
 591:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if (os_flags & 1) {                       
 490              		.loc 1 591 0
 491 0026 40F20004 		movw	r4, #:lower16:os_flags
 492 002a C0F20004 		movt	r4, #:upper16:os_flags
 493 002e 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 494 0030 14F0010F 		tst	r4, #1
 495              	.LBB218:
 496              	.LBB219:
 369:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 497              		.loc 2 369 0
 498 0034 14BF     		ite	ne
 499 0036 0224     		movne	r4, #2
 500              	.LBE219:
 501              	.LBE218:
 502              	.LBB220:
 503              	.LBB221:
 504 0038 0324     		moveq	r4, #3
 505              	@ 369 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 506 003a 84F31488 		MSR control, r4
 507              	@ 0 "" 2
 508              		.thumb
 509              	.LBE221:
 510              	.LBE220:
 511              	.LBB222:
 512              	.LBB223:
 513              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cmInstr.h"
   1:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /**************************************************************************//**
   2:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * @version  V3.20
   5:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * @date     05. March 2013
   6:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  *
   7:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * @note
   8:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  *
   9:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  ******************************************************************************/
  10:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  12:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    All rights reserved.
  13:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****      specific prior written permission.
  23:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    *
  24:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  37:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  38:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  41:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  42:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   Access to dedicated instructions
  45:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   @{
  46:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** */
  47:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  48:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* ARM armcc specific functions */
  50:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  51:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #endif
  54:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  55:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  56:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  No Operation
  57:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  58:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
  60:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __NOP                             __nop
  61:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  62:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  63:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  65:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     until one of a number of events occurs.
  67:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
  68:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __WFI                             __wfi
  69:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  70:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  71:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Event
  72:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  73:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
  76:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __WFE                             __wfe
  77:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  78:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  79:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Send Event
  80:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  81:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
  83:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __SEV                             __sev
  84:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  85:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  86:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  88:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     memory, after the instruction has been completed.
  91:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
  92:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  94:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  95:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
  97:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 100:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 102:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 103:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 105:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 108:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 110:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 111:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 113:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 115:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 117:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 118:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __REV                             __rev
 119:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 120:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 121:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 123:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 125:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 127:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 128:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 131:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   rev16 r0, r0
 132:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   bx lr
 133:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 134:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #endif
 135:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 136:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 138:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 140:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 142:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 143:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 146:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   revsh r0, r0
 147:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   bx lr
 148:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 149:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #endif
 150:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 151:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 152:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 154:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 156:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return               Rotated value
 159:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 160:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __ROR                             __ror
 161:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 162:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 163:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Breakpoint
 164:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 165:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 168:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 170:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 171:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 172:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 173:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 174:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 175:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 176:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse bit order of value
 177:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 178:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 180:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 182:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 183:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __RBIT                            __rbit
 184:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 185:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 186:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 188:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 189:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 190:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 193:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 195:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 196:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 198:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 199:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 200:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 203:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 205:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 206:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 208:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 209:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 210:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 213:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 215:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 216:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 218:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 219:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 220:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 221:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return          0  Function succeeded
 223:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return          1  Function failed
 224:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 225:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 227:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 228:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 229:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 230:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 231:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 232:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 233:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 234:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return          0  Function succeeded
 235:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return          1  Function failed
 236:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 237:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 239:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 240:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 242:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 243:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 244:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 245:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return          0  Function succeeded
 247:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return          1  Function failed
 248:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 249:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 251:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 252:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 254:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 256:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 257:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CLREX                           __clrex
 258:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 259:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 260:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Signed Saturate
 261:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 262:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function saturates a signed value.
 263:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 264:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return             Saturated value
 267:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 268:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __SSAT                            __ssat
 269:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 270:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 271:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 273:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function saturates an unsigned value.
 274:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 275:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return             Saturated value
 278:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 279:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __USAT                            __usat
 280:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 281:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 282:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Count leading zeros
 283:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 284:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 286:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     \return             number of leading zeros in value
 288:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 289:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CLZ                             __clz
 290:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 291:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 292:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 293:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 294:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 295:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* IAR iccarm specific functions */
 297:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 298:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #include <cmsis_iar.h>
 299:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 300:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 301:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* TI CCS specific functions */
 303:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 304:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #include <cmsis_ccs.h>
 305:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 306:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 307:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* GNU gcc specific functions */
 309:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 310:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 311:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 312:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 313:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 314:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 315:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 316:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #else
 317:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 318:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 319:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** #endif
 320:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 321:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  No Operation
 322:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 323:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 324:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 325:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 326:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 327:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("nop");
 328:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 329:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 330:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 331:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
 332:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 333:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 334:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     until one of a number of events occurs.
 335:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 336:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 337:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 338:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 339:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 340:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 341:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 342:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Event
 343:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 344:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 345:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 346:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 347:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 348:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 349:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("wfe");
 350:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 351:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 352:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 353:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Send Event
 354:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 355:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 357:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 358:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 359:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("sev");
 360:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 361:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 362:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 363:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 364:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 365:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 366:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 367:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     memory, after the instruction has been completed.
 368:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 369:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 370:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 371:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("isb");
 372:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** }
 373:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 374:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 375:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 376:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** 
 377:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 378:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 379:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****  */
 380:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 381:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h **** {
 382:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("dsb");
 514              		.loc 3 382 0
 515              	@ 382 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmInstr.h" 1
 516 003e BFF34F8F 		dsb
 517              	@ 0 "" 2
 518              		.thumb
 519              	.LBE223:
 520              	.LBE222:
 521              	.LBB224:
 522              	.LBB225:
 371:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("isb");
 523              		.loc 3 371 0
 524              	@ 371 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmInstr.h" 1
 525 0042 BFF36F8F 		isb
 526              	@ 0 "" 2
 527              		.thumb
 528 0046 18E0     		b	.L31
 529              	.L33:
 530              	.LBE225:
 531              	.LBE224:
 592:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         __set_CONTROL(0x02);                    // Set Privileged Thread mode & PSP
 593:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       } else {
 594:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         __set_CONTROL(0x03);                    // Set Unprivileged Thread mode & PSP
 595:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       }
 596:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       __DSB();
 597:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       __ISB();
 598:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
 599:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case 0x01:                                  // Unprivileged Thread mode & MSP
 600:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return osErrorOS;
 601:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case 0x02:                                  // Privileged Thread mode & PSP
 602:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if ((os_flags & 1) == 0) {                // Unprivileged Thread mode requested
 532              		.loc 1 602 0
 533 0048 40F20004 		movw	r4, #:lower16:os_flags
 534 004c C0F20004 		movt	r4, #:upper16:os_flags
 535 0050 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 536 0052 14F0010F 		tst	r4, #1
 537 0056 10D1     		bne	.L31
 538              	.LBB226:
 539              	.LBB227:
 369:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 540              		.loc 2 369 0
 541 0058 4FF00304 		mov	r4, #3
 542              	@ 369 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 543 005c 84F31488 		MSR control, r4
 544              	@ 0 "" 2
 545              		.thumb
 546              	.LBE227:
 547              	.LBE226:
 548              	.LBB228:
 549              	.LBB229:
 550              		.loc 3 382 0
 551              	@ 382 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmInstr.h" 1
 552 0060 BFF34F8F 		dsb
 553              	@ 0 "" 2
 554              		.thumb
 555              	.LBE229:
 556              	.LBE228:
 557              	.LBB230:
 558              	.LBB231:
 371:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("isb");
 559              		.loc 3 371 0
 560              	@ 371 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmInstr.h" 1
 561 0064 BFF36F8F 		isb
 562              	@ 0 "" 2
 563              		.thumb
 564 0068 07E0     		b	.L31
 565              	.L34:
 566              	.LBE231:
 567              	.LBE230:
 603:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         __set_CONTROL(0x03);                    // Set Unprivileged Thread mode & PSP
 604:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         __DSB();
 605:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         __ISB();
 606:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       }
 607:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
 608:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case 0x03:                                  // Unprivileged Thread mode & PSP
 609:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if  (os_flags & 1) return osErrorOS;      // Privileged Thread mode requested
 568              		.loc 1 609 0
 569 006a 40F20004 		movw	r4, #:lower16:os_flags
 570 006e C0F20004 		movt	r4, #:upper16:os_flags
 571 0072 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 572 0074 14F0010F 		tst	r4, #1
 573 0078 09D1     		bne	.L40
 574              	.L31:
 575              	.LBB232:
 576              	.LBB233:
 489:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelStart,      osStatus, RET_osStatus)
 577              		.loc 1 489 0
 578              	@ 489 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 579 007a DFF81CC0 		ldr r12,=svcKernelStart
 580 007e 00DF     		svc 0
 581              	@ 0 "" 2
 582              		.thumb
 583 0080 07E0     		b	.L30
 584              	.L38:
 585              	.LBE233:
 586              	.LBE232:
 587:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 587              		.loc 1 587 0
 588 0082 4FF08200 		mov	r0, #130
 589 0086 04E0     		b	.L30
 590              	.L39:
 600:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return osErrorOS;
 591              		.loc 1 600 0
 592 0088 4FF0FF00 		mov	r0, #255
 593 008c 01E0     		b	.L30
 594              	.L40:
 595              		.loc 1 609 0
 596 008e 4FF0FF00 		mov	r0, #255
 597              	.L30:
 610:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
 611:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 612:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcKernelStart();
 613:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 598              		.loc 1 613 0
 599 0092 09B0     		add	sp, sp, #36
 600 0094 30BD     		pop	{r4, r5, pc}
 601              		.cfi_endproc
 602              	.LFE113:
 604 0096 0000     		.section	.text.osKernelRunning,"ax",%progbits
 605              		.align	2
 606              		.global	osKernelRunning
 607              		.thumb
 608              		.thumb_func
 610              	osKernelRunning:
 611              	.LFB114:
 614:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 615:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Check if the RTOS kernel is already started
 616:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t osKernelRunning (void) {
 612              		.loc 1 616 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616 0000 10B5     		push	{r4, lr}
 617              	.LCFI6:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 4, -8
 620              		.cfi_offset 14, -4
 621              	.LBB234:
 622              	.LBB235:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 623              		.loc 2 383 0
 624              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 625 0002 EFF30584 		MRS r4, ipsr
 626              	@ 0 "" 2
 627              		.thumb
 628              	.LBE235:
 629              	.LBE234:
 617:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((__get_IPSR() != 0) || ((__get_CONTROL() & 1) == 0)) {
 630              		.loc 1 617 0
 631 0006 24B9     		cbnz	r4, .L42
 632              	.LBB236:
 633              	.LBB237:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 634              		.loc 2 356 0
 635              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 636 0008 EFF31484 		MRS r4, control
 637              	@ 0 "" 2
 638              		.thumb
 639              	.LBE237:
 640              	.LBE236:
 641              		.loc 1 617 0
 642 000c 14F0010F 		tst	r4, #1
 643 0010 05D1     		bne	.L43
 644              	.L42:
 618:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // in ISR or Privileged
 619:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return os_running;
 645              		.loc 1 619 0
 646 0012 40F20003 		movw	r3, #:lower16:os_running
 647 0016 C0F20003 		movt	r3, #:upper16:os_running
 648 001a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 649 001c 10BD     		pop	{r4, pc}
 650              	.L43:
 651              	.LBB238:
 652              	.LBB239:
 490:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelRunning,    int32_t,  RET_int32_t)
 653              		.loc 1 490 0
 654              	@ 490 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 655 001e DFF808C0 		ldr r12,=svcKernelRunning
 656 0022 00DF     		svc 0
 657              	@ 0 "" 2
 658              		.thumb
 659              	.LBE239:
 660              	.LBE238:
 620:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
 621:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcKernelRunning();
 622:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 623:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 661              		.loc 1 623 0
 662 0024 10BD     		pop	{r4, pc}
 663              		.cfi_endproc
 664              	.LFE114:
 666 0026 0000     		.section	.text.osKernelSysTick,"ax",%progbits
 667              		.align	2
 668              		.global	osKernelSysTick
 669              		.thumb
 670              		.thumb_func
 672              	osKernelSysTick:
 673              	.LFB115:
 624:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 625:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get the RTOS kernel system timer counter
 626:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint32_t osKernelSysTick (void) {
 674              		.loc 1 626 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678 0000 10B5     		push	{r4, lr}
 679              	.LCFI7:
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 4, -8
 682              		.cfi_offset 14, -4
 683              	.LBB240:
 684              	.LBB241:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 685              		.loc 2 383 0
 686              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 687 0002 EFF30584 		MRS r4, ipsr
 688              	@ 0 "" 2
 689              		.thumb
 690              	.LBE241:
 691              	.LBE240:
 627:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return 0;              // Not allowed in ISR
 692              		.loc 1 627 0
 693 0006 1CB9     		cbnz	r4, .L47
 694              	.LBB242:
 695              	.LBB243:
 491:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcKernelSysTick,    uint32_t, RET_uint32_t)
 696              		.loc 1 491 0
 697              	@ 491 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 698 0008 DFF80CC0 		ldr r12,=svcKernelSysTick
 699 000c 00DF     		svc 0
 700              	@ 0 "" 2
 701              		.thumb
 702              	.LBE243:
 703              	.LBE242:
 628:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcKernelSysTick();
 704              		.loc 1 628 0
 705 000e 10BD     		pop	{r4, pc}
 706              	.L47:
 627:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return 0;              // Not allowed in ISR
 707              		.loc 1 627 0
 708 0010 4FF00000 		mov	r0, #0
 629:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 709              		.loc 1 629 0
 710 0014 10BD     		pop	{r4, pc}
 711              		.cfi_endproc
 712              	.LFE115:
 714 0016 0000     		.section	.text.svcThreadCreate,"ax",%progbits
 715              		.align	2
 716              		.global	svcThreadCreate
 717              		.thumb
 718              		.thumb_func
 720              	svcThreadCreate:
 721              	.LFB123:
 630:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 631:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 632:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Thread Management ====
 633:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 634:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Set Thread Error (for Create functions which return IDs)
 635:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static void sysThreadError (osStatus status) {
 636:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   // To Do
 637:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 638:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 639:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __NO_RETURN void osThreadExit (void);
 640:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 641:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Thread Service Calls declarations
 642:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcThreadCreate,      osThreadId, const osThreadDef_t *, void *,     RET_pointer)
 643:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcThreadGetId,       osThreadId,                                    RET_pointer)
 644:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcThreadTerminate,   osStatus,         osThreadId,                  RET_osStatus)
 645:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcThreadYield,       osStatus,                                      RET_osStatus)
 646:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcThreadSetPriority, osStatus,         osThreadId,      osPriority, RET_osStatus)
 647:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcThreadGetPriority, osPriority,       osThreadId,                  RET_osPriority)
 648:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 649:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Thread Service Calls
 650:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 651:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create a thread and add it to Active Threads and set it to state READY
 652:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osThreadId svcThreadCreate (const osThreadDef_t *thread_def, void *argument) {
 722              		.loc 1 652 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726 0000 70B5     		push	{r4, r5, r6, lr}
 727              	.LCFI8:
 728              		.cfi_def_cfa_offset 16
 729              		.cfi_offset 4, -16
 730              		.cfi_offset 5, -12
 731              		.cfi_offset 6, -8
 732              		.cfi_offset 14, -4
 733 0002 0E46     		mov	r6, r1
 653:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB  ptcb;
 654:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_TID tsk;
 655:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void  *stk;
 656:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 657:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((thread_def == NULL) ||
 734              		.loc 1 657 0
 735 0004 0446     		mov	r4, r0
 736 0006 0028     		cmp	r0, #0
 737 0008 2FD0     		beq	.L54
 658:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (thread_def->pthread == NULL) ||
 738              		.loc 1 658 0 discriminator 1
 739 000a 0068     		ldr	r0, [r0, #0]
 657:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((thread_def == NULL) ||
 740              		.loc 1 657 0 discriminator 1
 741 000c 0028     		cmp	r0, #0
 742 000e 2FD0     		beq	.L55
 659:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (thread_def->tpriority < osPriorityIdle) ||
 743              		.loc 1 659 0
 744 0010 A288     		ldrh	r2, [r4, #4]
 658:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (thread_def->pthread == NULL) ||
 745              		.loc 1 658 0
 746 0012 15B2     		sxth	r5, r2
 747 0014 15F1030F 		cmn	r5, #3
 748 0018 2DDB     		blt	.L56
 749              		.loc 1 659 0
 750 001a 032D     		cmp	r5, #3
 751 001c 2EDC     		bgt	.L57
 660:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (thread_def->tpriority > osPriorityRealtime)) {
 661:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter); 
 662:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL; 
 663:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 664:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 665:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (thread_def->stacksize != 0) {             // Custom stack size
 752              		.loc 1 665 0
 753 001e E168     		ldr	r1, [r4, #12]
 754 0020 0029     		cmp	r1, #0
 755 0022 44D0     		beq	.L50
 666:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     stk = rt_alloc_mem(                         // Allocate stack
 756              		.loc 1 666 0
 757 0024 40F20000 		movw	r0, #:lower16:os_stack_mem
 758 0028 C0F20000 		movt	r0, #:upper16:os_stack_mem
 759 002c FFF7FEFF 		bl	rt_alloc_mem
 667:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       os_stack_mem,
 668:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       thread_def->stacksize
 669:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     );
 670:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (stk == NULL) { 
 760              		.loc 1 670 0
 761 0030 0546     		mov	r5, r0
 762 0032 0028     		cmp	r0, #0
 763 0034 2BD1     		bne	.L60
 764 0036 24E0     		b	.L58
 765              	.L52:
 671:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       sysThreadError(osErrorNoMemory);          // Out of memory
 672:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return NULL;
 673:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
 674:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // Default stack size
 675:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     stk = NULL;
 676:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 677:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 678:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tsk = rt_tsk_create(                          // Create task
 679:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     (FUNCP)thread_def->pthread,                 // Task function pointer
 680:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     (thread_def->tpriority-osPriorityIdle+1) |  // Task priority
 681:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     (thread_def->stacksize << 8),               // Task stack size in bytes
 682:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     stk,                                        // Pointer to task's stack
 683:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     argument                                    // Argument to the task
 684:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   );
 685:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 686:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tsk == 0) {                               // Invalid task ID
 687:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (stk != NULL) {
 688:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_free_mem(os_stack_mem, stk);           // Free allocated stack
 766              		.loc 1 688 0
 767 0038 40F20000 		movw	r0, #:lower16:os_stack_mem
 768 003c C0F20000 		movt	r0, #:upper16:os_stack_mem
 769 0040 2946     		mov	r1, r5
 770 0042 FFF7FEFF 		bl	rt_free_mem
 689:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
 690:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorNoMemory);            // Create task failed (Out of memory)
 691:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 771              		.loc 1 691 0
 772 0046 4FF00000 		mov	r0, #0
 773 004a 70BD     		pop	{r4, r5, r6, pc}
 774              	.L53:
 692:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 693:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 694:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = (P_TCB)os_active_TCB[tsk - 1];         // TCB pointer
 775              		.loc 1 694 0
 776 004c 40F20003 		movw	r3, #:lower16:os_active_TCB
 777 0050 C0F20003 		movt	r3, #:upper16:os_active_TCB
 778 0054 02F1FF32 		add	r2, r2, #-1
 779 0058 53F82200 		ldr	r0, [r3, r2, lsl #2]
 695:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 696:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   *((uint32_t *)ptcb->tsk_stack + 13) = (uint32_t)osThreadExit;
 780              		.loc 1 696 0
 781 005c 836A     		ldr	r3, [r0, #40]
 782 005e 40F20002 		movw	r2, #:lower16:osThreadExit
 783 0062 C0F20002 		movt	r2, #:upper16:osThreadExit
 784 0066 5A63     		str	r2, [r3, #52]
 697:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 698:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ptcb;
 785              		.loc 1 698 0
 786 0068 70BD     		pop	{r4, r5, r6, pc}
 787              	.L54:
 662:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL; 
 788              		.loc 1 662 0
 789 006a 4FF00000 		mov	r0, #0
 790 006e 70BD     		pop	{r4, r5, r6, pc}
 791              	.L55:
 792 0070 4FF00000 		mov	r0, #0
 793 0074 70BD     		pop	{r4, r5, r6, pc}
 794              	.L56:
 795 0076 4FF00000 		mov	r0, #0
 796 007a 70BD     		pop	{r4, r5, r6, pc}
 797              	.L57:
 798 007c 4FF00000 		mov	r0, #0
 799 0080 70BD     		pop	{r4, r5, r6, pc}
 800              	.L58:
 672:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return NULL;
 801              		.loc 1 672 0
 802 0082 4FF00000 		mov	r0, #0
 803 0086 70BD     		pop	{r4, r5, r6, pc}
 804              	.L59:
 691:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 805              		.loc 1 691 0
 806 0088 4FF00000 		mov	r0, #0
 807 008c 70BD     		pop	{r4, r5, r6, pc}
 808              	.L60:
 680:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     (thread_def->tpriority-osPriorityIdle+1) |  // Task priority
 809              		.loc 1 680 0
 810 008e B4F90430 		ldrsh	r3, [r4, #4]
 811 0092 03F10403 		add	r3, r3, #4
 681:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     (thread_def->stacksize << 8),               // Task stack size in bytes
 812              		.loc 1 681 0
 813 0096 E168     		ldr	r1, [r4, #12]
 678:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tsk = rt_tsk_create(                          // Create task
 814              		.loc 1 678 0
 815 0098 2068     		ldr	r0, [r4, #0]
 816 009a 43EA0121 		orr	r1, r3, r1, lsl #8
 817 009e 2A46     		mov	r2, r5
 818 00a0 3346     		mov	r3, r6
 819 00a2 FFF7FEFF 		bl	rt_tsk_create
 686:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tsk == 0) {                               // Invalid task ID
 820              		.loc 1 686 0
 821 00a6 0246     		mov	r2, r0
 822 00a8 0028     		cmp	r0, #0
 823 00aa CFD1     		bne	.L53
 824 00ac C4E7     		b	.L52
 825              	.L50:
 680:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     (thread_def->tpriority-osPriorityIdle+1) |  // Task priority
 826              		.loc 1 680 0
 827 00ae 11B2     		sxth	r1, r2
 678:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tsk = rt_tsk_create(                          // Create task
 828              		.loc 1 678 0
 829 00b0 01F10401 		add	r1, r1, #4
 830 00b4 4FF00002 		mov	r2, #0
 831 00b8 3346     		mov	r3, r6
 832 00ba FFF7FEFF 		bl	rt_tsk_create
 686:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tsk == 0) {                               // Invalid task ID
 833              		.loc 1 686 0
 834 00be 0246     		mov	r2, r0
 835 00c0 0028     		cmp	r0, #0
 836 00c2 C3D1     		bne	.L53
 837 00c4 E0E7     		b	.L59
 838              		.cfi_endproc
 839              	.LFE123:
 841 00c6 00BF     		.section	.text.svcThreadGetId,"ax",%progbits
 842              		.align	2
 843              		.global	svcThreadGetId
 844              		.thumb
 845              		.thumb_func
 847              	svcThreadGetId:
 848              	.LFB124:
 699:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 700:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 701:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Return the thread ID of the current running thread
 702:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osThreadId svcThreadGetId (void) {
 849              		.loc 1 702 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853 0000 08B5     		push	{r3, lr}
 854              	.LCFI9:
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 3, -8
 857              		.cfi_offset 14, -4
 703:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_TID tsk;
 704:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 705:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tsk = rt_tsk_self();
 858              		.loc 1 705 0
 859 0002 FFF7FEFF 		bl	rt_tsk_self
 706:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tsk == 0) return NULL;
 860              		.loc 1 706 0
 861 0006 40B1     		cbz	r0, .L64
 707:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (P_TCB)os_active_TCB[tsk - 1];
 862              		.loc 1 707 0
 863 0008 40F20003 		movw	r3, #:lower16:os_active_TCB
 864 000c C0F20003 		movt	r3, #:upper16:os_active_TCB
 865 0010 00F1FF32 		add	r2, r0, #-1
 866 0014 53F82200 		ldr	r0, [r3, r2, lsl #2]
 867 0018 08BD     		pop	{r3, pc}
 868              	.L64:
 706:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tsk == 0) return NULL;
 869              		.loc 1 706 0
 870 001a 4FF00000 		mov	r0, #0
 708:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 871              		.loc 1 708 0
 872 001e 08BD     		pop	{r3, pc}
 873              		.cfi_endproc
 874              	.LFE124:
 876              		.section	.text.svcThreadTerminate,"ax",%progbits
 877              		.align	2
 878              		.global	svcThreadTerminate
 879              		.thumb
 880              		.thumb_func
 882              	svcThreadTerminate:
 883              	.LFB125:
 709:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 710:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Terminate execution of a thread and remove it from ActiveThreads
 711:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcThreadTerminate (osThreadId thread_id) {
 884              		.loc 1 711 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888 0000 10B5     		push	{r4, lr}
 889              	.LCFI10:
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 4, -8
 892              		.cfi_offset 14, -4
 712:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
 713:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB     ptcb;
 714:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void     *stk;
 715:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 716:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = rt_tid2ptcb(thread_id);                // Get TCB pointer
 893              		.loc 1 716 0
 894 0002 FFF7FEFF 		bl	rt_tid2ptcb
 717:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return osErrorParameter;
 895              		.loc 1 717 0
 896 0006 0346     		mov	r3, r0
 897 0008 A8B1     		cbz	r0, .L68
 718:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 719:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   stk = ptcb->priv_stack ? ptcb->stack : NULL;  // Private stack
 898              		.loc 1 719 0
 899 000a C28C     		ldrh	r2, [r0, #38]
 900 000c 0AB1     		cbz	r2, .L69
 901              		.loc 1 719 0 is_stmt 0 discriminator 1
 902 000e C46A     		ldr	r4, [r0, #44]
 903 0010 01E0     		b	.L67
 904              	.L69:
 905              		.loc 1 719 0
 906 0012 4FF00004 		mov	r4, #0
 907              	.L67:
 720:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 721:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_tsk_delete(ptcb->task_id);           // Delete task
 908              		.loc 1 721 0 is_stmt 1 discriminator 3
 909 0016 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 910 0018 FFF7FEFF 		bl	rt_tsk_delete
 722:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 723:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_NOK) return osErrorResource;  // Delete task failed
 911              		.loc 1 723 0 discriminator 3
 912 001c FF28     		cmp	r0, #255
 913 001e 0DD0     		beq	.L70
 724:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 725:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (stk != NULL) {                            
 914              		.loc 1 725 0
 915 0020 7CB1     		cbz	r4, .L71
 726:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     rt_free_mem(os_stack_mem, stk);             // Free private stack
 916              		.loc 1 726 0
 917 0022 40F20000 		movw	r0, #:lower16:os_stack_mem
 918 0026 C0F20000 		movt	r0, #:upper16:os_stack_mem
 919 002a 2146     		mov	r1, r4
 920 002c FFF7FEFF 		bl	rt_free_mem
 727:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 728:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 729:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 921              		.loc 1 729 0
 922 0030 4FF00000 		mov	r0, #0
 923 0034 10BD     		pop	{r4, pc}
 924              	.L68:
 717:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return osErrorParameter;
 925              		.loc 1 717 0
 926 0036 4FF08000 		mov	r0, #128
 927 003a 10BD     		pop	{r4, pc}
 928              	.L70:
 723:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_NOK) return osErrorResource;  // Delete task failed
 929              		.loc 1 723 0
 930 003c 4FF08100 		mov	r0, #129
 931 0040 10BD     		pop	{r4, pc}
 932              	.L71:
 933              		.loc 1 729 0
 934 0042 4FF00000 		mov	r0, #0
 730:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 935              		.loc 1 730 0
 936 0046 10BD     		pop	{r4, pc}
 937              		.cfi_endproc
 938              	.LFE125:
 940              		.section	.text.svcThreadYield,"ax",%progbits
 941              		.align	2
 942              		.global	svcThreadYield
 943              		.thumb
 944              		.thumb_func
 946              	svcThreadYield:
 947              	.LFB126:
 731:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 732:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Pass control to next thread that is in state READY
 733:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcThreadYield (void) {
 948              		.loc 1 733 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952 0000 08B5     		push	{r3, lr}
 953              	.LCFI11:
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 3, -8
 956              		.cfi_offset 14, -4
 734:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_tsk_pass();                                // Pass control to next task
 957              		.loc 1 734 0
 958 0002 FFF7FEFF 		bl	rt_tsk_pass
 735:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 736:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 959              		.loc 1 736 0
 960 0006 4FF00000 		mov	r0, #0
 961 000a 08BD     		pop	{r3, pc}
 962              		.cfi_endproc
 963              	.LFE126:
 965              		.section	.text.svcThreadSetPriority,"ax",%progbits
 966              		.align	2
 967              		.global	svcThreadSetPriority
 968              		.thumb
 969              		.thumb_func
 971              	svcThreadSetPriority:
 972              	.LFB127:
 737:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 738:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Change priority of an active thread
 739:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcThreadSetPriority (osThreadId thread_id, osPriority priority) {
 973              		.loc 1 739 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977 0000 10B5     		push	{r4, lr}
 978              	.LCFI12:
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 0C46     		mov	r4, r1
 740:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
 741:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB     ptcb;
 742:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 743:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = rt_tid2ptcb(thread_id);                // Get TCB pointer
 983              		.loc 1 743 0
 984 0004 FFF7FEFF 		bl	rt_tid2ptcb
 744:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return osErrorParameter;
 985              		.loc 1 744 0
 986 0008 78B1     		cbz	r0, .L75
 745:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 746:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((priority < osPriorityIdle) || (priority > osPriorityRealtime)) {
 987              		.loc 1 746 0
 988 000a 04F10303 		add	r3, r4, #3
 989 000e 9BB2     		uxth	r3, r3
 990 0010 062B     		cmp	r3, #6
 991 0012 0DD8     		bhi	.L76
 747:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorValue;
 748:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 749:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 750:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_tsk_prio(                            // Change task priority
 992              		.loc 1 750 0
 993 0014 04F10401 		add	r1, r4, #4
 994 0018 C078     		ldrb	r0, [r0, #3]	@ zero_extendqisi2
 995 001a C9B2     		uxtb	r1, r1
 996 001c FFF7FEFF 		bl	rt_tsk_prio
 751:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ptcb->task_id,                              // Task ID
 752:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     priority - osPriorityIdle + 1               // New task priority
 753:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   );
 754:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 755:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_NOK) return osErrorResource;  // Change task priority failed
 997              		.loc 1 755 0
 998 0020 FF28     		cmp	r0, #255
 999 0022 0CBF     		ite	eq
 1000 0024 8120     		moveq	r0, #129
 1001 0026 0020     		movne	r0, #0
 1002 0028 10BD     		pop	{r4, pc}
 1003              	.L75:
 744:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return osErrorParameter;
 1004              		.loc 1 744 0
 1005 002a 4FF08000 		mov	r0, #128
 1006 002e 10BD     		pop	{r4, pc}
 1007              	.L76:
 747:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorValue;
 1008              		.loc 1 747 0
 1009 0030 4FF08600 		mov	r0, #134
 756:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 757:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 758:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1010              		.loc 1 758 0
 1011 0034 10BD     		pop	{r4, pc}
 1012              		.cfi_endproc
 1013              	.LFE127:
 1015 0036 00BF     		.section	.text.svcThreadGetPriority,"ax",%progbits
 1016              		.align	2
 1017              		.global	svcThreadGetPriority
 1018              		.thumb
 1019              		.thumb_func
 1021              	svcThreadGetPriority:
 1022              	.LFB128:
 759:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 760:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get current priority of an active thread
 761:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osPriority svcThreadGetPriority (osThreadId thread_id) {
 1023              		.loc 1 761 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027 0000 08B5     		push	{r3, lr}
 1028              	.LCFI13:
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 762:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB ptcb;
 763:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 764:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = rt_tid2ptcb(thread_id);                // Get TCB pointer
 1032              		.loc 1 764 0
 1033 0002 FFF7FEFF 		bl	rt_tid2ptcb
 765:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return osPriorityError;
 1034              		.loc 1 765 0
 1035 0006 20B1     		cbz	r0, .L80
 766:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 767:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (osPriority)(ptcb->prio - 1 + osPriorityIdle); 
 1036              		.loc 1 767 0
 1037 0008 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 1038 000a A0F10400 		sub	r0, r0, #4
 1039 000e 80B2     		uxth	r0, r0
 1040 0010 01E0     		b	.L79
 1041              	.L80:
 765:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return osPriorityError;
 1042              		.loc 1 765 0
 1043 0012 4FF08400 		mov	r0, #132
 1044              	.L79:
 768:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1045              		.loc 1 768 0
 1046 0016 00B2     		sxth	r0, r0
 1047 0018 08BD     		pop	{r3, pc}
 1048              		.cfi_endproc
 1049              	.LFE128:
 1051 001a 00BF     		.section	.text.osThreadCreate,"ax",%progbits
 1052              		.align	2
 1053              		.global	osThreadCreate
 1054              		.thumb
 1055              		.thumb_func
 1057              	osThreadCreate:
 1058              	.LFB129:
 769:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 770:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 771:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Thread Public API
 772:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 773:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create a thread and add it to Active Threads and set it to state READY
 774:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument) {
 1059              		.loc 1 774 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063 0000 10B5     		push	{r4, lr}
 1064              	.LCFI14:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 1068              	.LBB244:
 1069              	.LBB245:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1070              		.loc 2 383 0
 1071              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1072 0002 EFF30584 		MRS r4, ipsr
 1073              	@ 0 "" 2
 1074              		.thumb
 1075              	.LBE245:
 1076              	.LBE244:
 775:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 1077              		.loc 1 775 0
 1078 0006 8CB9     		cbnz	r4, .L84
 1079              	.LBB246:
 1080              	.LBB247:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 1081              		.loc 2 356 0
 1082              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1083 0008 EFF31484 		MRS r4, control
 1084              	@ 0 "" 2
 1085              		.thumb
 1086              	.LBE247:
 1087              	.LBE246:
 776:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 1088              		.loc 1 776 0
 1089 000c 14F0010F 		tst	r4, #1
 1090 0010 08D1     		bne	.L83
 1091              		.loc 1 776 0 is_stmt 0 discriminator 1
 1092 0012 40F20004 		movw	r4, #:lower16:os_running
 1093 0016 C0F20004 		movt	r4, #:upper16:os_running
 1094 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 1095 001c 14B9     		cbnz	r4, .L83
 777:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
 778:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcThreadCreate(thread_def, argument);
 1096              		.loc 1 778 0 is_stmt 1
 1097 001e FFF7FEFF 		bl	svcThreadCreate
 1098 0022 10BD     		pop	{r4, pc}
 1099              	.L83:
 1100              	.LBB248:
 1101              	.LBB249:
 642:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcThreadCreate,      osThreadId, const osThreadDef_t *, void *,     RET_pointer)
 1102              		.loc 1 642 0
 1103              	@ 642 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1104 0024 DFF80CC0 		ldr r12,=svcThreadCreate
 1105 0028 00DF     		svc 0
 1106              	@ 0 "" 2
 1107              		.thumb
 1108              	.LBE249:
 1109              	.LBE248:
 779:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
 780:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcThreadCreate(thread_def, argument);
 1110              		.loc 1 780 0
 1111 002a 10BD     		pop	{r4, pc}
 1112              	.L84:
 775:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 1113              		.loc 1 775 0
 1114 002c 4FF00000 		mov	r0, #0
 781:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 782:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1115              		.loc 1 782 0
 1116 0030 10BD     		pop	{r4, pc}
 1117              		.cfi_endproc
 1118              	.LFE129:
 1120 0032 0000     		.section	.text.osThreadGetId,"ax",%progbits
 1121              		.align	2
 1122              		.global	osThreadGetId
 1123              		.thumb
 1124              		.thumb_func
 1126              	osThreadGetId:
 1127              	.LFB130:
 783:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 784:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Return the thread ID of the current running thread
 785:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osThreadId osThreadGetId (void) {
 1128              		.loc 1 785 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132 0000 10B5     		push	{r4, lr}
 1133              	.LCFI15:
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 4, -8
 1136              		.cfi_offset 14, -4
 1137              	.LBB250:
 1138              	.LBB251:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1139              		.loc 2 383 0
 1140              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1141 0002 EFF30584 		MRS r4, ipsr
 1142              	@ 0 "" 2
 1143              		.thumb
 1144              	.LBE251:
 1145              	.LBE250:
 786:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 1146              		.loc 1 786 0
 1147 0006 1CB9     		cbnz	r4, .L87
 1148              	.LBB252:
 1149              	.LBB253:
 643:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcThreadGetId,       osThreadId,                                    RET_pointer)
 1150              		.loc 1 643 0
 1151              	@ 643 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1152 0008 DFF80CC0 		ldr r12,=svcThreadGetId
 1153 000c 00DF     		svc 0
 1154              	@ 0 "" 2
 1155              		.thumb
 1156              	.LBE253:
 1157              	.LBE252:
 787:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcThreadGetId();
 1158              		.loc 1 787 0
 1159 000e 10BD     		pop	{r4, pc}
 1160              	.L87:
 786:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 1161              		.loc 1 786 0
 1162 0010 4FF00000 		mov	r0, #0
 788:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1163              		.loc 1 788 0
 1164 0014 10BD     		pop	{r4, pc}
 1165              		.cfi_endproc
 1166              	.LFE130:
 1168 0016 0000     		.section	.text.osThreadTerminate,"ax",%progbits
 1169              		.align	2
 1170              		.global	osThreadTerminate
 1171              		.thumb
 1172              		.thumb_func
 1174              	osThreadTerminate:
 1175              	.LFB131:
 789:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 790:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Terminate execution of a thread and remove it from ActiveThreads
 791:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osThreadTerminate (osThreadId thread_id) {
 1176              		.loc 1 791 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180 0000 10B5     		push	{r4, lr}
 1181              	.LCFI16:
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 4, -8
 1184              		.cfi_offset 14, -4
 1185              	.LBB254:
 1186              	.LBB255:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1187              		.loc 2 383 0
 1188              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1189 0002 EFF30584 		MRS r4, ipsr
 1190              	@ 0 "" 2
 1191              		.thumb
 1192              	.LBE255:
 1193              	.LBE254:
 792:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1194              		.loc 1 792 0
 1195 0006 1CB9     		cbnz	r4, .L90
 1196              	.LBB256:
 1197              	.LBB257:
 644:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcThreadTerminate,   osStatus,         osThreadId,                  RET_osStatus)
 1198              		.loc 1 644 0
 1199              	@ 644 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1200 0008 DFF80CC0 		ldr r12,=svcThreadTerminate
 1201 000c 00DF     		svc 0
 1202              	@ 0 "" 2
 1203              		.thumb
 1204              	.LBE257:
 1205              	.LBE256:
 793:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcThreadTerminate(thread_id);
 1206              		.loc 1 793 0
 1207 000e 10BD     		pop	{r4, pc}
 1208              	.L90:
 792:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1209              		.loc 1 792 0
 1210 0010 4FF08200 		mov	r0, #130
 794:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1211              		.loc 1 794 0
 1212 0014 10BD     		pop	{r4, pc}
 1213              		.cfi_endproc
 1214              	.LFE131:
 1216 0016 0000     		.section	.text.osThreadYield,"ax",%progbits
 1217              		.align	2
 1218              		.global	osThreadYield
 1219              		.thumb
 1220              		.thumb_func
 1222              	osThreadYield:
 1223              	.LFB132:
 795:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 796:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Pass control to next thread that is in state READY
 797:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osThreadYield (void) {
 1224              		.loc 1 797 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 10B5     		push	{r4, lr}
 1229              	.LCFI17:
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 4, -8
 1232              		.cfi_offset 14, -4
 1233              	.LBB258:
 1234              	.LBB259:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1235              		.loc 2 383 0
 1236              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1237 0002 EFF30584 		MRS r4, ipsr
 1238              	@ 0 "" 2
 1239              		.thumb
 1240              	.LBE259:
 1241              	.LBE258:
 798:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1242              		.loc 1 798 0
 1243 0006 1CB9     		cbnz	r4, .L93
 1244              	.LBB260:
 1245              	.LBB261:
 645:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcThreadYield,       osStatus,                                      RET_osStatus)
 1246              		.loc 1 645 0
 1247              	@ 645 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1248 0008 DFF80CC0 		ldr r12,=svcThreadYield
 1249 000c 00DF     		svc 0
 1250              	@ 0 "" 2
 1251              		.thumb
 1252              	.LBE261:
 1253              	.LBE260:
 799:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcThreadYield();
 1254              		.loc 1 799 0
 1255 000e 10BD     		pop	{r4, pc}
 1256              	.L93:
 798:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1257              		.loc 1 798 0
 1258 0010 4FF08200 		mov	r0, #130
 800:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1259              		.loc 1 800 0
 1260 0014 10BD     		pop	{r4, pc}
 1261              		.cfi_endproc
 1262              	.LFE132:
 1264 0016 0000     		.section	.text.osThreadSetPriority,"ax",%progbits
 1265              		.align	2
 1266              		.global	osThreadSetPriority
 1267              		.thumb
 1268              		.thumb_func
 1270              	osThreadSetPriority:
 1271              	.LFB133:
 801:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 802:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Change priority of an active thread
 803:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osThreadSetPriority (osThreadId thread_id, osPriority priority) {
 1272              		.loc 1 803 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276 0000 10B5     		push	{r4, lr}
 1277              	.LCFI18:
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 4, -8
 1280              		.cfi_offset 14, -4
 1281              	.LBB262:
 1282              	.LBB263:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1283              		.loc 2 383 0
 1284              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1285 0002 EFF30584 		MRS r4, ipsr
 1286              	@ 0 "" 2
 1287              		.thumb
 1288              	.LBE263:
 1289              	.LBE262:
 804:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1290              		.loc 1 804 0
 1291 0006 1CB9     		cbnz	r4, .L96
 1292              	.LBB264:
 1293              	.LBB265:
 646:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcThreadSetPriority, osStatus,         osThreadId,      osPriority, RET_osStatus)
 1294              		.loc 1 646 0
 1295              	@ 646 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1296 0008 DFF80CC0 		ldr r12,=svcThreadSetPriority
 1297 000c 00DF     		svc 0
 1298              	@ 0 "" 2
 1299              		.thumb
 1300              	.LBE265:
 1301              	.LBE264:
 805:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcThreadSetPriority(thread_id, priority);
 1302              		.loc 1 805 0
 1303 000e 10BD     		pop	{r4, pc}
 1304              	.L96:
 804:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1305              		.loc 1 804 0
 1306 0010 4FF08200 		mov	r0, #130
 806:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1307              		.loc 1 806 0
 1308 0014 10BD     		pop	{r4, pc}
 1309              		.cfi_endproc
 1310              	.LFE133:
 1312 0016 0000     		.section	.text.osThreadGetPriority,"ax",%progbits
 1313              		.align	2
 1314              		.global	osThreadGetPriority
 1315              		.thumb
 1316              		.thumb_func
 1318              	osThreadGetPriority:
 1319              	.LFB134:
 807:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 808:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get current priority of an active thread
 809:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osPriority osThreadGetPriority (osThreadId thread_id) {
 1320              		.loc 1 809 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324 0000 10B5     		push	{r4, lr}
 1325              	.LCFI19:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 4, -8
 1328              		.cfi_offset 14, -4
 1329              	.LBB266:
 1330              	.LBB267:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1331              		.loc 2 383 0
 1332              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1333 0002 EFF30584 		MRS r4, ipsr
 1334              	@ 0 "" 2
 1335              		.thumb
 1336              	.LBE267:
 1337              	.LBE266:
 810:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osPriorityError;// Not allowed in ISR
 1338              		.loc 1 810 0
 1339 0006 24B9     		cbnz	r4, .L99
 1340              	.LBB268:
 1341              	.LBB269:
 647:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcThreadGetPriority, osPriority,       osThreadId,                  RET_osPriority)
 1342              		.loc 1 647 0
 1343              	@ 647 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1344 0008 DFF810C0 		ldr r12,=svcThreadGetPriority
 1345 000c 00DF     		svc 0
 1346              	@ 0 "" 2
 1347              		.thumb
 1348 000e 80B2     		uxth	r0, r0
 1349              	.LBE269:
 1350              	.LBE268:
 811:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcThreadGetPriority(thread_id);
 1351              		.loc 1 811 0
 1352 0010 01E0     		b	.L98
 1353              	.L99:
 810:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osPriorityError;// Not allowed in ISR
 1354              		.loc 1 810 0
 1355 0012 4FF08400 		mov	r0, #132
 1356              	.L98:
 812:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1357              		.loc 1 812 0
 1358 0016 00B2     		sxth	r0, r0
 1359 0018 10BD     		pop	{r4, pc}
 1360              		.cfi_endproc
 1361              	.LFE134:
 1363 001a 0000     		.section	.text.osThreadExit,"ax",%progbits
 1364              		.align	2
 1365              		.global	osThreadExit
 1366              		.thumb
 1367              		.thumb_func
 1369              	osThreadExit:
 1370              	.LFB135:
 813:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 814:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// INTERNAL - Not Public
 815:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Auto Terminate Thread on exit (used implicitly when thread exists)
 816:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __NO_RETURN void osThreadExit (void) { 
 1371              		.loc 1 816 0
 1372              		.cfi_startproc
 1373              		@ Volatile: function does not return.
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376 0000 00B5     		push	{lr}
 1377              	.LCFI20:
 1378              		.cfi_def_cfa_offset 4
 1379              		.cfi_offset 14, -4
 1380              	.LBB270:
 1381              	.LBB271:
 643:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(svcThreadGetId,       osThreadId,                                    RET_pointer)
 1382              		.loc 1 643 0
 1383              	@ 643 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1384 0002 DFF80CC0 		ldr r12,=svcThreadGetId
 1385 0006 00DF     		svc 0
 1386              	@ 0 "" 2
 1387              		.thumb
 1388              	.LBE271:
 1389              	.LBE270:
 1390              	.LBB272:
 1391              	.LBB273:
 644:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcThreadTerminate,   osStatus,         osThreadId,                  RET_osStatus)
 1392              		.loc 1 644 0
 1393              	@ 644 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1394 0008 DFF808C0 		ldr r12,=svcThreadTerminate
 1395 000c 00DF     		svc 0
 1396              	@ 0 "" 2
 1397              		.thumb
 1398              	.L101:
 1399 000e FEE7     		b	.L101
 1400              	.LBE273:
 1401              	.LBE272:
 1402              		.cfi_endproc
 1403              	.LFE135:
 1405              		.section	.text.svcDelay,"ax",%progbits
 1406              		.align	2
 1407              		.global	svcDelay
 1408              		.thumb
 1409              		.thumb_func
 1411              	svcDelay:
 1412              	.LFB137:
 817:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   __svcThreadTerminate(__svcThreadGetId()); 
 818:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   for (;;);                                     // Should never come here
 819:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 820:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 821:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 822:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Generic Wait Functions ====
 823:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 824:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Generic Wait Service Calls declarations
 825:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcDelay,           osStatus, uint32_t, RET_osStatus)
 826:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if osFeature_Wait != 0
 827:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_3(svcWait,  os_InRegs osEvent,  uint32_t, RET_osEvent)
 828:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 829:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 830:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Generic Wait Service Calls
 831:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 832:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait for Timeout (Time Delay)
 833:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcDelay (uint32_t millisec) {
 1413              		.loc 1 833 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417 0000 08B5     		push	{r3, lr}
 1418              	.LCFI21:
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 3, -8
 1421              		.cfi_offset 14, -4
 834:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec == 0) return osOK;
 1422              		.loc 1 834 0
 1423 0002 38B1     		cbz	r0, .L104
 835:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_dly_wait(rt_ms2tick(millisec));
 1424              		.loc 1 835 0
 1425 0004 FFF7FEFF 		bl	rt_ms2tick
 1426 0008 80B2     		uxth	r0, r0
 1427 000a FFF7FEFF 		bl	rt_dly_wait
 836:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osEventTimeout;
 1428              		.loc 1 836 0
 1429 000e 4FF04000 		mov	r0, #64
 1430 0012 08BD     		pop	{r3, pc}
 1431              	.L104:
 834:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec == 0) return osOK;
 1432              		.loc 1 834 0
 1433 0014 4FF00000 		mov	r0, #0
 837:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1434              		.loc 1 837 0
 1435 0018 08BD     		pop	{r3, pc}
 1436              		.cfi_endproc
 1437              	.LFE137:
 1439 001a 00BF     		.section	.text.osDelay,"ax",%progbits
 1440              		.align	2
 1441              		.global	osDelay
 1442              		.thumb
 1443              		.thumb_func
 1445              	osDelay:
 1446              	.LFB138:
 838:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 839:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait for Signal, Message, Mail, or Timeout
 840:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if osFeature_Wait != 0
 841:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent_type svcWait (uint32_t millisec) {
 842:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent ret;
 843:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 844:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (millisec == 0) {
 845:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osOK;
 846:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osEvent_ret_status;
 847:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 848:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 849:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   /* To Do: osEventSignal, osEventMessage, osEventMail */
 850:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_dly_wait(rt_ms2tick(millisec));
 851:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret.status = osEventTimeout;
 852:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 853:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osEvent_ret_status;
 854:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 855:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 856:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 857:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 858:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Generic Wait API
 859:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 860:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait for Timeout (Time Delay)
 861:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osDelay (uint32_t millisec) {
 1447              		.loc 1 861 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451 0000 10B5     		push	{r4, lr}
 1452              	.LCFI22:
 1453              		.cfi_def_cfa_offset 8
 1454              		.cfi_offset 4, -8
 1455              		.cfi_offset 14, -4
 1456              	.LBB274:
 1457              	.LBB275:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 1458              		.loc 2 383 0
 1459              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 1460 0002 EFF30584 		MRS r4, ipsr
 1461              	@ 0 "" 2
 1462              		.thumb
 1463              	.LBE275:
 1464              	.LBE274:
 862:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1465              		.loc 1 862 0
 1466 0006 1CB9     		cbnz	r4, .L107
 1467              	.LBB276:
 1468              	.LBB277:
 825:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcDelay,           osStatus, uint32_t, RET_osStatus)
 1469              		.loc 1 825 0
 1470              	@ 825 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 1471 0008 DFF80CC0 		ldr r12,=svcDelay
 1472 000c 00DF     		svc 0
 1473              	@ 0 "" 2
 1474              		.thumb
 1475              	.LBE277:
 1476              	.LBE276:
 863:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcDelay(millisec);
 1477              		.loc 1 863 0
 1478 000e 10BD     		pop	{r4, pc}
 1479              	.L107:
 862:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 1480              		.loc 1 862 0
 1481 0010 4FF08200 		mov	r0, #130
 864:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1482              		.loc 1 864 0
 1483 0014 10BD     		pop	{r4, pc}
 1484              		.cfi_endproc
 1485              	.LFE138:
 1487 0016 0000     		.section	.text.osWait,"ax",%progbits
 1488              		.align	2
 1489              		.global	osWait
 1490              		.thumb
 1491              		.thumb_func
 1493              	osWait:
 1494              	.LFB139:
 865:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 866:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait for Signal, Message, Mail, or Timeout
 867:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent osWait (uint32_t millisec) {
 1495              		.loc 1 867 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              		@ link register save eliminated.
 868:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent ret;
 869:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 870:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #if osFeature_Wait == 0
 871:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret.status = osErrorOS;
 872:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ret;
 1500              		.loc 1 872 0
 1501 0000 4FF0FF03 		mov	r3, #255
 1502 0004 0360     		str	r3, [r0, #0]
 873:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #else
 874:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // Not allowed in ISR
 875:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorISR;
 876:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return ret;
 877:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 878:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcWait(millisec);
 879:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #endif
 880:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1503              		.loc 1 880 0
 1504 0006 7047     		bx	lr
 1505              		.cfi_endproc
 1506              	.LFE139:
 1508              		.comm	os_timer_head,4,4
 1509              		.section	.text.rt_timer_insert,"ax",%progbits
 1510              		.align	2
 1511              		.thumb
 1512              		.thumb_func
 1514              	rt_timer_insert:
 1515              	.LFB140:
 881:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 882:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 883:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Timer Management ====
 884:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 885:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer definitions
 886:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osTimerInvalid  0
 887:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osTimerStopped  1
 888:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** #define osTimerRunning  2
 889:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 890:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer structures 
 891:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 892:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** typedef struct os_timer_cb_ {                   // Timer Control Block
 893:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   struct os_timer_cb_ *next;                    // Pointer to next active Timer
 894:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint8_t             state;                    // Timer State
 895:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint8_t              type;                    // Timer Type (Periodic/One-shot)
 896:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint16_t         reserved;                    // Reserved
 897:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint16_t             tcnt;                    // Timer Delay Count
 898:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint16_t             icnt;                    // Timer Initial Count 
 899:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void                 *arg;                    // Timer Function Argument
 900:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   const osTimerDef_t *timer;                    // Pointer to Timer definition
 901:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** } os_timer_cb;
 902:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 903:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer variables
 904:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_timer_cb *os_timer_head;                     // Pointer to first active Timer
 905:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 906:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 907:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer Helper Functions
 908:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 909:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Insert Timer into the list sorted by time
 910:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static void rt_timer_insert (os_timer_cb *pt, uint32_t tcnt) {
 1516              		.loc 1 910 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
 1521 0000 10B4     		push	{r4}
 1522              	.LCFI23:
 1523              		.cfi_def_cfa_offset 4
 1524              		.cfi_offset 4, -4
 911:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *p, *prev;
 912:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 913:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   prev = NULL;
 914:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   p = os_timer_head;
 1525              		.loc 1 914 0
 1526 0002 40F20003 		movw	r3, #:lower16:os_timer_head
 1527 0006 C0F20003 		movt	r3, #:upper16:os_timer_head
 1528 000a 1C68     		ldr	r4, [r3, #0]
 915:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (p != NULL) {
 1529              		.loc 1 915 0
 1530 000c FCB1     		cbz	r4, .L117
 916:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (tcnt < p->tcnt) break;
 1531              		.loc 1 916 0
 1532 000e 2289     		ldrh	r2, [r4, #8]
 1533 0010 9142     		cmp	r1, r2
 1534 0012 04D2     		bcs	.L120
 1535 0014 11E0     		b	.L118
 1536              	.L113:
 1537 0016 1A89     		ldrh	r2, [r3, #8]
 1538 0018 8A42     		cmp	r2, r1
 1539 001a 11D8     		bhi	.L111
 917:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     tcnt -= p->tcnt;
 918:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     prev = p;
 919:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p = p->next;
 1540              		.loc 1 919 0
 1541 001c 1C46     		mov	r4, r3
 1542              	.L120:
 917:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     tcnt -= p->tcnt;
 1543              		.loc 1 917 0
 1544 001e 891A     		subs	r1, r1, r2
 1545              		.loc 1 919 0
 1546 0020 2368     		ldr	r3, [r4, #0]
 915:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (p != NULL) {
 1547              		.loc 1 915 0
 1548 0022 002B     		cmp	r3, #0
 1549 0024 F7D1     		bne	.L113
 1550 0026 15E0     		b	.L110
 1551              	.L116:
 920:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 921:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->next = p;
 922:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->tcnt = (uint16_t)tcnt;
 923:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (p != NULL) {
 924:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p->tcnt -= pt->tcnt;
 925:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 926:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (prev != NULL) {
 1552              		.loc 1 926 0
 1553 0028 0CB1     		cbz	r4, .L114
 927:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     prev->next = pt;
 1554              		.loc 1 927 0
 1555 002a 2060     		str	r0, [r4, #0]
 1556 002c 15E0     		b	.L109
 1557              	.L114:
 928:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
 929:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     os_timer_head = pt;
 1558              		.loc 1 929 0
 1559 002e 40F20003 		movw	r3, #:lower16:os_timer_head
 1560 0032 C0F20003 		movt	r3, #:upper16:os_timer_head
 1561 0036 1860     		str	r0, [r3, #0]
 1562 0038 0FE0     		b	.L109
 1563              	.L118:
 914:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   p = os_timer_head;
 1564              		.loc 1 914 0
 1565 003a 2346     		mov	r3, r4
 913:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   prev = NULL;
 1566              		.loc 1 913 0
 1567 003c 4FF00004 		mov	r4, #0
 1568              	.L111:
 921:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->next = p;
 1569              		.loc 1 921 0
 1570 0040 0360     		str	r3, [r0, #0]
 922:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->tcnt = (uint16_t)tcnt;
 1571              		.loc 1 922 0
 1572 0042 89B2     		uxth	r1, r1
 1573 0044 0181     		strh	r1, [r0, #8]	@ movhi
 924:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p->tcnt -= pt->tcnt;
 1574              		.loc 1 924 0
 1575 0046 1A89     		ldrh	r2, [r3, #8]
 1576 0048 511A     		subs	r1, r2, r1
 1577 004a 1981     		strh	r1, [r3, #8]	@ movhi
 1578 004c ECE7     		b	.L116
 1579              	.L117:
 914:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   p = os_timer_head;
 1580              		.loc 1 914 0
 1581 004e 2346     		mov	r3, r4
 913:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   prev = NULL;
 1582              		.loc 1 913 0
 1583 0050 4FF00004 		mov	r4, #0
 1584              	.L110:
 921:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->next = p;
 1585              		.loc 1 921 0
 1586 0054 0360     		str	r3, [r0, #0]
 922:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->tcnt = (uint16_t)tcnt;
 1587              		.loc 1 922 0
 1588 0056 0181     		strh	r1, [r0, #8]	@ movhi
 1589 0058 E6E7     		b	.L116
 1590              	.L109:
 930:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 931:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1591              		.loc 1 931 0
 1592 005a 10BC     		pop	{r4}
 1593 005c 7047     		bx	lr
 1594              		.cfi_endproc
 1595              	.LFE140:
 1597 005e 00BF     		.section	.text.rt_timer_remove,"ax",%progbits
 1598              		.align	2
 1599              		.thumb
 1600              		.thumb_func
 1602              	rt_timer_remove:
 1603              	.LFB141:
 932:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 933:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Remove Timer from the list
 934:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static int rt_timer_remove (os_timer_cb *pt) {
 1604              		.loc 1 934 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
 935:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *p, *prev;
 936:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 937:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   prev = NULL;
 938:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   p = os_timer_head;
 1609              		.loc 1 938 0
 1610 0000 40F20003 		movw	r3, #:lower16:os_timer_head
 1611 0004 C0F20003 		movt	r3, #:upper16:os_timer_head
 1612 0008 1A68     		ldr	r2, [r3, #0]
 939:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (p != NULL) {
 1613              		.loc 1 939 0
 1614 000a EAB1     		cbz	r2, .L129
 940:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (p == pt) break;
 1615              		.loc 1 940 0
 1616 000c 8242     		cmp	r2, r0
 1617 000e 03D1     		bne	.L131
 1618 0010 0BE0     		b	.L123
 1619              	.L126:
 1620 0012 9842     		cmp	r0, r3
 1621 0014 1ED0     		beq	.L125
 941:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     prev = p;
 942:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p = p->next;
 1622              		.loc 1 942 0
 1623 0016 1A46     		mov	r2, r3
 1624              	.L131:
 1625 0018 1368     		ldr	r3, [r2, #0]
 939:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (p != NULL) {
 1626              		.loc 1 939 0
 1627 001a 002B     		cmp	r3, #0
 1628 001c F9D1     		bne	.L126
 943:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 944:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (p == NULL) return -1;
 1629              		.loc 1 944 0
 1630 001e 4FF0FF30 		mov	r0, #-1
 1631 0022 7047     		bx	lr
 1632              	.L128:
 945:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (prev != NULL) {
 946:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     prev->next = pt->next;
 1633              		.loc 1 946 0
 1634 0024 0368     		ldr	r3, [r0, #0]
 1635 0026 1360     		str	r3, [r2, #0]
 1636 0028 05E0     		b	.L127
 1637              	.L123:
 947:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
 948:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     os_timer_head = pt->next;
 1638              		.loc 1 948 0
 1639 002a 0268     		ldr	r2, [r0, #0]
 1640 002c 40F20003 		movw	r3, #:lower16:os_timer_head
 1641 0030 C0F20003 		movt	r3, #:upper16:os_timer_head
 1642 0034 1A60     		str	r2, [r3, #0]
 1643              	.L127:
 949:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 950:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt->next != NULL) {
 1644              		.loc 1 950 0
 1645 0036 0368     		ldr	r3, [r0, #0]
 1646 0038 4BB1     		cbz	r3, .L130
 951:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     pt->next->tcnt += pt->tcnt;
 1647              		.loc 1 951 0
 1648 003a 0189     		ldrh	r1, [r0, #8]
 1649 003c 1A89     		ldrh	r2, [r3, #8]
 1650 003e 8A18     		adds	r2, r1, r2
 1651 0040 1A81     		strh	r2, [r3, #8]	@ movhi
 952:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 953:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 954:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return 0;
 1652              		.loc 1 954 0
 1653 0042 4FF00000 		mov	r0, #0
 1654 0046 7047     		bx	lr
 1655              	.L129:
 944:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (p == NULL) return -1;
 1656              		.loc 1 944 0
 1657 0048 4FF0FF30 		mov	r0, #-1
 1658 004c 7047     		bx	lr
 1659              	.L130:
 1660              		.loc 1 954 0
 1661 004e 4FF00000 		mov	r0, #0
 1662 0052 7047     		bx	lr
 1663              	.L125:
 945:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (prev != NULL) {
 1664              		.loc 1 945 0
 1665 0054 002A     		cmp	r2, #0
 1666 0056 E5D1     		bne	.L128
 1667 0058 E7E7     		b	.L123
 1668              		.cfi_endproc
 1669              	.LFE141:
 1671 005a 00BF     		.section	.text.svcTimerCreate,"ax",%progbits
 1672              		.align	2
 1673              		.global	svcTimerCreate
 1674              		.thumb
 1675              		.thumb_func
 1677              	svcTimerCreate:
 1678              	.LFB147:
 955:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 956:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 957:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 958:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer Service Calls declarations
 959:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_3_1(svcTimerCreate,           osTimerId,  const osTimerDef_t *, os_timer_type, void *, RET_poin
 960:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcTimerStart,            osStatus,         osTimerId,      uint32_t,              RET_osSt
 961:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcTimerStop,             osStatus,         osTimerId,                             RET_osSt
 962:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcTimerDelete,           osStatus,         osTimerId,                             RET_osSt
 963:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_2(svcTimerCall,   os_InRegs osCallback,       osTimerId,                             RET_osCa
 964:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 965:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer Management Service Calls
 966:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 967:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create timer
 968:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osTimerId svcTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument) {
 1679              		.loc 1 968 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
 1684 0000 10B4     		push	{r4}
 1685              	.LCFI24:
 1686              		.cfi_def_cfa_offset 4
 1687              		.cfi_offset 4, -4
 969:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *pt;
 970:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 971:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((timer_def == NULL) || (timer_def->ptimer == NULL)) {
 1688              		.loc 1 971 0
 1689 0002 0346     		mov	r3, r0
 1690 0004 A8B1     		cbz	r0, .L135
 1691              		.loc 1 971 0 is_stmt 0 discriminator 1
 1692 0006 0068     		ldr	r0, [r0, #0]
 1693 0008 B0B1     		cbz	r0, .L136
 972:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
 973:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 974:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 975:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 976:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt = timer_def->timer;
 1694              		.loc 1 976 0 is_stmt 1
 1695 000a 5868     		ldr	r0, [r3, #4]
 977:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) {
 1696              		.loc 1 977 0
 1697 000c F8B1     		cbz	r0, .L134
 978:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
 979:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 980:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 981:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 982:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((type != osTimerOnce) && (type != osTimerPeriodic)) {
 1698              		.loc 1 982 0
 1699 000e 0129     		cmp	r1, #1
 1700 0010 15D8     		bhi	.L137
 983:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorValue);
 984:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 985:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 986:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 987:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (osThreadId_osTimerThread == NULL) {
 1701              		.loc 1 987 0
 1702 0012 40F20004 		movw	r4, #:lower16:osThreadId_osTimerThread
 1703 0016 C0F20004 		movt	r4, #:upper16:osThreadId_osTimerThread
 1704 001a 2468     		ldr	r4, [r4, #0]
 1705 001c 94B1     		cbz	r4, .L138
 988:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorResource);
 989:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 990:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 991:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 992:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt->state != osTimerInvalid){
 1706              		.loc 1 992 0
 1707 001e 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 1708 0020 9CB9     		cbnz	r4, .L139
 993:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorResource);
 994:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 995:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
 996:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
 997:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->next  = NULL;
 1709              		.loc 1 997 0
 1710 0022 0460     		str	r4, [r0, #0]
 998:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->state = osTimerStopped;
 1711              		.loc 1 998 0
 1712 0024 4FF00104 		mov	r4, #1
 1713 0028 0471     		strb	r4, [r0, #4]
 999:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->type  =  (uint8_t)type;
 1714              		.loc 1 999 0
 1715 002a 4171     		strb	r1, [r0, #5]
1000:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->arg   = argument;
 1716              		.loc 1 1000 0
 1717 002c C260     		str	r2, [r0, #12]
1001:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->timer = timer_def;
 1718              		.loc 1 1001 0
 1719 002e 0361     		str	r3, [r0, #16]
1002:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1003:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (osTimerId)pt;
 1720              		.loc 1 1003 0
 1721 0030 0DE0     		b	.L134
 1722              	.L135:
 973:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 1723              		.loc 1 973 0
 1724 0032 4FF00000 		mov	r0, #0
 1725 0036 0AE0     		b	.L134
 1726              	.L136:
 1727 0038 4FF00000 		mov	r0, #0
 1728 003c 07E0     		b	.L134
 1729              	.L137:
 984:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 1730              		.loc 1 984 0
 1731 003e 4FF00000 		mov	r0, #0
 1732 0042 04E0     		b	.L134
 1733              	.L138:
 989:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 1734              		.loc 1 989 0
 1735 0044 4FF00000 		mov	r0, #0
 1736 0048 01E0     		b	.L134
 1737              	.L139:
 994:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 1738              		.loc 1 994 0
 1739 004a 4FF00000 		mov	r0, #0
 1740              	.L134:
1004:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1741              		.loc 1 1004 0
 1742 004e 10BC     		pop	{r4}
 1743 0050 7047     		bx	lr
 1744              		.cfi_endproc
 1745              	.LFE147:
 1747 0052 00BF     		.section	.text.svcTimerStart,"ax",%progbits
 1748              		.align	2
 1749              		.global	svcTimerStart
 1750              		.thumb
 1751              		.thumb_func
 1753              	svcTimerStart:
 1754              	.LFB148:
1005:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1006:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Start or restart timer
1007:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcTimerStart (osTimerId timer_id, uint32_t millisec) {
 1755              		.loc 1 1007 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759 0000 38B5     		push	{r3, r4, r5, lr}
 1760              	.LCFI25:
 1761              		.cfi_def_cfa_offset 16
 1762              		.cfi_offset 3, -16
 1763              		.cfi_offset 4, -12
 1764              		.cfi_offset 5, -8
 1765              		.cfi_offset 14, -4
 1766 0002 0C46     		mov	r4, r1
1008:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *pt;
1009:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t     tcnt;
1010:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1011:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt = rt_id2obj(timer_id);
 1767              		.loc 1 1011 0
 1768 0004 FFF7FEFF 		bl	rt_id2obj
1012:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) return osErrorParameter;
 1769              		.loc 1 1012 0
 1770 0008 0546     		mov	r5, r0
 1771 000a C8B1     		cbz	r0, .L145
1013:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1014:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   tcnt = rt_ms2tick(millisec);
 1772              		.loc 1 1014 0
 1773 000c 2046     		mov	r0, r4
 1774 000e FFF7FEFF 		bl	rt_ms2tick
1015:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tcnt == 0) return osErrorValue;
 1775              		.loc 1 1015 0
 1776 0012 0446     		mov	r4, r0
 1777 0014 B8B1     		cbz	r0, .L146
1016:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1017:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   switch (pt->state) {
 1778              		.loc 1 1017 0
 1779 0016 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 1780 0018 012B     		cmp	r3, #1
 1781 001a 06D0     		beq	.L142
 1782 001c 022B     		cmp	r3, #2
 1783 001e 15D1     		bne	.L149
1018:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case osTimerRunning:
1019:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if (rt_timer_remove(pt) != 0) {
 1784              		.loc 1 1019 0
 1785 0020 2846     		mov	r0, r5
 1786 0022 FFF7FEFF 		bl	rt_timer_remove
 1787 0026 A0B9     		cbnz	r0, .L148
 1788 0028 03E0     		b	.L144
 1789              	.L142:
1020:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         return osErrorResource;
1021:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       }
1022:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
1023:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case osTimerStopped:
1024:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       pt->state = osTimerRunning;
 1790              		.loc 1 1024 0
 1791 002a 4FF00203 		mov	r3, #2
 1792 002e 2B71     		strb	r3, [r5, #4]
1025:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       pt->icnt  = (uint16_t)tcnt;
 1793              		.loc 1 1025 0
 1794 0030 6881     		strh	r0, [r5, #10]	@ movhi
 1795              	.L144:
1026:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
1027:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     default:
1028:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return osErrorResource;
1029:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1030:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
1031:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_timer_insert(pt, tcnt);
 1796              		.loc 1 1031 0
 1797 0032 2846     		mov	r0, r5
 1798 0034 2146     		mov	r1, r4
 1799 0036 FFF7FEFF 		bl	rt_timer_insert
1032:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1033:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 1800              		.loc 1 1033 0
 1801 003a 4FF00000 		mov	r0, #0
 1802 003e 38BD     		pop	{r3, r4, r5, pc}
 1803              	.L145:
1012:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) return osErrorParameter;
 1804              		.loc 1 1012 0
 1805 0040 4FF08000 		mov	r0, #128
 1806 0044 38BD     		pop	{r3, r4, r5, pc}
 1807              	.L146:
1015:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (tcnt == 0) return osErrorValue;
 1808              		.loc 1 1015 0
 1809 0046 4FF08600 		mov	r0, #134
 1810 004a 38BD     		pop	{r3, r4, r5, pc}
 1811              	.L149:
1028:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return osErrorResource;
 1812              		.loc 1 1028 0
 1813 004c 4FF08100 		mov	r0, #129
 1814 0050 38BD     		pop	{r3, r4, r5, pc}
 1815              	.L148:
1020:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         return osErrorResource;
 1816              		.loc 1 1020 0
 1817 0052 4FF08100 		mov	r0, #129
1034:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1818              		.loc 1 1034 0
 1819 0056 38BD     		pop	{r3, r4, r5, pc}
 1820              		.cfi_endproc
 1821              	.LFE148:
 1823              		.section	.text.svcTimerStop,"ax",%progbits
 1824              		.align	2
 1825              		.global	svcTimerStop
 1826              		.thumb
 1827              		.thumb_func
 1829              	svcTimerStop:
 1830              	.LFB149:
1035:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1036:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Stop timer
1037:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcTimerStop (osTimerId timer_id) {
 1831              		.loc 1 1037 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835 0000 08B5     		push	{r3, lr}
 1836              	.LCFI26:
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 3, -8
 1839              		.cfi_offset 14, -4
1038:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *pt;
1039:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1040:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt = rt_id2obj(timer_id);
 1840              		.loc 1 1040 0
 1841 0002 FFF7FEFF 		bl	rt_id2obj
1041:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) return osErrorParameter;
 1842              		.loc 1 1041 0
 1843 0006 60B1     		cbz	r0, .L152
1042:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1043:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt->state != osTimerRunning) return osErrorResource;
 1844              		.loc 1 1043 0
 1845 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 1846 000a 022A     		cmp	r2, #2
 1847 000c 0CD1     		bne	.L153
1044:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1045:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->state = osTimerStopped;
 1848              		.loc 1 1045 0
 1849 000e 4FF00102 		mov	r2, #1
 1850 0012 0271     		strb	r2, [r0, #4]
1046:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1047:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (rt_timer_remove(pt) != 0) {
 1851              		.loc 1 1047 0
 1852 0014 FFF7FEFF 		bl	rt_timer_remove
1048:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorResource;
 1853              		.loc 1 1048 0
 1854 0018 0028     		cmp	r0, #0
 1855 001a 14BF     		ite	ne
 1856 001c 8120     		movne	r0, #129
 1857 001e 0020     		moveq	r0, #0
 1858 0020 08BD     		pop	{r3, pc}
 1859              	.L152:
1041:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) return osErrorParameter;
 1860              		.loc 1 1041 0
 1861 0022 4FF08000 		mov	r0, #128
 1862 0026 08BD     		pop	{r3, pc}
 1863              	.L153:
1043:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt->state != osTimerRunning) return osErrorResource;
 1864              		.loc 1 1043 0
 1865 0028 4FF08100 		mov	r0, #129
1049:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1050:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1051:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
1052:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1866              		.loc 1 1052 0
 1867 002c 08BD     		pop	{r3, pc}
 1868              		.cfi_endproc
 1869              	.LFE149:
 1871 002e 00BF     		.section	.text.svcTimerDelete,"ax",%progbits
 1872              		.align	2
 1873              		.global	svcTimerDelete
 1874              		.thumb
 1875              		.thumb_func
 1877              	svcTimerDelete:
 1878              	.LFB150:
1053:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1054:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Delete timer
1055:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcTimerDelete (osTimerId timer_id) {
 1879              		.loc 1 1055 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883 0000 10B5     		push	{r4, lr}
 1884              	.LCFI27:
 1885              		.cfi_def_cfa_offset 8
 1886              		.cfi_offset 4, -8
 1887              		.cfi_offset 14, -4
1056:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *pt;
1057:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1058:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt = rt_id2obj(timer_id);
 1888              		.loc 1 1058 0
 1889 0002 FFF7FEFF 		bl	rt_id2obj
1059:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) return osErrorParameter;
 1890              		.loc 1 1059 0
 1891 0006 0446     		mov	r4, r0
 1892 0008 50B1     		cbz	r0, .L159
1060:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1061:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   switch (pt->state) {
 1893              		.loc 1 1061 0
 1894 000a 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1895 000c 012B     		cmp	r3, #1
 1896 000e 03D0     		beq	.L157
 1897 0010 022B     		cmp	r3, #2
 1898 0012 08D1     		bne	.L161
1062:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case osTimerRunning:
1063:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_timer_remove(pt);
 1899              		.loc 1 1063 0
 1900 0014 FFF7FEFF 		bl	rt_timer_remove
 1901              	.L157:
1064:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
1065:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     case osTimerStopped:
1066:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
1067:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     default:
1068:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return osErrorResource;
1069:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1070:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1071:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt->state = osTimerInvalid;
 1902              		.loc 1 1071 0
 1903 0018 4FF00000 		mov	r0, #0
 1904 001c 2071     		strb	r0, [r4, #4]
1072:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1073:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 1905              		.loc 1 1073 0
 1906 001e 10BD     		pop	{r4, pc}
 1907              	.L159:
1059:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) return osErrorParameter;
 1908              		.loc 1 1059 0
 1909 0020 4FF08000 		mov	r0, #128
 1910 0024 10BD     		pop	{r4, pc}
 1911              	.L161:
1068:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       return osErrorResource;
 1912              		.loc 1 1068 0
 1913 0026 4FF08100 		mov	r0, #129
1074:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1914              		.loc 1 1074 0
 1915 002a 10BD     		pop	{r4, pc}
 1916              		.cfi_endproc
 1917              	.LFE150:
 1919              		.section	.text.svcTimerCall,"ax",%progbits
 1920              		.align	2
 1921              		.global	svcTimerCall
 1922              		.thumb
 1923              		.thumb_func
 1925              	svcTimerCall:
 1926              	.LFB151:
1075:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1076:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get timer callback parameters
1077:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osCallback_type svcTimerCall (osTimerId timer_id) {
 1927              		.loc 1 1077 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931 0000 08B5     		push	{r3, lr}
 1932              	.LCFI28:
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 3, -8
 1935              		.cfi_offset 14, -4
1078:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *pt;
1079:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osCallback   ret;
1080:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1081:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pt = rt_id2obj(timer_id);
 1936              		.loc 1 1081 0
 1937 0002 FFF7FEFF 		bl	rt_id2obj
1082:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pt == NULL) {
 1938              		.loc 1 1082 0
 1939 0006 0146     		mov	r1, r0
 1940 0008 18B1     		cbz	r0, .L164
1083:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.fp  = NULL;
1084:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.arg = NULL;
1085:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osCallback_ret;
1086:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1087:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1088:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret.fp  = (void *)pt->timer->ptimer;
 1941              		.loc 1 1088 0
 1942 000a 0069     		ldr	r0, [r0, #16]
1089:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret.arg = pt->arg;
1090:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1091:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osCallback_ret;
 1943              		.loc 1 1091 0
 1944 000c 0268     		ldr	r2, [r0, #0]
 1945 000e CB68     		ldr	r3, [r1, #12]
 1946 0010 03E0     		b	.L163
 1947              	.L164:
1085:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osCallback_ret;
 1948              		.loc 1 1085 0
 1949 0012 4FF00002 		mov	r2, #0
 1950 0016 4FF00003 		mov	r3, #0
 1951              	.L163:
1092:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 1952              		.loc 1 1092 0
 1953 001a 1046     		mov	r0, r2
 1954 001c 1946     		mov	r1, r3
 1955 001e 08BD     		pop	{r3, pc}
 1956              		.cfi_endproc
 1957              	.LFE151:
 1959              		.section	.text.sysTimerTick,"ax",%progbits
 1960              		.align	2
 1961              		.global	sysTimerTick
 1962              		.thumb
 1963              		.thumb_func
 1965              	sysTimerTick:
 1966              	.LFB152:
1093:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1094:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __INLINE osStatus isrMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec);
1095:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1096:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Timer Tick (called each SysTick)
1097:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void sysTimerTick (void) {
 1967              		.loc 1 1097 0
 1968              		.cfi_startproc
 1969              		@ args = 0, pretend = 0, frame = 0
 1970              		@ frame_needed = 0, uses_anonymous_args = 0
 1971 0000 2DE97847 		push	{r3, r4, r5, r6, r8, r9, sl, lr}
 1972              	.LCFI29:
 1973              		.cfi_def_cfa_offset 32
 1974              		.cfi_offset 3, -32
 1975              		.cfi_offset 4, -28
 1976              		.cfi_offset 5, -24
 1977              		.cfi_offset 6, -20
 1978              		.cfi_offset 8, -16
 1979              		.cfi_offset 9, -12
 1980              		.cfi_offset 10, -8
 1981              		.cfi_offset 14, -4
1098:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   os_timer_cb *pt, *p;
1099:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1100:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   p = os_timer_head;
 1982              		.loc 1 1100 0
 1983 0004 40F20003 		movw	r3, #:lower16:os_timer_head
 1984 0008 C0F20003 		movt	r3, #:upper16:os_timer_head
 1985 000c 1C68     		ldr	r4, [r3, #0]
1101:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (p == NULL) return;
 1986              		.loc 1 1101 0
 1987 000e 44B3     		cbz	r4, .L165
1102:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1103:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   p->tcnt--;
 1988              		.loc 1 1103 0
 1989 0010 2389     		ldrh	r3, [r4, #8]
 1990 0012 03F1FF33 		add	r3, r3, #-1
 1991 0016 9BB2     		uxth	r3, r3
 1992 0018 2381     		strh	r3, [r4, #8]	@ movhi
1104:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while ((p != NULL) && (p->tcnt == 0)) {
 1993              		.loc 1 1104 0
 1994 001a 13BB     		cbnz	r3, .L165
1105:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     pt = p;
1106:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p = p->next;
1107:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     os_timer_head = p;
 1995              		.loc 1 1107 0
 1996 001c 40F20006 		movw	r6, #:lower16:os_timer_head
 1997 0020 C0F20006 		movt	r6, #:upper16:os_timer_head
1108:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     isrMessagePut(osMessageQId_osTimerMessageQ, (uint32_t)pt, 0);
 1998              		.loc 1 1108 0
 1999 0024 40F20008 		movw	r8, #:lower16:osMessageQId_osTimerMessageQ
 2000 0028 C0F20008 		movt	r8, #:upper16:osMessageQId_osTimerMessageQ
 2001 002c 4FF00009 		mov	r9, #0
1109:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (pt->type == osTimerPeriodic) {
1110:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_timer_insert(pt, pt->icnt);
1111:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     } else {
1112:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       pt->state = osTimerStopped;
 2002              		.loc 1 1112 0
 2003 0030 4FF0010A 		mov	sl, #1
 2004              	.L170:
1106:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p = p->next;
 2005              		.loc 1 1106 0
 2006 0034 2568     		ldr	r5, [r4, #0]
1107:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     os_timer_head = p;
 2007              		.loc 1 1107 0
 2008 0036 3560     		str	r5, [r6, #0]
1108:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     isrMessagePut(osMessageQId_osTimerMessageQ, (uint32_t)pt, 0);
 2009              		.loc 1 1108 0
 2010 0038 D8F80000 		ldr	r0, [r8, #0]
 2011 003c 2146     		mov	r1, r4
 2012 003e 4A46     		mov	r2, r9
 2013 0040 FFF7FEFF 		bl	isrMessagePut
1109:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (pt->type == osTimerPeriodic) {
 2014              		.loc 1 1109 0
 2015 0044 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 2016 0046 012B     		cmp	r3, #1
 2017 0048 04D1     		bne	.L167
1110:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_timer_insert(pt, pt->icnt);
 2018              		.loc 1 1110 0
 2019 004a 2046     		mov	r0, r4
 2020 004c 6189     		ldrh	r1, [r4, #10]
 2021 004e FFF7FEFF 		bl	rt_timer_insert
 2022 0052 01E0     		b	.L168
 2023              	.L167:
 2024              		.loc 1 1112 0
 2025 0054 84F804A0 		strb	sl, [r4, #4]
 2026              	.L168:
1104:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while ((p != NULL) && (p->tcnt == 0)) {
 2027              		.loc 1 1104 0 discriminator 1
 2028 0058 1DB1     		cbz	r5, .L165
 2029 005a 2C46     		mov	r4, r5
1104:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while ((p != NULL) && (p->tcnt == 0)) {
 2030              		.loc 1 1104 0 is_stmt 0 discriminator 2
 2031 005c 2B89     		ldrh	r3, [r5, #8]
 2032 005e 002B     		cmp	r3, #0
 2033 0060 E8D0     		beq	.L170
 2034              	.L165:
 2035 0062 BDE87887 		pop	{r3, r4, r5, r6, r8, r9, sl, pc}
 2036              		.cfi_endproc
 2037              	.LFE152:
 2039 0066 00BF     		.section	.text.sysUserTimerWakeupTime,"ax",%progbits
 2040              		.align	2
 2041              		.global	sysUserTimerWakeupTime
 2042              		.thumb
 2043              		.thumb_func
 2045              	sysUserTimerWakeupTime:
 2046              	.LFB153:
1113:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
1114:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1115:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
1116:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1117:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get user timers wake-up time 
1118:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint32_t sysUserTimerWakeupTime (void) {
 2047              		.loc 1 1118 0 is_stmt 1
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
1119:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1120:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (os_timer_head) {
 2052              		.loc 1 1120 0
 2053 0000 40F20003 		movw	r3, #:lower16:os_timer_head
 2054 0004 C0F20003 		movt	r3, #:upper16:os_timer_head
 2055 0008 1B68     		ldr	r3, [r3, #0]
 2056 000a 0BB1     		cbz	r3, .L174
1121:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return os_timer_head->tcnt;
 2057              		.loc 1 1121 0
 2058 000c 1889     		ldrh	r0, [r3, #8]
 2059 000e 7047     		bx	lr
 2060              	.L174:
1122:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1123:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return 0xFFFF;
 2061              		.loc 1 1123 0
 2062 0010 4FF6FF70 		movw	r0, #65535
1124:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2063              		.loc 1 1124 0
 2064 0014 7047     		bx	lr
 2065              		.cfi_endproc
 2066              	.LFE153:
 2068 0016 00BF     		.section	.text.sysUserTimerUpdate,"ax",%progbits
 2069              		.align	2
 2070              		.global	sysUserTimerUpdate
 2071              		.thumb
 2072              		.thumb_func
 2074              	sysUserTimerUpdate:
 2075              	.LFB154:
1125:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1126:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Update user timers on resume
1127:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void sysUserTimerUpdate (uint32_t sleep_time) {
 2076              		.loc 1 1127 0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080 0000 70B5     		push	{r4, r5, r6, lr}
 2081              	.LCFI30:
 2082              		.cfi_def_cfa_offset 16
 2083              		.cfi_offset 4, -16
 2084              		.cfi_offset 5, -12
 2085              		.cfi_offset 6, -8
 2086              		.cfi_offset 14, -4
 2087 0002 0446     		mov	r4, r0
1128:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1129:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (os_timer_head && sleep_time) {
 2088              		.loc 1 1129 0
 2089 0004 40F20003 		movw	r3, #:lower16:os_timer_head
 2090 0008 C0F20003 		movt	r3, #:upper16:os_timer_head
 2091 000c 1B68     		ldr	r3, [r3, #0]
 2092 000e ABB9     		cbnz	r3, .L176
 2093 0010 70BD     		pop	{r4, r5, r6, pc}
 2094              	.L181:
1130:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (sleep_time >= os_timer_head->tcnt) {
 2095              		.loc 1 1130 0
 2096 0012 1A89     		ldrh	r2, [r3, #8]
 2097 0014 1146     		mov	r1, r2
 2098 0016 A242     		cmp	r2, r4
 2099 0018 06D9     		bls	.L182
 2100 001a 0CE0     		b	.L178
 2101              	.L180:
1131:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       sleep_time -= os_timer_head->tcnt;
1132:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       os_timer_head->tcnt = 1;
 2102              		.loc 1 1132 0
 2103 001c 4FF00105 		mov	r5, #1
1129:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (os_timer_head && sleep_time) {
 2104              		.loc 1 1129 0
 2105 0020 40F20006 		movw	r6, #:lower16:os_timer_head
 2106 0024 C0F20006 		movt	r6, #:upper16:os_timer_head
 2107              	.L182:
1131:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       sleep_time -= os_timer_head->tcnt;
 2108              		.loc 1 1131 0
 2109 0028 641A     		subs	r4, r4, r1
 2110              		.loc 1 1132 0
 2111 002a 1D81     		strh	r5, [r3, #8]	@ movhi
1133:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       sysTimerTick();
 2112              		.loc 1 1133 0
 2113 002c FFF7FEFF 		bl	sysTimerTick
1129:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (os_timer_head && sleep_time) {
 2114              		.loc 1 1129 0
 2115 0030 3368     		ldr	r3, [r6, #0]
 2116 0032 4BB9     		cbnz	r3, .L179
 2117 0034 70BD     		pop	{r4, r5, r6, pc}
 2118              	.L178:
1134:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     } else {
1135:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       os_timer_head->tcnt -= sleep_time;
 2119              		.loc 1 1135 0
 2120 0036 121B     		subs	r2, r2, r4
 2121 0038 1A81     		strh	r2, [r3, #8]	@ movhi
1136:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       break;
 2122              		.loc 1 1136 0
 2123 003a 70BD     		pop	{r4, r5, r6, pc}
 2124              	.L176:
1129:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (os_timer_head && sleep_time) {
 2125              		.loc 1 1129 0
 2126 003c 30B1     		cbz	r0, .L175
1130:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (sleep_time >= os_timer_head->tcnt) {
 2127              		.loc 1 1130 0
 2128 003e 1A89     		ldrh	r2, [r3, #8]
 2129 0040 1146     		mov	r1, r2
 2130 0042 9042     		cmp	r0, r2
 2131 0044 EAD2     		bcs	.L180
 2132 0046 F6E7     		b	.L178
 2133              	.L179:
1129:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   while (os_timer_head && sleep_time) {
 2134              		.loc 1 1129 0 discriminator 2
 2135 0048 002C     		cmp	r4, #0
 2136 004a E2D1     		bne	.L181
 2137              	.L175:
 2138 004c 70BD     		pop	{r4, r5, r6, pc}
 2139              		.cfi_endproc
 2140              	.LFE154:
 2142 004e 00BF     		.section	.text.osTimerCreate,"ax",%progbits
 2143              		.align	2
 2144              		.global	osTimerCreate
 2145              		.thumb
 2146              		.thumb_func
 2148              	osTimerCreate:
 2149              	.LFB155:
1137:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
1138:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1139:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
1140:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1141:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1142:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer Management Public API
1143:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1144:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create timer
1145:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osTimerId osTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument) {
 2150              		.loc 1 1145 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154 0000 10B5     		push	{r4, lr}
 2155              	.LCFI31:
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 4, -8
 2158              		.cfi_offset 14, -4
 2159              	.LBB278:
 2160              	.LBB279:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2161              		.loc 2 383 0
 2162              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2163 0002 EFF30584 		MRS r4, ipsr
 2164              	@ 0 "" 2
 2165              		.thumb
 2166              	.LBE279:
 2167              	.LBE278:
1146:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 2168              		.loc 1 1146 0
 2169 0006 8CB9     		cbnz	r4, .L186
 2170              	.LBB280:
 2171              	.LBB281:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 2172              		.loc 2 356 0
 2173              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2174 0008 EFF31484 		MRS r4, control
 2175              	@ 0 "" 2
 2176              		.thumb
 2177              	.LBE281:
 2178              	.LBE280:
1147:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 2179              		.loc 1 1147 0
 2180 000c 14F0010F 		tst	r4, #1
 2181 0010 08D1     		bne	.L185
 2182              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2183 0012 40F20004 		movw	r4, #:lower16:os_running
 2184 0016 C0F20004 		movt	r4, #:upper16:os_running
 2185 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 2186 001c 14B9     		cbnz	r4, .L185
1148:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
1149:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcTimerCreate(timer_def, type, argument);
 2187              		.loc 1 1149 0 is_stmt 1
 2188 001e FFF7FEFF 		bl	svcTimerCreate
 2189 0022 10BD     		pop	{r4, pc}
 2190              	.L185:
 2191              	.LBB282:
 2192              	.LBB283:
 959:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_3_1(svcTimerCreate,           osTimerId,  const osTimerDef_t *, os_timer_type, void *, RET_poin
 2193              		.loc 1 959 0
 2194              	@ 959 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2195 0024 DFF80CC0 		ldr r12,=svcTimerCreate
 2196 0028 00DF     		svc 0
 2197              	@ 0 "" 2
 2198              		.thumb
 2199              	.LBE283:
 2200              	.LBE282:
1150:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1151:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcTimerCreate(timer_def, type, argument);
 2201              		.loc 1 1151 0
 2202 002a 10BD     		pop	{r4, pc}
 2203              	.L186:
1146:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 2204              		.loc 1 1146 0
 2205 002c 4FF00000 		mov	r0, #0
1152:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1153:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2206              		.loc 1 1153 0
 2207 0030 10BD     		pop	{r4, pc}
 2208              		.cfi_endproc
 2209              	.LFE155:
 2211 0032 0000     		.section	.text.osTimerStart,"ax",%progbits
 2212              		.align	2
 2213              		.global	osTimerStart
 2214              		.thumb
 2215              		.thumb_func
 2217              	osTimerStart:
 2218              	.LFB156:
1154:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1155:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Start or restart timer
1156:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osTimerStart (osTimerId timer_id, uint32_t millisec) {
 2219              		.loc 1 1156 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223 0000 10B5     		push	{r4, lr}
 2224              	.LCFI32:
 2225              		.cfi_def_cfa_offset 8
 2226              		.cfi_offset 4, -8
 2227              		.cfi_offset 14, -4
 2228              	.LBB284:
 2229              	.LBB285:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2230              		.loc 2 383 0
 2231              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2232 0002 EFF30584 		MRS r4, ipsr
 2233              	@ 0 "" 2
 2234              		.thumb
 2235              	.LBE285:
 2236              	.LBE284:
1157:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2237              		.loc 1 1157 0
 2238 0006 1CB9     		cbnz	r4, .L189
 2239              	.LBB286:
 2240              	.LBB287:
 960:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcTimerStart,            osStatus,         osTimerId,      uint32_t,              RET_osSt
 2241              		.loc 1 960 0
 2242              	@ 960 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2243 0008 DFF80CC0 		ldr r12,=svcTimerStart
 2244 000c 00DF     		svc 0
 2245              	@ 0 "" 2
 2246              		.thumb
 2247              	.LBE287:
 2248              	.LBE286:
1158:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcTimerStart(timer_id, millisec);
 2249              		.loc 1 1158 0
 2250 000e 10BD     		pop	{r4, pc}
 2251              	.L189:
1157:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2252              		.loc 1 1157 0
 2253 0010 4FF08200 		mov	r0, #130
1159:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2254              		.loc 1 1159 0
 2255 0014 10BD     		pop	{r4, pc}
 2256              		.cfi_endproc
 2257              	.LFE156:
 2259 0016 0000     		.section	.text.osTimerStop,"ax",%progbits
 2260              		.align	2
 2261              		.global	osTimerStop
 2262              		.thumb
 2263              		.thumb_func
 2265              	osTimerStop:
 2266              	.LFB157:
1160:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1161:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Stop timer
1162:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osTimerStop (osTimerId timer_id) {
 2267              		.loc 1 1162 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271 0000 10B5     		push	{r4, lr}
 2272              	.LCFI33:
 2273              		.cfi_def_cfa_offset 8
 2274              		.cfi_offset 4, -8
 2275              		.cfi_offset 14, -4
 2276              	.LBB288:
 2277              	.LBB289:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2278              		.loc 2 383 0
 2279              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2280 0002 EFF30584 		MRS r4, ipsr
 2281              	@ 0 "" 2
 2282              		.thumb
 2283              	.LBE289:
 2284              	.LBE288:
1163:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2285              		.loc 1 1163 0
 2286 0006 1CB9     		cbnz	r4, .L192
 2287              	.LBB290:
 2288              	.LBB291:
 961:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcTimerStop,             osStatus,         osTimerId,                             RET_osSt
 2289              		.loc 1 961 0
 2290              	@ 961 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2291 0008 DFF80CC0 		ldr r12,=svcTimerStop
 2292 000c 00DF     		svc 0
 2293              	@ 0 "" 2
 2294              		.thumb
 2295              	.LBE291:
 2296              	.LBE290:
1164:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcTimerStop(timer_id);
 2297              		.loc 1 1164 0
 2298 000e 10BD     		pop	{r4, pc}
 2299              	.L192:
1163:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2300              		.loc 1 1163 0
 2301 0010 4FF08200 		mov	r0, #130
1165:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2302              		.loc 1 1165 0
 2303 0014 10BD     		pop	{r4, pc}
 2304              		.cfi_endproc
 2305              	.LFE157:
 2307 0016 0000     		.section	.text.osTimerDelete,"ax",%progbits
 2308              		.align	2
 2309              		.global	osTimerDelete
 2310              		.thumb
 2311              		.thumb_func
 2313              	osTimerDelete:
 2314              	.LFB158:
1166:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1167:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Delete timer
1168:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osTimerDelete (osTimerId timer_id) {
 2315              		.loc 1 1168 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 0, uses_anonymous_args = 0
 2319 0000 10B5     		push	{r4, lr}
 2320              	.LCFI34:
 2321              		.cfi_def_cfa_offset 8
 2322              		.cfi_offset 4, -8
 2323              		.cfi_offset 14, -4
 2324              	.LBB292:
 2325              	.LBB293:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2326              		.loc 2 383 0
 2327              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2328 0002 EFF30584 		MRS r4, ipsr
 2329              	@ 0 "" 2
 2330              		.thumb
 2331              	.LBE293:
 2332              	.LBE292:
1169:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2333              		.loc 1 1169 0
 2334 0006 1CB9     		cbnz	r4, .L195
 2335              	.LBB294:
 2336              	.LBB295:
 962:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcTimerDelete,           osStatus,         osTimerId,                             RET_osSt
 2337              		.loc 1 962 0
 2338              	@ 962 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2339 0008 DFF80CC0 		ldr r12,=svcTimerDelete
 2340 000c 00DF     		svc 0
 2341              	@ 0 "" 2
 2342              		.thumb
 2343              	.LBE295:
 2344              	.LBE294:
1170:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcTimerDelete(timer_id);
 2345              		.loc 1 1170 0
 2346 000e 10BD     		pop	{r4, pc}
 2347              	.L195:
1169:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2348              		.loc 1 1169 0
 2349 0010 4FF08200 		mov	r0, #130
1171:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2350              		.loc 1 1171 0
 2351 0014 10BD     		pop	{r4, pc}
 2352              		.cfi_endproc
 2353              	.LFE158:
 2355 0016 0000     		.section	.text.osTimerCall,"ax",%progbits
 2356              		.align	2
 2357              		.global	osTimerCall
 2358              		.thumb
 2359              		.thumb_func
 2361              	osTimerCall:
 2362              	.LFB159:
1172:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1173:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// INTERNAL - Not Public
1174:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get timer callback parameters (used by OS Timer Thread)
1175:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osCallback osTimerCall (osTimerId timer_id) { 
 2363              		.loc 1 1175 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367 0000 10B5     		push	{r4, lr}
 2368              	.LCFI35:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 4, -8
 2371              		.cfi_offset 14, -4
 2372 0002 0446     		mov	r4, r0
 2373              	.LBB296:
 2374              	.LBB297:
 963:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_2(svcTimerCall,   os_InRegs osCallback,       osTimerId,                             RET_osCa
 2375              		.loc 1 963 0
 2376 0004 0846     		mov	r0, r1
 2377              	@ 963 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2378 0006 DFF80CC0 		ldr r12,=svcTimerCall
 2379 000a 00DF     		svc 0
 2380              	@ 0 "" 2
 2381              		.thumb
 2382 000c 2060     		str	r0, [r4, #0]
 2383 000e 6160     		str	r1, [r4, #4]
 2384              	.LBE297:
 2385              	.LBE296:
1176:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcTimerCall(timer_id); 
1177:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2386              		.loc 1 1177 0
 2387 0010 2046     		mov	r0, r4
 2388 0012 10BD     		pop	{r4, pc}
 2389              		.cfi_endproc
 2390              	.LFE159:
 2392              		.section	.text.osTimerThread,"ax",%progbits
 2393              		.align	2
 2394              		.global	osTimerThread
 2395              		.thumb
 2396              		.thumb_func
 2398              	osTimerThread:
 2399              	.LFB160:
1178:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1179:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1180:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Timer Thread
1181:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** __NO_RETURN void osTimerThread (void const *argument) {
 2400              		.loc 1 1181 0
 2401              		.cfi_startproc
 2402              		@ Volatile: function does not return.
 2403              		@ args = 0, pretend = 0, frame = 24
 2404              		@ frame_needed = 0, uses_anonymous_args = 0
 2405 0000 00B5     		push	{lr}
 2406              	.LCFI36:
 2407              		.cfi_def_cfa_offset 4
 2408              		.cfi_offset 14, -4
 2409 0002 87B0     		sub	sp, sp, #28
 2410              	.LCFI37:
 2411              		.cfi_def_cfa_offset 32
1182:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osCallback cb;
1183:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent    evt;
1184:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1185:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   for (;;) {
1186:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     evt = osMessageGet(osMessageQId_osTimerMessageQ, osWaitForever);
 2412              		.loc 1 1186 0
 2413 0004 40F20004 		movw	r4, #:lower16:osMessageQId_osTimerMessageQ
 2414 0008 C0F20004 		movt	r4, #:upper16:osMessageQId_osTimerMessageQ
 2415 000c 4FF0FF35 		mov	r5, #-1
 2416              	.L203:
 2417 0010 01A8     		add	r0, sp, #4
 2418 0012 2168     		ldr	r1, [r4, #0]
 2419 0014 2A46     		mov	r2, r5
 2420 0016 FFF7FEFF 		bl	osMessageGet
1187:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (evt.status == osEventMessage) {
 2421              		.loc 1 1187 0
 2422 001a 019B     		ldr	r3, [sp, #4]
 2423 001c 102B     		cmp	r3, #16
 2424 001e F7D1     		bne	.L203
1188:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       cb = osTimerCall(evt.value.p);
 2425              		.loc 1 1188 0
 2426 0020 04A8     		add	r0, sp, #16
 2427 0022 0299     		ldr	r1, [sp, #8]
 2428 0024 FFF7FEFF 		bl	osTimerCall
 2429 0028 049B     		ldr	r3, [sp, #16]
1189:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if (cb.fp != NULL) {
 2430              		.loc 1 1189 0
 2431 002a 002B     		cmp	r3, #0
 2432 002c F0D0     		beq	.L203
1190:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         (*(os_ptimer)cb.fp)(cb.arg);
 2433              		.loc 1 1190 0
 2434 002e 0598     		ldr	r0, [sp, #20]
 2435 0030 9847     		blx	r3
 2436 0032 EDE7     		b	.L203
 2437              		.cfi_endproc
 2438              	.LFE160:
 2440              		.section	.text.svcSignalSet,"ax",%progbits
 2441              		.align	2
 2442              		.global	svcSignalSet
 2443              		.thumb
 2444              		.thumb_func
 2446              	svcSignalSet:
 2447              	.LFB164:
1191:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       }
1192:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
1193:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1194:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
1195:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1196:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1197:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Signal Management ====
1198:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1199:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Signal Service Calls declarations
1200:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSignalSet,             int32_t, osThreadId, int32_t,  RET_int32_t)
1201:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSignalClear,           int32_t, osThreadId, int32_t,  RET_int32_t)
1202:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_3(svcSignalWait,  os_InRegs osEvent, int32_t,    uint32_t, RET_osEvent)
1203:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1204:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Signal Service Calls
1205:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1206:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Set the specified Signal Flags of an active thread
1207:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t svcSignalSet (osThreadId thread_id, int32_t signals) {
 2448              		.loc 1 1207 0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 0
 2451              		@ frame_needed = 0, uses_anonymous_args = 0
 2452 0000 38B5     		push	{r3, r4, r5, lr}
 2453              	.LCFI38:
 2454              		.cfi_def_cfa_offset 16
 2455              		.cfi_offset 3, -16
 2456              		.cfi_offset 4, -12
 2457              		.cfi_offset 5, -8
 2458              		.cfi_offset 14, -4
 2459 0002 0C46     		mov	r4, r1
1208:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB   ptcb;
1209:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   int32_t sig;
1210:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1211:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = rt_tid2ptcb(thread_id);                // Get TCB pointer
 2460              		.loc 1 1211 0
 2461 0004 FFF7FEFF 		bl	rt_tid2ptcb
1212:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return 0x80000000;
 2462              		.loc 1 1212 0
 2463 0008 0346     		mov	r3, r0
 2464 000a 38B1     		cbz	r0, .L206
1213:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1214:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) return 0x80000000;
 2465              		.loc 1 1214 0
 2466 000c 220C     		lsrs	r2, r4, #16
 2467 000e 08D1     		bne	.L207
1215:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1216:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sig = ptcb->events;                           // Previous signal flags
 2468              		.loc 1 1216 0
 2469 0010 058B     		ldrh	r5, [r0, #24]
1217:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1218:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_evt_set(signals, ptcb->task_id);           // Set event flags
 2470              		.loc 1 1218 0
 2471 0012 A0B2     		uxth	r0, r4
 2472 0014 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 2473 0016 FFF7FEFF 		bl	rt_evt_set
1219:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1220:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return sig;
 2474              		.loc 1 1220 0
 2475 001a 04E0     		b	.L205
 2476              	.L206:
1212:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return 0x80000000;
 2477              		.loc 1 1212 0
 2478 001c 4FF00045 		mov	r5, #-2147483648
 2479 0020 01E0     		b	.L205
 2480              	.L207:
1214:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) return 0x80000000;
 2481              		.loc 1 1214 0
 2482 0022 4FF00045 		mov	r5, #-2147483648
 2483              	.L205:
1221:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2484              		.loc 1 1221 0
 2485 0026 2846     		mov	r0, r5
 2486 0028 38BD     		pop	{r3, r4, r5, pc}
 2487              		.cfi_endproc
 2488              	.LFE164:
 2490 002a 00BF     		.section	.text.svcSignalClear,"ax",%progbits
 2491              		.align	2
 2492              		.global	svcSignalClear
 2493              		.thumb
 2494              		.thumb_func
 2496              	svcSignalClear:
 2497              	.LFB165:
1222:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1223:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Clear the specified Signal Flags of an active thread
1224:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t svcSignalClear (osThreadId thread_id, int32_t signals) {
 2498              		.loc 1 1224 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 0
 2501              		@ frame_needed = 0, uses_anonymous_args = 0
 2502 0000 38B5     		push	{r3, r4, r5, lr}
 2503              	.LCFI39:
 2504              		.cfi_def_cfa_offset 16
 2505              		.cfi_offset 3, -16
 2506              		.cfi_offset 4, -12
 2507              		.cfi_offset 5, -8
 2508              		.cfi_offset 14, -4
 2509 0002 0C46     		mov	r4, r1
1225:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB   ptcb;
1226:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   int32_t sig;
1227:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1228:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = rt_tid2ptcb(thread_id);                // Get TCB pointer
 2510              		.loc 1 1228 0
 2511 0004 FFF7FEFF 		bl	rt_tid2ptcb
1229:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return 0x80000000;
 2512              		.loc 1 1229 0
 2513 0008 0346     		mov	r3, r0
 2514 000a 38B1     		cbz	r0, .L210
1230:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1231:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) return 0x80000000;
 2515              		.loc 1 1231 0
 2516 000c 220C     		lsrs	r2, r4, #16
 2517 000e 08D1     		bne	.L211
1232:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1233:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sig = ptcb->events;                           // Previous signal flags
 2518              		.loc 1 1233 0
 2519 0010 058B     		ldrh	r5, [r0, #24]
1234:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1235:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_evt_clr(signals, ptcb->task_id);           // Clear event flags
 2520              		.loc 1 1235 0
 2521 0012 A0B2     		uxth	r0, r4
 2522 0014 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 2523 0016 FFF7FEFF 		bl	rt_evt_clr
1236:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1237:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return sig;
 2524              		.loc 1 1237 0
 2525 001a 04E0     		b	.L209
 2526              	.L210:
1229:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return 0x80000000;
 2527              		.loc 1 1229 0
 2528 001c 4FF00045 		mov	r5, #-2147483648
 2529 0020 01E0     		b	.L209
 2530              	.L211:
1231:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) return 0x80000000;
 2531              		.loc 1 1231 0
 2532 0022 4FF00045 		mov	r5, #-2147483648
 2533              	.L209:
1238:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2534              		.loc 1 1238 0
 2535 0026 2846     		mov	r0, r5
 2536 0028 38BD     		pop	{r3, r4, r5, pc}
 2537              		.cfi_endproc
 2538              	.LFE165:
 2540 002a 00BF     		.section	.text.svcSignalWait,"ax",%progbits
 2541              		.align	2
 2542              		.global	svcSignalWait
 2543              		.thumb
 2544              		.thumb_func
 2546              	svcSignalWait:
 2547              	.LFB166:
1239:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1240:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait for one or more Signal Flags to become signaled for the current RUNNING thread
1241:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent_type svcSignalWait (int32_t signals, uint32_t millisec) {
 2548              		.loc 1 1241 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552 0000 70B5     		push	{r4, r5, r6, lr}
 2553              	.LCFI40:
 2554              		.cfi_def_cfa_offset 16
 2555              		.cfi_offset 4, -16
 2556              		.cfi_offset 5, -12
 2557              		.cfi_offset 6, -8
 2558              		.cfi_offset 14, -4
 2559 0002 0446     		mov	r4, r0
 2560 0004 0D46     		mov	r5, r1
1242:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1243:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent   ret;
1244:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1245:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) {
 2561              		.loc 1 1245 0
 2562 0006 030C     		lsrs	r3, r0, #16
 2563 0008 06D0     		beq	.L213
1246:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorValue;
1247:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osEvent_ret_status;
 2564              		.loc 1 1247 0
 2565 000a 4FF00001 		mov	r1, #0
 2566 000e 0A46     		mov	r2, r1
 2567 0010 0B46     		mov	r3, r1
 2568 0012 4FF08600 		mov	r0, #134
 2569 0016 70BD     		pop	{r4, r5, r6, pc}
 2570              	.L213:
1248:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1249:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1250:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals != 0) {                           // Wait for all specified signals
 2571              		.loc 1 1250 0
 2572 0018 58B1     		cbz	r0, .L215
1251:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     res = rt_evt_wait(signals, rt_ms2tick(millisec), __TRUE);
 2573              		.loc 1 1251 0
 2574 001a 0846     		mov	r0, r1
 2575 001c FFF7FEFF 		bl	rt_ms2tick
 2576 0020 81B2     		uxth	r1, r0
 2577 0022 A0B2     		uxth	r0, r4
 2578 0024 4FF00102 		mov	r2, #1
 2579 0028 FFF7FEFF 		bl	rt_evt_wait
1252:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // Wait for any signal
1253:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     res = rt_evt_wait(0xFFFF,  rt_ms2tick(millisec), __FALSE);
1254:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1255:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1256:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_EVT) {
 2580              		.loc 1 1256 0
 2581 002c 0228     		cmp	r0, #2
 2582 002e 15D1     		bne	.L217
 2583 0030 1AE0     		b	.L218
 2584              	.L215:
1253:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     res = rt_evt_wait(0xFFFF,  rt_ms2tick(millisec), __FALSE);
 2585              		.loc 1 1253 0
 2586 0032 0846     		mov	r0, r1
 2587 0034 FFF7FEFF 		bl	rt_ms2tick
 2588 0038 81B2     		uxth	r1, r0
 2589 003a 4FF6FF70 		movw	r0, #65535
 2590 003e 4FF00002 		mov	r2, #0
 2591 0042 FFF7FEFF 		bl	rt_evt_wait
 2592              		.loc 1 1256 0
 2593 0046 0228     		cmp	r0, #2
 2594 0048 08D1     		bne	.L217
1257:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osEventSignal;
1258:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.value.signals = signals ? signals : os_tsk.run->waits;
 2595              		.loc 1 1258 0 discriminator 1
 2596 004a 40F20003 		movw	r3, #:lower16:os_tsk
 2597 004e C0F20003 		movt	r3, #:upper16:os_tsk
 2598 0052 1B68     		ldr	r3, [r3, #0]
 2599 0054 598B     		ldrh	r1, [r3, #26]
1257:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osEventSignal;
 2600              		.loc 1 1257 0 discriminator 1
 2601 0056 4FF00800 		mov	r0, #8
 2602 005a 0CE0     		b	.L216
 2603              	.L217:
1259:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1260:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = millisec ? osEventTimeout : osOK;
 2604              		.loc 1 1260 0
 2605 005c 45B1     		cbz	r5, .L219
1261:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.value.signals = 0;
 2606              		.loc 1 1261 0
 2607 005e 4FF00001 		mov	r1, #0
1260:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = millisec ? osEventTimeout : osOK;
 2608              		.loc 1 1260 0
 2609 0062 4FF04000 		mov	r0, #64
 2610 0066 06E0     		b	.L216
 2611              	.L218:
1258:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.value.signals = signals ? signals : os_tsk.run->waits;
 2612              		.loc 1 1258 0
 2613 0068 2146     		mov	r1, r4
1257:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osEventSignal;
 2614              		.loc 1 1257 0
 2615 006a 4FF00800 		mov	r0, #8
 2616 006e 02E0     		b	.L216
 2617              	.L219:
 2618              		.loc 1 1261 0
 2619 0070 4FF00001 		mov	r1, #0
1260:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = millisec ? osEventTimeout : osOK;
 2620              		.loc 1 1260 0
 2621 0074 0846     		mov	r0, r1
 2622              	.L216:
1262:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1263:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1264:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osEvent_ret_value;
 2623              		.loc 1 1264 0
 2624 0076 4FF00003 		mov	r3, #0
 2625 007a 1A46     		mov	r2, r3
1265:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2626              		.loc 1 1265 0
 2627 007c 70BD     		pop	{r4, r5, r6, pc}
 2628              		.cfi_endproc
 2629              	.LFE166:
 2631 007e 00BF     		.section	.text.isrSignalSet,"ax",%progbits
 2632              		.align	2
 2633              		.thumb
 2634              		.thumb_func
 2636              	isrSignalSet:
 2637              	.LFB167:
1266:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1267:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1268:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Signal ISR Calls
1269:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1270:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Set the specified Signal Flags of an active thread
1271:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __INLINE int32_t isrSignalSet (osThreadId thread_id, int32_t signals) {
 2638              		.loc 1 1271 0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 0
 2641              		@ frame_needed = 0, uses_anonymous_args = 0
 2642 0000 38B5     		push	{r3, r4, r5, lr}
 2643              	.LCFI41:
 2644              		.cfi_def_cfa_offset 16
 2645              		.cfi_offset 3, -16
 2646              		.cfi_offset 4, -12
 2647              		.cfi_offset 5, -8
 2648              		.cfi_offset 14, -4
 2649 0002 0C46     		mov	r4, r1
1272:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB   ptcb;
1273:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   int32_t sig;
1274:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1275:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptcb = rt_tid2ptcb(thread_id);                // Get TCB pointer
 2650              		.loc 1 1275 0
 2651 0004 FFF7FEFF 		bl	rt_tid2ptcb
1276:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return 0x80000000;
 2652              		.loc 1 1276 0
 2653 0008 0346     		mov	r3, r0
 2654 000a 38B1     		cbz	r0, .L222
1277:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1278:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) return 0x80000000;
 2655              		.loc 1 1278 0
 2656 000c 220C     		lsrs	r2, r4, #16
 2657 000e 08D1     		bne	.L223
1279:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1280:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sig = ptcb->events;                           // Previous signal flags
 2658              		.loc 1 1280 0
 2659 0010 058B     		ldrh	r5, [r0, #24]
1281:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1282:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   isr_evt_set(signals, ptcb->task_id);          // Set event flags
 2660              		.loc 1 1282 0
 2661 0012 A0B2     		uxth	r0, r4
 2662 0014 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 2663 0016 FFF7FEFF 		bl	isr_evt_set
1283:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1284:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return sig;
 2664              		.loc 1 1284 0
 2665 001a 04E0     		b	.L221
 2666              	.L222:
1276:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ptcb == NULL) return 0x80000000;
 2667              		.loc 1 1276 0
 2668 001c 4FF00045 		mov	r5, #-2147483648
 2669 0020 01E0     		b	.L221
 2670              	.L223:
1278:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (signals & (0xFFFFFFFF << osFeature_Signals)) return 0x80000000;
 2671              		.loc 1 1278 0
 2672 0022 4FF00045 		mov	r5, #-2147483648
 2673              	.L221:
1285:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2674              		.loc 1 1285 0
 2675 0026 2846     		mov	r0, r5
 2676 0028 38BD     		pop	{r3, r4, r5, pc}
 2677              		.cfi_endproc
 2678              	.LFE167:
 2680 002a 00BF     		.section	.text.osSignalSet,"ax",%progbits
 2681              		.align	2
 2682              		.global	osSignalSet
 2683              		.thumb
 2684              		.thumb_func
 2686              	osSignalSet:
 2687              	.LFB168:
1286:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1287:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1288:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Signal Public API
1289:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1290:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Set the specified Signal Flags of an active thread
1291:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t osSignalSet (osThreadId thread_id, int32_t signals) {
 2688              		.loc 1 1291 0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 0
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
 2692 0000 10B5     		push	{r4, lr}
 2693              	.LCFI42:
 2694              		.cfi_def_cfa_offset 8
 2695              		.cfi_offset 4, -8
 2696              		.cfi_offset 14, -4
 2697              	.LBB298:
 2698              	.LBB299:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2699              		.loc 2 383 0
 2700              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2701 0002 EFF30584 		MRS r4, ipsr
 2702              	@ 0 "" 2
 2703              		.thumb
 2704              	.LBE299:
 2705              	.LBE298:
1292:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 2706              		.loc 1 1292 0
 2707 0006 14B1     		cbz	r4, .L225
1293:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   isrSignalSet(thread_id, signals); 
 2708              		.loc 1 1293 0
 2709 0008 FFF7FEFF 		bl	isrSignalSet
 2710 000c 10BD     		pop	{r4, pc}
 2711              	.L225:
 2712              	.LBB300:
 2713              	.LBB301:
1200:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSignalSet,             int32_t, osThreadId, int32_t,  RET_int32_t)
 2714              		.loc 1 1200 0
 2715              	@ 1200 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2716 000e DFF808C0 		ldr r12,=svcSignalSet
 2717 0012 00DF     		svc 0
 2718              	@ 0 "" 2
 2719              		.thumb
 2720              	.LBE301:
 2721              	.LBE300:
1294:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1295:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcSignalSet(thread_id, signals);
1296:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1297:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2722              		.loc 1 1297 0
 2723 0014 10BD     		pop	{r4, pc}
 2724              		.cfi_endproc
 2725              	.LFE168:
 2727 0016 0000     		.section	.text.osSignalClear,"ax",%progbits
 2728              		.align	2
 2729              		.global	osSignalClear
 2730              		.thumb
 2731              		.thumb_func
 2733              	osSignalClear:
 2734              	.LFB169:
1298:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1299:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Clear the specified Signal Flags of an active thread
1300:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t osSignalClear (osThreadId thread_id, int32_t signals) {
 2735              		.loc 1 1300 0
 2736              		.cfi_startproc
 2737              		@ args = 0, pretend = 0, frame = 0
 2738              		@ frame_needed = 0, uses_anonymous_args = 0
 2739 0000 10B5     		push	{r4, lr}
 2740              	.LCFI43:
 2741              		.cfi_def_cfa_offset 8
 2742              		.cfi_offset 4, -8
 2743              		.cfi_offset 14, -4
 2744              	.LBB302:
 2745              	.LBB303:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2746              		.loc 2 383 0
 2747              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2748 0002 EFF30584 		MRS r4, ipsr
 2749              	@ 0 "" 2
 2750              		.thumb
 2751              	.LBE303:
 2752              	.LBE302:
1301:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2753              		.loc 1 1301 0
 2754 0006 1CB9     		cbnz	r4, .L229
 2755              	.LBB304:
 2756              	.LBB305:
1201:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSignalClear,           int32_t, osThreadId, int32_t,  RET_int32_t)
 2757              		.loc 1 1201 0
 2758              	@ 1201 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2759 0008 DFF80CC0 		ldr r12,=svcSignalClear
 2760 000c 00DF     		svc 0
 2761              	@ 0 "" 2
 2762              		.thumb
 2763              	.LBE305:
 2764              	.LBE304:
1302:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcSignalClear(thread_id, signals);
 2765              		.loc 1 1302 0
 2766 000e 10BD     		pop	{r4, pc}
 2767              	.L229:
1301:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 2768              		.loc 1 1301 0
 2769 0010 4FF08200 		mov	r0, #130
1303:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2770              		.loc 1 1303 0
 2771 0014 10BD     		pop	{r4, pc}
 2772              		.cfi_endproc
 2773              	.LFE169:
 2775 0016 0000     		.section	.text.osSignalWait,"ax",%progbits
 2776              		.align	2
 2777              		.global	osSignalWait
 2778              		.thumb
 2779              		.thumb_func
 2781              	osSignalWait:
 2782              	.LFB170:
1304:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1305:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait for one or more Signal Flags to become signaled for the current RUNNING thread
1306:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent osSignalWait (int32_t signals, uint32_t millisec) {
 2783              		.loc 1 1306 0
 2784              		.cfi_startproc
 2785              		@ args = 0, pretend = 0, frame = 0
 2786              		@ frame_needed = 0, uses_anonymous_args = 0
 2787 0000 70B5     		push	{r4, r5, r6, lr}
 2788              	.LCFI44:
 2789              		.cfi_def_cfa_offset 16
 2790              		.cfi_offset 4, -16
 2791              		.cfi_offset 5, -12
 2792              		.cfi_offset 6, -8
 2793              		.cfi_offset 14, -4
 2794 0002 0446     		mov	r4, r0
 2795 0004 1646     		mov	r6, r2
 2796              	.LBB306:
 2797              	.LBB307:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 2798              		.loc 2 383 0
 2799              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 2800 0006 EFF30585 		MRS r5, ipsr
 2801              	@ 0 "" 2
 2802              		.thumb
 2803              	.LBE307:
 2804              	.LBE306:
1307:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent ret;
1308:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1309:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // Not allowed in ISR
 2805              		.loc 1 1309 0
 2806 000a 1DB1     		cbz	r5, .L231
1310:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorISR;
1311:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return ret;
 2807              		.loc 1 1311 0
 2808 000c 4FF08203 		mov	r3, #130
 2809 0010 0360     		str	r3, [r0, #0]
 2810 0012 07E0     		b	.L230
 2811              	.L231:
 2812              	.LBB308:
 2813              	.LBB309:
1202:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_3(svcSignalWait,  os_InRegs osEvent, int32_t,    uint32_t, RET_osEvent)
 2814              		.loc 1 1202 0
 2815 0014 0846     		mov	r0, r1
 2816 0016 1146     		mov	r1, r2
 2817              	@ 1202 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 2818 0018 DFF80CC0 		ldr r12,=svcSignalWait
 2819 001c 00DF     		svc 0
 2820              	@ 0 "" 2
 2821              		.thumb
 2822 001e 2060     		str	r0, [r4, #0]
 2823 0020 6160     		str	r1, [r4, #4]
 2824 0022 A260     		str	r2, [r4, #8]
 2825              	.L230:
 2826              	.LBE309:
 2827              	.LBE308:
1312:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1313:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcSignalWait(signals, millisec);
1314:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2828              		.loc 1 1314 0
 2829 0024 2046     		mov	r0, r4
 2830 0026 70BD     		pop	{r4, r5, r6, pc}
 2831              		.cfi_endproc
 2832              	.LFE170:
 2834              		.section	.text.svcMutexCreate,"ax",%progbits
 2835              		.align	2
 2836              		.global	svcMutexCreate
 2837              		.thumb
 2838              		.thumb_func
 2840              	svcMutexCreate:
 2841              	.LFB175:
1315:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1316:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1317:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Mutex Management ====
1318:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1319:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Mutex Service Calls declarations
1320:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcMutexCreate,  osMutexId, const osMutexDef_t *,           RET_pointer)
1321:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcMutexWait,    osStatus,        osMutexId,      uint32_t, RET_osStatus)
1322:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcMutexRelease, osStatus,        osMutexId,                RET_osStatus)
1323:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcMutexDelete,  osStatus,        osMutexId,                RET_osStatus)
1324:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1325:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Mutex Service Calls
1326:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1327:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize a Mutex object
1328:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMutexId svcMutexCreate (const osMutexDef_t *mutex_def) {
 2842              		.loc 1 1328 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 0
 2845              		@ frame_needed = 0, uses_anonymous_args = 0
 2846 0000 10B5     		push	{r4, lr}
 2847              	.LCFI45:
 2848              		.cfi_def_cfa_offset 8
 2849              		.cfi_offset 4, -8
 2850              		.cfi_offset 14, -4
1329:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID mut;
1330:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1331:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mutex_def == NULL) {
 2851              		.loc 1 1331 0
 2852 0002 38B1     		cbz	r0, .L235
1332:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1333:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1334:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1335:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1336:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   mut = mutex_def->mutex;
 2853              		.loc 1 1336 0
 2854 0004 0468     		ldr	r4, [r0, #0]
1337:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) {
 2855              		.loc 1 1337 0
 2856 0006 54B1     		cbz	r4, .L234
1338:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1339:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1340:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1341:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1342:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != 0) {
 2857              		.loc 1 1342 0
 2858 0008 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 2859 000a 33B9     		cbnz	r3, .L236
1343:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1344:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1345:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1346:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1347:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_mut_init(mut);                             // Initialize Mutex
 2860              		.loc 1 1347 0
 2861 000c 2046     		mov	r0, r4
 2862 000e FFF7FEFF 		bl	rt_mut_init
1348:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1349:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return mut;
 2863              		.loc 1 1349 0
 2864 0012 04E0     		b	.L234
 2865              	.L235:
1333:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 2866              		.loc 1 1333 0
 2867 0014 4FF00004 		mov	r4, #0
 2868 0018 01E0     		b	.L234
 2869              	.L236:
1344:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 2870              		.loc 1 1344 0
 2871 001a 4FF00004 		mov	r4, #0
 2872              	.L234:
1350:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2873              		.loc 1 1350 0
 2874 001e 2046     		mov	r0, r4
 2875 0020 10BD     		pop	{r4, pc}
 2876              		.cfi_endproc
 2877              	.LFE175:
 2879 0022 00BF     		.section	.text.svcMutexWait,"ax",%progbits
 2880              		.align	2
 2881              		.global	svcMutexWait
 2882              		.thumb
 2883              		.thumb_func
 2885              	svcMutexWait:
 2886              	.LFB176:
1351:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1352:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait until a Mutex becomes available
1353:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcMutexWait (osMutexId mutex_id, uint32_t millisec) {
 2887              		.loc 1 1353 0
 2888              		.cfi_startproc
 2889              		@ args = 0, pretend = 0, frame = 0
 2890              		@ frame_needed = 0, uses_anonymous_args = 0
 2891 0000 38B5     		push	{r3, r4, r5, lr}
 2892              	.LCFI46:
 2893              		.cfi_def_cfa_offset 16
 2894              		.cfi_offset 3, -16
 2895              		.cfi_offset 4, -12
 2896              		.cfi_offset 5, -8
 2897              		.cfi_offset 14, -4
 2898 0002 0D46     		mov	r5, r1
1354:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID     mut;
1355:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1356:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1357:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   mut = rt_id2obj(mutex_id);
 2899              		.loc 1 1357 0
 2900 0004 FFF7FEFF 		bl	rt_id2obj
1358:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) return osErrorParameter;
 2901              		.loc 1 1358 0
 2902 0008 0446     		mov	r4, r0
 2903 000a 80B1     		cbz	r0, .L239
1359:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1360:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != MUCB) return osErrorParameter;
 2904              		.loc 1 1360 0
 2905 000c 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2906 000e 032B     		cmp	r3, #3
 2907 0010 10D1     		bne	.L240
1361:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1362:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_mut_wait(mut, rt_ms2tick(millisec)); // Wait for Mutex
 2908              		.loc 1 1362 0
 2909 0012 2846     		mov	r0, r5
 2910 0014 FFF7FEFF 		bl	rt_ms2tick
 2911 0018 81B2     		uxth	r1, r0
 2912 001a 2046     		mov	r0, r4
 2913 001c FFF7FEFF 		bl	rt_mut_wait
1363:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1364:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_TMO) {
 2914              		.loc 1 1364 0
 2915 0020 0128     		cmp	r0, #1
 2916 0022 0AD1     		bne	.L241
1365:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return (millisec ? osErrorTimeoutResource : osErrorResource);
 2917              		.loc 1 1365 0
 2918 0024 002D     		cmp	r5, #0
 2919 0026 0CBF     		ite	eq
 2920 0028 8120     		moveq	r0, #129
 2921 002a C120     		movne	r0, #193
 2922 002c 38BD     		pop	{r3, r4, r5, pc}
 2923              	.L239:
1358:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) return osErrorParameter;
 2924              		.loc 1 1358 0
 2925 002e 4FF08000 		mov	r0, #128
 2926 0032 38BD     		pop	{r3, r4, r5, pc}
 2927              	.L240:
1360:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != MUCB) return osErrorParameter;
 2928              		.loc 1 1360 0
 2929 0034 4FF08000 		mov	r0, #128
 2930 0038 38BD     		pop	{r3, r4, r5, pc}
 2931              	.L241:
1366:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1367:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1368:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 2932              		.loc 1 1368 0
 2933 003a 4FF00000 		mov	r0, #0
1369:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2934              		.loc 1 1369 0
 2935 003e 38BD     		pop	{r3, r4, r5, pc}
 2936              		.cfi_endproc
 2937              	.LFE176:
 2939              		.section	.text.svcMutexRelease,"ax",%progbits
 2940              		.align	2
 2941              		.global	svcMutexRelease
 2942              		.thumb
 2943              		.thumb_func
 2945              	svcMutexRelease:
 2946              	.LFB177:
1370:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1371:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Release a Mutex that was obtained with osMutexWait
1372:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcMutexRelease (osMutexId mutex_id) {
 2947              		.loc 1 1372 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 0
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951 0000 08B5     		push	{r3, lr}
 2952              	.LCFI47:
 2953              		.cfi_def_cfa_offset 8
 2954              		.cfi_offset 3, -8
 2955              		.cfi_offset 14, -4
1373:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID     mut;
1374:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1375:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1376:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   mut = rt_id2obj(mutex_id);
 2956              		.loc 1 1376 0
 2957 0002 FFF7FEFF 		bl	rt_id2obj
1377:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) return osErrorParameter;
 2958              		.loc 1 1377 0
 2959 0006 48B1     		cbz	r0, .L245
1378:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1379:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != MUCB) return osErrorParameter;
 2960              		.loc 1 1379 0
 2961 0008 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 2962 000a 032A     		cmp	r2, #3
 2963 000c 09D1     		bne	.L246
1380:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1381:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_mut_release(mut);                    // Release Mutex
 2964              		.loc 1 1381 0
 2965 000e FFF7FEFF 		bl	rt_mut_release
1382:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1383:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_NOK) return osErrorResource;  // Thread not owner or Zero Counter
 2966              		.loc 1 1383 0
 2967 0012 FF28     		cmp	r0, #255
 2968 0014 0CBF     		ite	eq
 2969 0016 8120     		moveq	r0, #129
 2970 0018 0020     		movne	r0, #0
 2971 001a 08BD     		pop	{r3, pc}
 2972              	.L245:
1377:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) return osErrorParameter;
 2973              		.loc 1 1377 0
 2974 001c 4FF08000 		mov	r0, #128
 2975 0020 08BD     		pop	{r3, pc}
 2976              	.L246:
1379:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != MUCB) return osErrorParameter;
 2977              		.loc 1 1379 0
 2978 0022 4FF08000 		mov	r0, #128
1384:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1385:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
1386:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 2979              		.loc 1 1386 0
 2980 0026 08BD     		pop	{r3, pc}
 2981              		.cfi_endproc
 2982              	.LFE177:
 2984              		.section	.text.svcMutexDelete,"ax",%progbits
 2985              		.align	2
 2986              		.global	svcMutexDelete
 2987              		.thumb
 2988              		.thumb_func
 2990              	svcMutexDelete:
 2991              	.LFB178:
1387:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1388:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Delete a Mutex that was created by osMutexCreate
1389:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcMutexDelete (osMutexId mutex_id) {
 2992              		.loc 1 1389 0
 2993              		.cfi_startproc
 2994              		@ args = 0, pretend = 0, frame = 0
 2995              		@ frame_needed = 0, uses_anonymous_args = 0
 2996 0000 08B5     		push	{r3, lr}
 2997              	.LCFI48:
 2998              		.cfi_def_cfa_offset 8
 2999              		.cfi_offset 3, -8
 3000              		.cfi_offset 14, -4
1390:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID mut;
1391:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1392:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   mut = rt_id2obj(mutex_id);
 3001              		.loc 1 1392 0
 3002 0002 FFF7FEFF 		bl	rt_id2obj
1393:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) return osErrorParameter;
 3003              		.loc 1 1393 0
 3004 0006 38B1     		cbz	r0, .L250
1394:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1395:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != MUCB) return osErrorParameter;
 3005              		.loc 1 1395 0
 3006 0008 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 3007 000a 032A     		cmp	r2, #3
 3008 000c 07D1     		bne	.L251
1396:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1397:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_mut_delete(mut);                           // Release Mutex
 3009              		.loc 1 1397 0
 3010 000e FFF7FEFF 		bl	rt_mut_delete
1398:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1399:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 3011              		.loc 1 1399 0
 3012 0012 4FF00000 		mov	r0, #0
 3013 0016 08BD     		pop	{r3, pc}
 3014              	.L250:
1393:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mut == NULL) return osErrorParameter;
 3015              		.loc 1 1393 0
 3016 0018 4FF08000 		mov	r0, #128
 3017 001c 08BD     		pop	{r3, pc}
 3018              	.L251:
1395:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MUCB)mut)->cb_type != MUCB) return osErrorParameter;
 3019              		.loc 1 1395 0
 3020 001e 4FF08000 		mov	r0, #128
1400:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3021              		.loc 1 1400 0
 3022 0022 08BD     		pop	{r3, pc}
 3023              		.cfi_endproc
 3024              	.LFE178:
 3026              		.section	.text.osMutexCreate,"ax",%progbits
 3027              		.align	2
 3028              		.global	osMutexCreate
 3029              		.thumb
 3030              		.thumb_func
 3032              	osMutexCreate:
 3033              	.LFB179:
1401:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1402:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1403:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Mutex Public API
1404:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1405:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize a Mutex object
1406:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMutexId osMutexCreate (const osMutexDef_t *mutex_def) {
 3034              		.loc 1 1406 0
 3035              		.cfi_startproc
 3036              		@ args = 0, pretend = 0, frame = 0
 3037              		@ frame_needed = 0, uses_anonymous_args = 0
 3038 0000 10B5     		push	{r4, lr}
 3039              	.LCFI49:
 3040              		.cfi_def_cfa_offset 8
 3041              		.cfi_offset 4, -8
 3042              		.cfi_offset 14, -4
 3043              	.LBB310:
 3044              	.LBB311:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3045              		.loc 2 383 0
 3046              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3047 0002 EFF30584 		MRS r4, ipsr
 3048              	@ 0 "" 2
 3049              		.thumb
 3050              	.LBE311:
 3051              	.LBE310:
1407:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 3052              		.loc 1 1407 0
 3053 0006 8CB9     		cbnz	r4, .L255
 3054              	.LBB312:
 3055              	.LBB313:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 3056              		.loc 2 356 0
 3057              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3058 0008 EFF31484 		MRS r4, control
 3059              	@ 0 "" 2
 3060              		.thumb
 3061              	.LBE313:
 3062              	.LBE312:
1408:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 3063              		.loc 1 1408 0
 3064 000c 14F0010F 		tst	r4, #1
 3065 0010 08D1     		bne	.L254
 3066              		.loc 1 1408 0 is_stmt 0 discriminator 1
 3067 0012 40F20004 		movw	r4, #:lower16:os_running
 3068 0016 C0F20004 		movt	r4, #:upper16:os_running
 3069 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 3070 001c 14B9     		cbnz	r4, .L254
1409:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
1410:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return    svcMutexCreate(mutex_def);
 3071              		.loc 1 1410 0 is_stmt 1
 3072 001e FFF7FEFF 		bl	svcMutexCreate
 3073 0022 10BD     		pop	{r4, pc}
 3074              	.L254:
 3075              	.LBB314:
 3076              	.LBB315:
1320:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcMutexCreate,  osMutexId, const osMutexDef_t *,           RET_pointer)
 3077              		.loc 1 1320 0
 3078              	@ 1320 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3079 0024 DFF80CC0 		ldr r12,=svcMutexCreate
 3080 0028 00DF     		svc 0
 3081              	@ 0 "" 2
 3082              		.thumb
 3083              	.LBE315:
 3084              	.LBE314:
1411:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1412:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcMutexCreate(mutex_def);
 3085              		.loc 1 1412 0
 3086 002a 10BD     		pop	{r4, pc}
 3087              	.L255:
1407:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 3088              		.loc 1 1407 0
 3089 002c 4FF00000 		mov	r0, #0
1413:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1414:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3090              		.loc 1 1414 0
 3091 0030 10BD     		pop	{r4, pc}
 3092              		.cfi_endproc
 3093              	.LFE179:
 3095 0032 0000     		.section	.text.osMutexWait,"ax",%progbits
 3096              		.align	2
 3097              		.global	osMutexWait
 3098              		.thumb
 3099              		.thumb_func
 3101              	osMutexWait:
 3102              	.LFB180:
1415:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1416:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait until a Mutex becomes available
1417:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osMutexWait (osMutexId mutex_id, uint32_t millisec) {
 3103              		.loc 1 1417 0
 3104              		.cfi_startproc
 3105              		@ args = 0, pretend = 0, frame = 0
 3106              		@ frame_needed = 0, uses_anonymous_args = 0
 3107 0000 10B5     		push	{r4, lr}
 3108              	.LCFI50:
 3109              		.cfi_def_cfa_offset 8
 3110              		.cfi_offset 4, -8
 3111              		.cfi_offset 14, -4
 3112              	.LBB316:
 3113              	.LBB317:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3114              		.loc 2 383 0
 3115              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3116 0002 EFF30584 		MRS r4, ipsr
 3117              	@ 0 "" 2
 3118              		.thumb
 3119              	.LBE317:
 3120              	.LBE316:
1418:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3121              		.loc 1 1418 0
 3122 0006 1CB9     		cbnz	r4, .L258
 3123              	.LBB318:
 3124              	.LBB319:
1321:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcMutexWait,    osStatus,        osMutexId,      uint32_t, RET_osStatus)
 3125              		.loc 1 1321 0
 3126              	@ 1321 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3127 0008 DFF80CC0 		ldr r12,=svcMutexWait
 3128 000c 00DF     		svc 0
 3129              	@ 0 "" 2
 3130              		.thumb
 3131              	.LBE319:
 3132              	.LBE318:
1419:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcMutexWait(mutex_id, millisec);
 3133              		.loc 1 1419 0
 3134 000e 10BD     		pop	{r4, pc}
 3135              	.L258:
1418:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3136              		.loc 1 1418 0
 3137 0010 4FF08200 		mov	r0, #130
1420:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3138              		.loc 1 1420 0
 3139 0014 10BD     		pop	{r4, pc}
 3140              		.cfi_endproc
 3141              	.LFE180:
 3143 0016 0000     		.section	.text.osMutexRelease,"ax",%progbits
 3144              		.align	2
 3145              		.global	osMutexRelease
 3146              		.thumb
 3147              		.thumb_func
 3149              	osMutexRelease:
 3150              	.LFB181:
1421:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1422:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Release a Mutex that was obtained with osMutexWait
1423:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osMutexRelease (osMutexId mutex_id) {
 3151              		.loc 1 1423 0
 3152              		.cfi_startproc
 3153              		@ args = 0, pretend = 0, frame = 0
 3154              		@ frame_needed = 0, uses_anonymous_args = 0
 3155 0000 10B5     		push	{r4, lr}
 3156              	.LCFI51:
 3157              		.cfi_def_cfa_offset 8
 3158              		.cfi_offset 4, -8
 3159              		.cfi_offset 14, -4
 3160              	.LBB320:
 3161              	.LBB321:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3162              		.loc 2 383 0
 3163              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3164 0002 EFF30584 		MRS r4, ipsr
 3165              	@ 0 "" 2
 3166              		.thumb
 3167              	.LBE321:
 3168              	.LBE320:
1424:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3169              		.loc 1 1424 0
 3170 0006 1CB9     		cbnz	r4, .L261
 3171              	.LBB322:
 3172              	.LBB323:
1322:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcMutexRelease, osStatus,        osMutexId,                RET_osStatus)
 3173              		.loc 1 1322 0
 3174              	@ 1322 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3175 0008 DFF80CC0 		ldr r12,=svcMutexRelease
 3176 000c 00DF     		svc 0
 3177              	@ 0 "" 2
 3178              		.thumb
 3179              	.LBE323:
 3180              	.LBE322:
1425:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcMutexRelease(mutex_id);
 3181              		.loc 1 1425 0
 3182 000e 10BD     		pop	{r4, pc}
 3183              	.L261:
1424:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3184              		.loc 1 1424 0
 3185 0010 4FF08200 		mov	r0, #130
1426:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3186              		.loc 1 1426 0
 3187 0014 10BD     		pop	{r4, pc}
 3188              		.cfi_endproc
 3189              	.LFE181:
 3191 0016 0000     		.section	.text.osMutexDelete,"ax",%progbits
 3192              		.align	2
 3193              		.global	osMutexDelete
 3194              		.thumb
 3195              		.thumb_func
 3197              	osMutexDelete:
 3198              	.LFB182:
1427:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1428:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Delete a Mutex that was created by osMutexCreate
1429:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osMutexDelete (osMutexId mutex_id) {
 3199              		.loc 1 1429 0
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 0
 3202              		@ frame_needed = 0, uses_anonymous_args = 0
 3203 0000 10B5     		push	{r4, lr}
 3204              	.LCFI52:
 3205              		.cfi_def_cfa_offset 8
 3206              		.cfi_offset 4, -8
 3207              		.cfi_offset 14, -4
 3208              	.LBB324:
 3209              	.LBB325:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3210              		.loc 2 383 0
 3211              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3212 0002 EFF30584 		MRS r4, ipsr
 3213              	@ 0 "" 2
 3214              		.thumb
 3215              	.LBE325:
 3216              	.LBE324:
1430:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3217              		.loc 1 1430 0
 3218 0006 1CB9     		cbnz	r4, .L264
 3219              	.LBB326:
 3220              	.LBB327:
1323:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcMutexDelete,  osStatus,        osMutexId,                RET_osStatus)
 3221              		.loc 1 1323 0
 3222              	@ 1323 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3223 0008 DFF80CC0 		ldr r12,=svcMutexDelete
 3224 000c 00DF     		svc 0
 3225              	@ 0 "" 2
 3226              		.thumb
 3227              	.LBE327:
 3228              	.LBE326:
1431:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcMutexDelete(mutex_id);
 3229              		.loc 1 1431 0
 3230 000e 10BD     		pop	{r4, pc}
 3231              	.L264:
1430:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3232              		.loc 1 1430 0
 3233 0010 4FF08200 		mov	r0, #130
1432:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3234              		.loc 1 1432 0
 3235 0014 10BD     		pop	{r4, pc}
 3236              		.cfi_endproc
 3237              	.LFE182:
 3239 0016 0000     		.section	.text.svcSemaphoreCreate,"ax",%progbits
 3240              		.align	2
 3241              		.global	svcSemaphoreCreate
 3242              		.thumb
 3243              		.thumb_func
 3245              	svcSemaphoreCreate:
 3246              	.LFB187:
1433:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1434:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1435:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Semaphore Management ====
1436:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1437:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Semaphore Service Calls declarations
1438:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSemaphoreCreate,  osSemaphoreId, const osSemaphoreDef_t *,  int32_t, RET_pointer)
1439:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSemaphoreWait,    int32_t,             osSemaphoreId,      uint32_t, RET_int32_t)
1440:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcSemaphoreRelease, osStatus,            osSemaphoreId,                RET_osStatus)
1441:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcSemaphoreDelete,  osStatus,            osSemaphoreId,                RET_osStatus)
1442:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1443:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Semaphore Service Calls
1444:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1445:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize a Semaphore object
1446:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osSemaphoreId svcSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count) {
 3247              		.loc 1 1446 0
 3248              		.cfi_startproc
 3249              		@ args = 0, pretend = 0, frame = 0
 3250              		@ frame_needed = 0, uses_anonymous_args = 0
 3251 0000 10B5     		push	{r4, lr}
 3252              	.LCFI53:
 3253              		.cfi_def_cfa_offset 8
 3254              		.cfi_offset 4, -8
 3255              		.cfi_offset 14, -4
1447:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID sem;
1448:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1449:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (semaphore_def == NULL) {
 3256              		.loc 1 1449 0
 3257 0002 58B1     		cbz	r0, .L267
1450:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1451:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1452:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1453:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1454:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sem = semaphore_def->semaphore;
 3258              		.loc 1 1454 0
 3259 0004 0468     		ldr	r4, [r0, #0]
1455:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) {
 3260              		.loc 1 1455 0
 3261 0006 8CB1     		cbz	r4, .L266
1456:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1457:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1458:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1459:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1460:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != 0) {
 3262              		.loc 1 1460 0
 3263 0008 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 3264 000a 53B9     		cbnz	r3, .L268
1461:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1462:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1463:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1464:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1465:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (count > osFeature_Semaphore) {
 3265              		.loc 1 1465 0
 3266 000c B1F5803F 		cmp	r1, #65536
 3267 0010 0ADA     		bge	.L269
1466:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorValue);
1467:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1468:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1469:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1470:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_sem_init(sem, count);                      // Initialize Semaphore
 3268              		.loc 1 1470 0
 3269 0012 2046     		mov	r0, r4
 3270 0014 89B2     		uxth	r1, r1
 3271 0016 FFF7FEFF 		bl	rt_sem_init
1471:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
1472:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return sem;
 3272              		.loc 1 1472 0
 3273 001a 07E0     		b	.L266
 3274              	.L267:
1451:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 3275              		.loc 1 1451 0
 3276 001c 4FF00004 		mov	r4, #0
 3277 0020 04E0     		b	.L266
 3278              	.L268:
1462:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 3279              		.loc 1 1462 0
 3280 0022 4FF00004 		mov	r4, #0
 3281 0026 01E0     		b	.L266
 3282              	.L269:
1467:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 3283              		.loc 1 1467 0
 3284 0028 4FF00004 		mov	r4, #0
 3285              	.L266:
1473:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3286              		.loc 1 1473 0
 3287 002c 2046     		mov	r0, r4
 3288 002e 10BD     		pop	{r4, pc}
 3289              		.cfi_endproc
 3290              	.LFE187:
 3292              		.section	.text.svcSemaphoreWait,"ax",%progbits
 3293              		.align	2
 3294              		.global	svcSemaphoreWait
 3295              		.thumb
 3296              		.thumb_func
 3298              	svcSemaphoreWait:
 3299              	.LFB188:
1474:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1475:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait until a Semaphore becomes available
1476:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t svcSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec) {
 3300              		.loc 1 1476 0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
 3304 0000 38B5     		push	{r3, r4, r5, lr}
 3305              	.LCFI54:
 3306              		.cfi_def_cfa_offset 16
 3307              		.cfi_offset 3, -16
 3308              		.cfi_offset 4, -12
 3309              		.cfi_offset 5, -8
 3310              		.cfi_offset 14, -4
 3311 0002 0D46     		mov	r5, r1
1477:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID     sem;
1478:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1479:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1480:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sem = rt_id2obj(semaphore_id);
 3312              		.loc 1 1480 0
 3313 0004 FFF7FEFF 		bl	rt_id2obj
1481:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return -1;
 3314              		.loc 1 1481 0
 3315 0008 0446     		mov	r4, r0
 3316 000a 78B1     		cbz	r0, .L272
1482:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1483:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return -1;
 3317              		.loc 1 1483 0
 3318 000c 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 3319 000e 022B     		cmp	r3, #2
 3320 0010 0FD1     		bne	.L273
1484:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1485:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_sem_wait(sem, rt_ms2tick(millisec)); // Wait for Semaphore
 3321              		.loc 1 1485 0
 3322 0012 2846     		mov	r0, r5
 3323 0014 FFF7FEFF 		bl	rt_ms2tick
 3324 0018 81B2     		uxth	r1, r0
 3325 001a 2046     		mov	r0, r4
 3326 001c FFF7FEFF 		bl	rt_sem_wait
1486:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1487:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_TMO) return 0;                // Timeout
 3327              		.loc 1 1487 0
 3328 0020 0128     		cmp	r0, #1
 3329 0022 09D0     		beq	.L274
1488:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1489:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return (((P_SCB)sem)->tokens + 1);
 3330              		.loc 1 1489 0
 3331 0024 6088     		ldrh	r0, [r4, #2]
 3332 0026 00F10100 		add	r0, r0, #1
 3333 002a 38BD     		pop	{r3, r4, r5, pc}
 3334              	.L272:
1481:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return -1;
 3335              		.loc 1 1481 0
 3336 002c 4FF0FF30 		mov	r0, #-1
 3337 0030 38BD     		pop	{r3, r4, r5, pc}
 3338              	.L273:
1483:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return -1;
 3339              		.loc 1 1483 0
 3340 0032 4FF0FF30 		mov	r0, #-1
 3341 0036 38BD     		pop	{r3, r4, r5, pc}
 3342              	.L274:
1487:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_TMO) return 0;                // Timeout
 3343              		.loc 1 1487 0
 3344 0038 4FF00000 		mov	r0, #0
1490:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3345              		.loc 1 1490 0
 3346 003c 38BD     		pop	{r3, r4, r5, pc}
 3347              		.cfi_endproc
 3348              	.LFE188:
 3350 003e 00BF     		.section	.text.svcSemaphoreRelease,"ax",%progbits
 3351              		.align	2
 3352              		.global	svcSemaphoreRelease
 3353              		.thumb
 3354              		.thumb_func
 3356              	svcSemaphoreRelease:
 3357              	.LFB189:
1491:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1492:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Release a Semaphore
1493:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcSemaphoreRelease (osSemaphoreId semaphore_id) {
 3358              		.loc 1 1493 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 0
 3361              		@ frame_needed = 0, uses_anonymous_args = 0
 3362 0000 08B5     		push	{r3, lr}
 3363              	.LCFI55:
 3364              		.cfi_def_cfa_offset 8
 3365              		.cfi_offset 3, -8
 3366              		.cfi_offset 14, -4
1494:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID sem;
1495:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1496:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sem = rt_id2obj(semaphore_id);
 3367              		.loc 1 1496 0
 3368 0002 FFF7FEFF 		bl	rt_id2obj
1497:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return osErrorParameter;
 3369              		.loc 1 1497 0
 3370 0006 60B1     		cbz	r0, .L277
1498:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1499:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return osErrorParameter;
 3371              		.loc 1 1499 0
 3372 0008 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 3373 000a 022A     		cmp	r2, #2
 3374 000c 0CD1     		bne	.L278
1500:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1501:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->tokens == osFeature_Semaphore) return osErrorResource;
 3375              		.loc 1 1501 0
 3376 000e 4188     		ldrh	r1, [r0, #2]
 3377 0010 4FF6FF72 		movw	r2, #65535
 3378 0014 9142     		cmp	r1, r2
 3379 0016 0AD0     		beq	.L279
1502:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
1503:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_sem_send(sem);                             // Release Semaphore
 3380              		.loc 1 1503 0
 3381 0018 FFF7FEFF 		bl	rt_sem_send
1504:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1505:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 3382              		.loc 1 1505 0
 3383 001c 4FF00000 		mov	r0, #0
 3384 0020 08BD     		pop	{r3, pc}
 3385              	.L277:
1497:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return osErrorParameter;
 3386              		.loc 1 1497 0
 3387 0022 4FF08000 		mov	r0, #128
 3388 0026 08BD     		pop	{r3, pc}
 3389              	.L278:
1499:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return osErrorParameter;
 3390              		.loc 1 1499 0
 3391 0028 4FF08000 		mov	r0, #128
 3392 002c 08BD     		pop	{r3, pc}
 3393              	.L279:
1501:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->tokens == osFeature_Semaphore) return osErrorResource;
 3394              		.loc 1 1501 0
 3395 002e 4FF08100 		mov	r0, #129
1506:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3396              		.loc 1 1506 0
 3397 0032 08BD     		pop	{r3, pc}
 3398              		.cfi_endproc
 3399              	.LFE189:
 3401              		.section	.text.svcSemaphoreDelete,"ax",%progbits
 3402              		.align	2
 3403              		.global	svcSemaphoreDelete
 3404              		.thumb
 3405              		.thumb_func
 3407              	svcSemaphoreDelete:
 3408              	.LFB190:
1507:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1508:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Delete a Semaphore that was created by osSemaphoreCreate
1509:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcSemaphoreDelete (osSemaphoreId semaphore_id) {
 3409              		.loc 1 1509 0
 3410              		.cfi_startproc
 3411              		@ args = 0, pretend = 0, frame = 0
 3412              		@ frame_needed = 0, uses_anonymous_args = 0
 3413 0000 08B5     		push	{r3, lr}
 3414              	.LCFI56:
 3415              		.cfi_def_cfa_offset 8
 3416              		.cfi_offset 3, -8
 3417              		.cfi_offset 14, -4
1510:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID sem;
1511:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1512:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sem = rt_id2obj(semaphore_id);
 3418              		.loc 1 1512 0
 3419 0002 FFF7FEFF 		bl	rt_id2obj
1513:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return osErrorParameter;
 3420              		.loc 1 1513 0
 3421 0006 38B1     		cbz	r0, .L282
1514:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1515:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return osErrorParameter;
 3422              		.loc 1 1515 0
 3423 0008 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 3424 000a 022A     		cmp	r2, #2
 3425 000c 07D1     		bne	.L283
1516:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1517:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_sem_delete(sem);                           // Delete Semaphore
 3426              		.loc 1 1517 0
 3427 000e FFF7FEFF 		bl	rt_sem_delete
1518:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1519:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 3428              		.loc 1 1519 0
 3429 0012 4FF00000 		mov	r0, #0
 3430 0016 08BD     		pop	{r3, pc}
 3431              	.L282:
1513:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return osErrorParameter;
 3432              		.loc 1 1513 0
 3433 0018 4FF08000 		mov	r0, #128
 3434 001c 08BD     		pop	{r3, pc}
 3435              	.L283:
1515:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return osErrorParameter;
 3436              		.loc 1 1515 0
 3437 001e 4FF08000 		mov	r0, #128
1520:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3438              		.loc 1 1520 0
 3439 0022 08BD     		pop	{r3, pc}
 3440              		.cfi_endproc
 3441              	.LFE190:
 3443              		.section	.text.isrSemaphoreRelease,"ax",%progbits
 3444              		.align	2
 3445              		.thumb
 3446              		.thumb_func
 3448              	isrSemaphoreRelease:
 3449              	.LFB191:
1521:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1522:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1523:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Semaphore ISR Calls
1524:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1525:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Release a Semaphore
1526:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __INLINE osStatus isrSemaphoreRelease (osSemaphoreId semaphore_id) {
 3450              		.loc 1 1526 0
 3451              		.cfi_startproc
 3452              		@ args = 0, pretend = 0, frame = 0
 3453              		@ frame_needed = 0, uses_anonymous_args = 0
 3454 0000 08B5     		push	{r3, lr}
 3455              	.LCFI57:
 3456              		.cfi_def_cfa_offset 8
 3457              		.cfi_offset 3, -8
 3458              		.cfi_offset 14, -4
1527:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_ID sem;
1528:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1529:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   sem = rt_id2obj(semaphore_id);
 3459              		.loc 1 1529 0
 3460 0002 FFF7FEFF 		bl	rt_id2obj
1530:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return osErrorParameter;
 3461              		.loc 1 1530 0
 3462 0006 60B1     		cbz	r0, .L286
1531:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1532:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return osErrorParameter;
 3463              		.loc 1 1532 0
 3464 0008 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 3465 000a 022A     		cmp	r2, #2
 3466 000c 0CD1     		bne	.L287
1533:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1534:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->tokens == osFeature_Semaphore) return osErrorResource;
 3467              		.loc 1 1534 0
 3468 000e 4188     		ldrh	r1, [r0, #2]
 3469 0010 4FF6FF72 		movw	r2, #65535
 3470 0014 9142     		cmp	r1, r2
 3471 0016 0AD0     		beq	.L288
1535:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1536:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   isr_sem_send(sem);                            // Release Semaphore
 3472              		.loc 1 1536 0
 3473 0018 FFF7FEFF 		bl	isr_sem_send
1537:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1538:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 3474              		.loc 1 1538 0
 3475 001c 4FF00000 		mov	r0, #0
 3476 0020 08BD     		pop	{r3, pc}
 3477              	.L286:
1530:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (sem == NULL) return osErrorParameter;
 3478              		.loc 1 1530 0
 3479 0022 4FF08000 		mov	r0, #128
 3480 0026 08BD     		pop	{r3, pc}
 3481              	.L287:
1532:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->cb_type != SCB) return osErrorParameter;
 3482              		.loc 1 1532 0
 3483 0028 4FF08000 		mov	r0, #128
 3484 002c 08BD     		pop	{r3, pc}
 3485              	.L288:
1534:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_SCB)sem)->tokens == osFeature_Semaphore) return osErrorResource;
 3486              		.loc 1 1534 0
 3487 002e 4FF08100 		mov	r0, #129
1539:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3488              		.loc 1 1539 0
 3489 0032 08BD     		pop	{r3, pc}
 3490              		.cfi_endproc
 3491              	.LFE191:
 3493              		.section	.text.osSemaphoreCreate,"ax",%progbits
 3494              		.align	2
 3495              		.global	osSemaphoreCreate
 3496              		.thumb
 3497              		.thumb_func
 3499              	osSemaphoreCreate:
 3500              	.LFB192:
1540:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1541:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1542:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Semaphore Public API
1543:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1544:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize a Semaphore object
1545:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osSemaphoreId osSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count) {
 3501              		.loc 1 1545 0
 3502              		.cfi_startproc
 3503              		@ args = 0, pretend = 0, frame = 0
 3504              		@ frame_needed = 0, uses_anonymous_args = 0
 3505 0000 10B5     		push	{r4, lr}
 3506              	.LCFI58:
 3507              		.cfi_def_cfa_offset 8
 3508              		.cfi_offset 4, -8
 3509              		.cfi_offset 14, -4
 3510              	.LBB328:
 3511              	.LBB329:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3512              		.loc 2 383 0
 3513              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3514 0002 EFF30584 		MRS r4, ipsr
 3515              	@ 0 "" 2
 3516              		.thumb
 3517              	.LBE329:
 3518              	.LBE328:
1546:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 3519              		.loc 1 1546 0
 3520 0006 8CB9     		cbnz	r4, .L292
 3521              	.LBB330:
 3522              	.LBB331:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 3523              		.loc 2 356 0
 3524              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3525 0008 EFF31484 		MRS r4, control
 3526              	@ 0 "" 2
 3527              		.thumb
 3528              	.LBE331:
 3529              	.LBE330:
1547:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 3530              		.loc 1 1547 0
 3531 000c 14F0010F 		tst	r4, #1
 3532 0010 08D1     		bne	.L291
 3533              		.loc 1 1547 0 is_stmt 0 discriminator 1
 3534 0012 40F20004 		movw	r4, #:lower16:os_running
 3535 0016 C0F20004 		movt	r4, #:upper16:os_running
 3536 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 3537 001c 14B9     		cbnz	r4, .L291
1548:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
1549:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcSemaphoreCreate(semaphore_def, count);
 3538              		.loc 1 1549 0 is_stmt 1
 3539 001e FFF7FEFF 		bl	svcSemaphoreCreate
 3540 0022 10BD     		pop	{r4, pc}
 3541              	.L291:
 3542              	.LBB332:
 3543              	.LBB333:
1438:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSemaphoreCreate,  osSemaphoreId, const osSemaphoreDef_t *,  int32_t, RET_pointer)
 3544              		.loc 1 1438 0
 3545              	@ 1438 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3546 0024 DFF80CC0 		ldr r12,=svcSemaphoreCreate
 3547 0028 00DF     		svc 0
 3548              	@ 0 "" 2
 3549              		.thumb
 3550              	.LBE333:
 3551              	.LBE332:
1550:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1551:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcSemaphoreCreate(semaphore_def, count);
 3552              		.loc 1 1551 0
 3553 002a 10BD     		pop	{r4, pc}
 3554              	.L292:
1546:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 3555              		.loc 1 1546 0
 3556 002c 4FF00000 		mov	r0, #0
1552:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1553:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3557              		.loc 1 1553 0
 3558 0030 10BD     		pop	{r4, pc}
 3559              		.cfi_endproc
 3560              	.LFE192:
 3562 0032 0000     		.section	.text.osSemaphoreWait,"ax",%progbits
 3563              		.align	2
 3564              		.global	osSemaphoreWait
 3565              		.thumb
 3566              		.thumb_func
 3568              	osSemaphoreWait:
 3569              	.LFB193:
1554:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1555:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Wait until a Semaphore becomes available
1556:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec) {
 3570              		.loc 1 1556 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 0
 3573              		@ frame_needed = 0, uses_anonymous_args = 0
 3574 0000 10B5     		push	{r4, lr}
 3575              	.LCFI59:
 3576              		.cfi_def_cfa_offset 8
 3577              		.cfi_offset 4, -8
 3578              		.cfi_offset 14, -4
 3579              	.LBB334:
 3580              	.LBB335:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3581              		.loc 2 383 0
 3582              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3583 0002 EFF30584 		MRS r4, ipsr
 3584              	@ 0 "" 2
 3585              		.thumb
 3586              	.LBE335:
 3587              	.LBE334:
1557:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return -1;             // Not allowed in ISR
 3588              		.loc 1 1557 0
 3589 0006 1CB9     		cbnz	r4, .L295
 3590              	.LBB336:
 3591              	.LBB337:
1439:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcSemaphoreWait,    int32_t,             osSemaphoreId,      uint32_t, RET_int32_t)
 3592              		.loc 1 1439 0
 3593              	@ 1439 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3594 0008 DFF80CC0 		ldr r12,=svcSemaphoreWait
 3595 000c 00DF     		svc 0
 3596              	@ 0 "" 2
 3597              		.thumb
 3598              	.LBE337:
 3599              	.LBE336:
1558:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcSemaphoreWait(semaphore_id, millisec);
 3600              		.loc 1 1558 0
 3601 000e 10BD     		pop	{r4, pc}
 3602              	.L295:
1557:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return -1;             // Not allowed in ISR
 3603              		.loc 1 1557 0
 3604 0010 4FF0FF30 		mov	r0, #-1
1559:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3605              		.loc 1 1559 0
 3606 0014 10BD     		pop	{r4, pc}
 3607              		.cfi_endproc
 3608              	.LFE193:
 3610 0016 0000     		.section	.text.osSemaphoreRelease,"ax",%progbits
 3611              		.align	2
 3612              		.global	osSemaphoreRelease
 3613              		.thumb
 3614              		.thumb_func
 3616              	osSemaphoreRelease:
 3617              	.LFB194:
1560:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1561:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Release a Semaphore
1562:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osSemaphoreRelease (osSemaphoreId semaphore_id) {
 3618              		.loc 1 1562 0
 3619              		.cfi_startproc
 3620              		@ args = 0, pretend = 0, frame = 0
 3621              		@ frame_needed = 0, uses_anonymous_args = 0
 3622 0000 10B5     		push	{r4, lr}
 3623              	.LCFI60:
 3624              		.cfi_def_cfa_offset 8
 3625              		.cfi_offset 4, -8
 3626              		.cfi_offset 14, -4
 3627              	.LBB338:
 3628              	.LBB339:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3629              		.loc 2 383 0
 3630              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3631 0002 EFF30584 		MRS r4, ipsr
 3632              	@ 0 "" 2
 3633              		.thumb
 3634              	.LBE339:
 3635              	.LBE338:
1563:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 3636              		.loc 1 1563 0
 3637 0006 14B1     		cbz	r4, .L297
1564:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   isrSemaphoreRelease(semaphore_id);
 3638              		.loc 1 1564 0
 3639 0008 FFF7FEFF 		bl	isrSemaphoreRelease
 3640 000c 10BD     		pop	{r4, pc}
 3641              	.L297:
 3642              	.LBB340:
 3643              	.LBB341:
1440:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcSemaphoreRelease, osStatus,            osSemaphoreId,                RET_osStatus)
 3644              		.loc 1 1440 0
 3645              	@ 1440 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3646 000e DFF808C0 		ldr r12,=svcSemaphoreRelease
 3647 0012 00DF     		svc 0
 3648              	@ 0 "" 2
 3649              		.thumb
 3650              	.LBE341:
 3651              	.LBE340:
1565:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1566:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcSemaphoreRelease(semaphore_id);
1567:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1568:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3652              		.loc 1 1568 0
 3653 0014 10BD     		pop	{r4, pc}
 3654              		.cfi_endproc
 3655              	.LFE194:
 3657 0016 0000     		.section	.text.osSemaphoreDelete,"ax",%progbits
 3658              		.align	2
 3659              		.global	osSemaphoreDelete
 3660              		.thumb
 3661              		.thumb_func
 3663              	osSemaphoreDelete:
 3664              	.LFB195:
1569:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1570:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Delete a Semaphore that was created by osSemaphoreCreate
1571:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osSemaphoreDelete (osSemaphoreId semaphore_id) {
 3665              		.loc 1 1571 0
 3666              		.cfi_startproc
 3667              		@ args = 0, pretend = 0, frame = 0
 3668              		@ frame_needed = 0, uses_anonymous_args = 0
 3669 0000 10B5     		push	{r4, lr}
 3670              	.LCFI61:
 3671              		.cfi_def_cfa_offset 8
 3672              		.cfi_offset 4, -8
 3673              		.cfi_offset 14, -4
 3674              	.LBB342:
 3675              	.LBB343:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3676              		.loc 2 383 0
 3677              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3678 0002 EFF30584 		MRS r4, ipsr
 3679              	@ 0 "" 2
 3680              		.thumb
 3681              	.LBE343:
 3682              	.LBE342:
1572:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3683              		.loc 1 1572 0
 3684 0006 1CB9     		cbnz	r4, .L301
 3685              	.LBB344:
 3686              	.LBB345:
1441:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcSemaphoreDelete,  osStatus,            osSemaphoreId,                RET_osStatus)
 3687              		.loc 1 1441 0
 3688              	@ 1441 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3689 0008 DFF80CC0 		ldr r12,=svcSemaphoreDelete
 3690 000c 00DF     		svc 0
 3691              	@ 0 "" 2
 3692              		.thumb
 3693              	.LBE345:
 3694              	.LBE344:
1573:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __svcSemaphoreDelete(semaphore_id);
 3695              		.loc 1 1573 0
 3696 000e 10BD     		pop	{r4, pc}
 3697              	.L301:
1572:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return osErrorISR;     // Not allowed in ISR
 3698              		.loc 1 1572 0
 3699 0010 4FF08200 		mov	r0, #130
1574:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3700              		.loc 1 1574 0
 3701 0014 10BD     		pop	{r4, pc}
 3702              		.cfi_endproc
 3703              	.LFE195:
 3705 0016 0000     		.section	.text.rt_clr_box,"ax",%progbits
 3706              		.align	2
 3707              		.thumb
 3708              		.thumb_func
 3710              	rt_clr_box:
 3711              	.LFB196:
1575:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1576:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1577:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Memory Management Functions ====
1578:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1579:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Memory Management Helper Functions
1580:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1581:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Clear Memory Box (Zero init)
1582:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static void rt_clr_box (void *box_mem, void *box) {
 3712              		.loc 1 1582 0
 3713              		.cfi_startproc
 3714              		@ args = 0, pretend = 0, frame = 0
 3715              		@ frame_needed = 0, uses_anonymous_args = 0
 3716              		@ link register save eliminated.
1583:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t *p, n;
1584:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1585:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (box) {
 3717              		.loc 1 1585 0
 3718 0000 39B1     		cbz	r1, .L302
1586:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     p = box;
1587:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     for (n = ((P_BM)box_mem)->blk_size; n; n -= 4) {
 3719              		.loc 1 1587 0
 3720 0002 8368     		ldr	r3, [r0, #8]
 3721 0004 2BB1     		cbz	r3, .L302
1588:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       *p++ = 0;
 3722              		.loc 1 1588 0
 3723 0006 4FF00002 		mov	r2, #0
 3724              	.L304:
 3725              		.loc 1 1588 0 is_stmt 0 discriminator 2
 3726 000a 41F8042B 		str	r2, [r1], #4
1587:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     for (n = ((P_BM)box_mem)->blk_size; n; n -= 4) {
 3727              		.loc 1 1587 0 is_stmt 1 discriminator 2
 3728 000e 043B     		subs	r3, r3, #4
 3729 0010 FBD1     		bne	.L304
 3730              	.L302:
 3731 0012 7047     		bx	lr
 3732              		.cfi_endproc
 3733              	.LFE196:
 3735              		.section	.text.svcPoolCreate,"ax",%progbits
 3736              		.align	2
 3737              		.global	svcPoolCreate
 3738              		.thumb
 3739              		.thumb_func
 3741              	svcPoolCreate:
 3742              	.LFB200:
1589:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
1590:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1591:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
1592:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1593:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Memory Management Service Calls declarations
1594:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcPoolCreate, osPoolId, const osPoolDef_t *,           RET_pointer)
1595:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(sysPoolAlloc,  void *,         osPoolId,      uint32_t, RET_pointer)
1596:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(sysPoolFree,   osStatus,       osPoolId,      void *,   RET_osStatus)
1597:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1598:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Memory Management Service & ISR Calls
1599:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1600:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize memory pool
1601:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osPoolId svcPoolCreate (const osPoolDef_t *pool_def) {
 3743              		.loc 1 1601 0
 3744              		.cfi_startproc
 3745              		@ args = 0, pretend = 0, frame = 0
 3746              		@ frame_needed = 0, uses_anonymous_args = 0
 3747 0000 10B5     		push	{r4, lr}
 3748              	.LCFI62:
 3749              		.cfi_def_cfa_offset 8
 3750              		.cfi_offset 4, -8
 3751              		.cfi_offset 14, -4
1602:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t blk_sz;
1603:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1604:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pool_def == NULL) ||
 3752              		.loc 1 1604 0
 3753 0002 0446     		mov	r4, r0
 3754 0004 88B1     		cbz	r0, .L308
1605:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (pool_def->pool_sz == 0) ||
 3755              		.loc 1 1605 0 discriminator 1
 3756 0006 0168     		ldr	r1, [r0, #0]
1604:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pool_def == NULL) ||
 3757              		.loc 1 1604 0 discriminator 1
 3758 0008 91B1     		cbz	r1, .L309
1606:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (pool_def->item_sz == 0) ||
 3759              		.loc 1 1606 0
 3760 000a 4268     		ldr	r2, [r0, #4]
1605:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (pool_def->pool_sz == 0) ||
 3761              		.loc 1 1605 0
 3762 000c 9AB1     		cbz	r2, .L310
1607:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (pool_def->pool == NULL)) {
 3763              		.loc 1 1607 0
 3764 000e 8068     		ldr	r0, [r0, #8]
1606:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (pool_def->item_sz == 0) ||
 3765              		.loc 1 1606 0
 3766 0010 A0B1     		cbz	r0, .L311
1608:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1609:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1610:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1611:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1612:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   blk_sz = (pool_def->item_sz + 3) & ~3;
 3767              		.loc 1 1612 0
 3768 0012 02F10302 		add	r2, r2, #3
 3769 0016 22F00302 		bic	r2, r2, #3
1613:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1614:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _init_box(pool_def->pool, sizeof(struct OS_BM) + pool_def->pool_sz * blk_sz, blk_sz);
 3770              		.loc 1 1614 0
 3771 001a 01FB02F1 		mul	r1, r1, r2
 3772 001e 01F10C01 		add	r1, r1, #12
 3773 0022 FFF7FEFF 		bl	_init_box
1615:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1616:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return pool_def->pool;
 3774              		.loc 1 1616 0
 3775 0026 A068     		ldr	r0, [r4, #8]
 3776 0028 10BD     		pop	{r4, pc}
 3777              	.L308:
1609:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 3778              		.loc 1 1609 0
 3779 002a 4FF00000 		mov	r0, #0
 3780 002e 10BD     		pop	{r4, pc}
 3781              	.L309:
 3782 0030 4FF00000 		mov	r0, #0
 3783 0034 10BD     		pop	{r4, pc}
 3784              	.L310:
 3785 0036 4FF00000 		mov	r0, #0
 3786 003a 10BD     		pop	{r4, pc}
 3787              	.L311:
 3788 003c 4FF00000 		mov	r0, #0
1617:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3789              		.loc 1 1617 0
 3790 0040 10BD     		pop	{r4, pc}
 3791              		.cfi_endproc
 3792              	.LFE200:
 3794 0042 00BF     		.section	.text.sysPoolAlloc,"ax",%progbits
 3795              		.align	2
 3796              		.global	sysPoolAlloc
 3797              		.thumb
 3798              		.thumb_func
 3800              	sysPoolAlloc:
 3801              	.LFB201:
1618:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1619:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Allocate a memory block from a memory pool
1620:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void *sysPoolAlloc (osPoolId pool_id, uint32_t clr) {
 3802              		.loc 1 1620 0
 3803              		.cfi_startproc
 3804              		@ args = 0, pretend = 0, frame = 0
 3805              		@ frame_needed = 0, uses_anonymous_args = 0
 3806 0000 70B5     		push	{r4, r5, r6, lr}
 3807              	.LCFI63:
 3808              		.cfi_def_cfa_offset 16
 3809              		.cfi_offset 4, -16
 3810              		.cfi_offset 5, -12
 3811              		.cfi_offset 6, -8
 3812              		.cfi_offset 14, -4
 3813 0002 0E46     		mov	r6, r1
1621:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void *ptr;
1622:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1623:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pool_id == NULL) return NULL;
 3814              		.loc 1 1623 0
 3815 0004 0546     		mov	r5, r0
 3816 0006 40B1     		cbz	r0, .L314
1624:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1625:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ptr = rt_alloc_box(pool_id);
 3817              		.loc 1 1625 0
 3818 0008 FFF7FEFF 		bl	rt_alloc_box
 3819 000c 0446     		mov	r4, r0
1626:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (clr) {
 3820              		.loc 1 1626 0
 3821 000e 36B1     		cbz	r6, .L313
1627:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     rt_clr_box(pool_id, ptr);
 3822              		.loc 1 1627 0
 3823 0010 2846     		mov	r0, r5
 3824 0012 2146     		mov	r1, r4
 3825 0014 FFF7FEFF 		bl	rt_clr_box
 3826 0018 01E0     		b	.L313
 3827              	.L314:
1623:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pool_id == NULL) return NULL;
 3828              		.loc 1 1623 0
 3829 001a 4FF00004 		mov	r4, #0
 3830              	.L313:
1628:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1629:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1630:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ptr;
1631:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3831              		.loc 1 1631 0
 3832 001e 2046     		mov	r0, r4
 3833 0020 70BD     		pop	{r4, r5, r6, pc}
 3834              		.cfi_endproc
 3835              	.LFE201:
 3837 0022 00BF     		.section	.text.sysPoolFree,"ax",%progbits
 3838              		.align	2
 3839              		.global	sysPoolFree
 3840              		.thumb
 3841              		.thumb_func
 3843              	sysPoolFree:
 3844              	.LFB202:
1632:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1633:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Return an allocated memory block back to a specific memory pool
1634:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus sysPoolFree (osPoolId pool_id, void *block) {
 3845              		.loc 1 1634 0
 3846              		.cfi_startproc
 3847              		@ args = 0, pretend = 0, frame = 0
 3848              		@ frame_needed = 0, uses_anonymous_args = 0
 3849 0000 08B5     		push	{r3, lr}
 3850              	.LCFI64:
 3851              		.cfi_def_cfa_offset 8
 3852              		.cfi_offset 3, -8
 3853              		.cfi_offset 14, -4
1635:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   int32_t res;
1636:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     
1637:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pool_id == NULL) return osErrorParameter;
 3854              		.loc 1 1637 0
 3855 0002 30B1     		cbz	r0, .L317
1638:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1639:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_free_box(pool_id, block);
 3856              		.loc 1 1639 0
 3857 0004 FFF7FEFF 		bl	rt_free_box
1640:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res != 0) return osErrorValue;
 3858              		.loc 1 1640 0
 3859 0008 0028     		cmp	r0, #0
 3860 000a 14BF     		ite	ne
 3861 000c 8620     		movne	r0, #134
 3862 000e 0020     		moveq	r0, #0
 3863 0010 08BD     		pop	{r3, pc}
 3864              	.L317:
1637:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (pool_id == NULL) return osErrorParameter;
 3865              		.loc 1 1637 0
 3866 0012 4FF08000 		mov	r0, #128
1641:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1642:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
1643:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3867              		.loc 1 1643 0
 3868 0016 08BD     		pop	{r3, pc}
 3869              		.cfi_endproc
 3870              	.LFE202:
 3872              		.section	.text.osPoolCreate,"ax",%progbits
 3873              		.align	2
 3874              		.global	osPoolCreate
 3875              		.thumb
 3876              		.thumb_func
 3878              	osPoolCreate:
 3879              	.LFB203:
1644:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1645:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1646:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Memory Management Public API
1647:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1648:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize memory pool
1649:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osPoolId osPoolCreate (const osPoolDef_t *pool_def) {
 3880              		.loc 1 1649 0
 3881              		.cfi_startproc
 3882              		@ args = 0, pretend = 0, frame = 0
 3883              		@ frame_needed = 0, uses_anonymous_args = 0
 3884 0000 10B5     		push	{r4, lr}
 3885              	.LCFI65:
 3886              		.cfi_def_cfa_offset 8
 3887              		.cfi_offset 4, -8
 3888              		.cfi_offset 14, -4
 3889              	.LBB346:
 3890              	.LBB347:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3891              		.loc 2 383 0
 3892              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3893 0002 EFF30584 		MRS r4, ipsr
 3894              	@ 0 "" 2
 3895              		.thumb
 3896              	.LBE347:
 3897              	.LBE346:
1650:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 3898              		.loc 1 1650 0
 3899 0006 8CB9     		cbnz	r4, .L322
 3900              	.LBB348:
 3901              	.LBB349:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 3902              		.loc 2 356 0
 3903              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3904 0008 EFF31484 		MRS r4, control
 3905              	@ 0 "" 2
 3906              		.thumb
 3907              	.LBE349:
 3908              	.LBE348:
1651:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 3909              		.loc 1 1651 0
 3910 000c 14F0010F 		tst	r4, #1
 3911 0010 08D1     		bne	.L321
 3912              		.loc 1 1651 0 is_stmt 0 discriminator 1
 3913 0012 40F20004 		movw	r4, #:lower16:os_running
 3914 0016 C0F20004 		movt	r4, #:upper16:os_running
 3915 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 3916 001c 14B9     		cbnz	r4, .L321
1652:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
1653:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcPoolCreate(pool_def);
 3917              		.loc 1 1653 0 is_stmt 1
 3918 001e FFF7FEFF 		bl	svcPoolCreate
 3919 0022 10BD     		pop	{r4, pc}
 3920              	.L321:
 3921              	.LBB350:
 3922              	.LBB351:
1594:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_1(svcPoolCreate, osPoolId, const osPoolDef_t *,           RET_pointer)
 3923              		.loc 1 1594 0
 3924              	@ 1594 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3925 0024 DFF80CC0 		ldr r12,=svcPoolCreate
 3926 0028 00DF     		svc 0
 3927              	@ 0 "" 2
 3928              		.thumb
 3929              	.LBE351:
 3930              	.LBE350:
1654:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1655:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcPoolCreate(pool_def);
 3931              		.loc 1 1655 0
 3932 002a 10BD     		pop	{r4, pc}
 3933              	.L322:
1650:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 3934              		.loc 1 1650 0
 3935 002c 4FF00000 		mov	r0, #0
1656:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1657:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3936              		.loc 1 1657 0
 3937 0030 10BD     		pop	{r4, pc}
 3938              		.cfi_endproc
 3939              	.LFE203:
 3941 0032 0000     		.section	.text.osPoolAlloc,"ax",%progbits
 3942              		.align	2
 3943              		.global	osPoolAlloc
 3944              		.thumb
 3945              		.thumb_func
 3947              	osPoolAlloc:
 3948              	.LFB204:
1658:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1659:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Allocate a memory block from a memory pool
1660:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void *osPoolAlloc (osPoolId pool_id) {
 3949              		.loc 1 1660 0
 3950              		.cfi_startproc
 3951              		@ args = 0, pretend = 0, frame = 0
 3952              		@ frame_needed = 0, uses_anonymous_args = 0
 3953 0000 08B5     		push	{r3, lr}
 3954              	.LCFI66:
 3955              		.cfi_def_cfa_offset 8
 3956              		.cfi_offset 3, -8
 3957              		.cfi_offset 14, -4
 3958              	.LBB352:
 3959              	.LBB353:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 3960              		.loc 2 383 0
 3961              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3962 0002 EFF30581 		MRS r1, ipsr
 3963              	@ 0 "" 2
 3964              		.thumb
 3965              	.LBE353:
 3966              	.LBE352:
1661:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((__get_IPSR() != 0) || ((__get_CONTROL() & 1) == 0)) {    // in ISR or Privileged
 3967              		.loc 1 1661 0
 3968 0006 21B9     		cbnz	r1, .L324
 3969              	.LBB354:
 3970              	.LBB355:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 3971              		.loc 2 356 0
 3972              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 3973 0008 EFF31481 		MRS r1, control
 3974              	@ 0 "" 2
 3975              		.thumb
 3976              	.LBE355:
 3977              	.LBE354:
 3978              		.loc 1 1661 0
 3979 000c 11F0010F 		tst	r1, #1
 3980 0010 04D1     		bne	.L325
 3981              	.L324:
1662:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   sysPoolAlloc(pool_id, 0);
 3982              		.loc 1 1662 0
 3983 0012 4FF00001 		mov	r1, #0
 3984 0016 FFF7FEFF 		bl	sysPoolAlloc
 3985 001a 08BD     		pop	{r3, pc}
 3986              	.L325:
 3987              	.LBB356:
 3988              	.LBB357:
1595:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(sysPoolAlloc,  void *,         osPoolId,      uint32_t, RET_pointer)
 3989              		.loc 1 1595 0
 3990 001c 4FF00001 		mov	r1, #0
 3991              	@ 1595 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 3992 0020 DFF804C0 		ldr r12,=sysPoolAlloc
 3993 0024 00DF     		svc 0
 3994              	@ 0 "" 2
 3995              		.thumb
 3996              	.LBE357:
 3997              	.LBE356:
1663:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1664:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __sysPoolAlloc(pool_id, 0);
1665:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1666:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 3998              		.loc 1 1666 0
 3999 0026 08BD     		pop	{r3, pc}
 4000              		.cfi_endproc
 4001              	.LFE204:
 4003              		.section	.text.osPoolCAlloc,"ax",%progbits
 4004              		.align	2
 4005              		.global	osPoolCAlloc
 4006              		.thumb
 4007              		.thumb_func
 4009              	osPoolCAlloc:
 4010              	.LFB205:
1667:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1668:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Allocate a memory block from a memory pool and set memory block to zero
1669:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void *osPoolCAlloc (osPoolId pool_id) {
 4011              		.loc 1 1669 0
 4012              		.cfi_startproc
 4013              		@ args = 0, pretend = 0, frame = 0
 4014              		@ frame_needed = 0, uses_anonymous_args = 0
 4015 0000 08B5     		push	{r3, lr}
 4016              	.LCFI67:
 4017              		.cfi_def_cfa_offset 8
 4018              		.cfi_offset 3, -8
 4019              		.cfi_offset 14, -4
 4020              	.LBB358:
 4021              	.LBB359:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 4022              		.loc 2 383 0
 4023              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4024 0002 EFF30581 		MRS r1, ipsr
 4025              	@ 0 "" 2
 4026              		.thumb
 4027              	.LBE359:
 4028              	.LBE358:
1670:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((__get_IPSR() != 0) || ((__get_CONTROL() & 1) == 0)) {    // in ISR or Privileged
 4029              		.loc 1 1670 0
 4030 0006 21B9     		cbnz	r1, .L328
 4031              	.LBB360:
 4032              	.LBB361:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 4033              		.loc 2 356 0
 4034              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4035 0008 EFF31481 		MRS r1, control
 4036              	@ 0 "" 2
 4037              		.thumb
 4038              	.LBE361:
 4039              	.LBE360:
 4040              		.loc 1 1670 0
 4041 000c 11F0010F 		tst	r1, #1
 4042 0010 04D1     		bne	.L329
 4043              	.L328:
1671:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   sysPoolAlloc(pool_id, 1);
 4044              		.loc 1 1671 0
 4045 0012 4FF00101 		mov	r1, #1
 4046 0016 FFF7FEFF 		bl	sysPoolAlloc
 4047 001a 08BD     		pop	{r3, pc}
 4048              	.L329:
 4049              	.LBB362:
 4050              	.LBB363:
1595:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(sysPoolAlloc,  void *,         osPoolId,      uint32_t, RET_pointer)
 4051              		.loc 1 1595 0
 4052 001c 4FF00101 		mov	r1, #1
 4053              	@ 1595 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 4054 0020 DFF804C0 		ldr r12,=sysPoolAlloc
 4055 0024 00DF     		svc 0
 4056              	@ 0 "" 2
 4057              		.thumb
 4058              	.LBE363:
 4059              	.LBE362:
1672:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1673:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __sysPoolAlloc(pool_id, 1);
1674:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1675:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4060              		.loc 1 1675 0
 4061 0026 08BD     		pop	{r3, pc}
 4062              		.cfi_endproc
 4063              	.LFE205:
 4065              		.section	.text.osPoolFree,"ax",%progbits
 4066              		.align	2
 4067              		.global	osPoolFree
 4068              		.thumb
 4069              		.thumb_func
 4071              	osPoolFree:
 4072              	.LFB206:
1676:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1677:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Return an allocated memory block back to a specific memory pool
1678:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osPoolFree (osPoolId pool_id, void *block) {
 4073              		.loc 1 1678 0
 4074              		.cfi_startproc
 4075              		@ args = 0, pretend = 0, frame = 0
 4076              		@ frame_needed = 0, uses_anonymous_args = 0
 4077 0000 10B5     		push	{r4, lr}
 4078              	.LCFI68:
 4079              		.cfi_def_cfa_offset 8
 4080              		.cfi_offset 4, -8
 4081              		.cfi_offset 14, -4
 4082              	.LBB364:
 4083              	.LBB365:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 4084              		.loc 2 383 0
 4085              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4086 0002 EFF30584 		MRS r4, ipsr
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              	.LBE365:
 4090              	.LBE364:
1679:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((__get_IPSR() != 0) || ((__get_CONTROL() & 1) == 0)) {    // in ISR or Privileged
 4091              		.loc 1 1679 0
 4092 0006 24B9     		cbnz	r4, .L332
 4093              	.LBB366:
 4094              	.LBB367:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 4095              		.loc 2 356 0
 4096              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4097 0008 EFF31484 		MRS r4, control
 4098              	@ 0 "" 2
 4099              		.thumb
 4100              	.LBE367:
 4101              	.LBE366:
 4102              		.loc 1 1679 0
 4103 000c 14F0010F 		tst	r4, #1
 4104 0010 02D1     		bne	.L333
 4105              	.L332:
1680:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   sysPoolFree(pool_id, block);
 4106              		.loc 1 1680 0
 4107 0012 FFF7FEFF 		bl	sysPoolFree
 4108 0016 10BD     		pop	{r4, pc}
 4109              	.L333:
 4110              	.LBB368:
 4111              	.LBB369:
1596:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(sysPoolFree,   osStatus,       osPoolId,      void *,   RET_osStatus)
 4112              		.loc 1 1596 0
 4113              	@ 1596 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 4114 0018 DFF804C0 		ldr r12,=sysPoolFree
 4115 001c 00DF     		svc 0
 4116              	@ 0 "" 2
 4117              		.thumb
 4118              	.LBE369:
 4119              	.LBE368:
1681:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1682:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __sysPoolFree(pool_id, block);
1683:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1684:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4120              		.loc 1 1684 0
 4121 001e 10BD     		pop	{r4, pc}
 4122              		.cfi_endproc
 4123              	.LFE206:
 4125              		.section	.text.svcMessageCreate,"ax",%progbits
 4126              		.align	2
 4127              		.global	svcMessageCreate
 4128              		.thumb
 4129              		.thumb_func
 4131              	svcMessageCreate:
 4132              	.LFB210:
1685:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1686:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1687:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Message Queue Management Functions ====
1688:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1689:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Message Queue Management Service Calls declarations
1690:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcMessageCreate,        osMessageQId, const osMessageQDef_t *, osThreadId,           RET_p
1691:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_3_1(svcMessagePut,           osStatus,           osMessageQId,      uint32_t,   uint32_t, RET_o
1692:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_3(svcMessageGet, os_InRegs osEvent,            osMessageQId,      uint32_t,             RET_o
1693:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1694:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Message Queue Service Calls
1695:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1696:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize Message Queue
1697:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMessageQId svcMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id) {
 4133              		.loc 1 1697 0
 4134              		.cfi_startproc
 4135              		@ args = 0, pretend = 0, frame = 0
 4136              		@ frame_needed = 0, uses_anonymous_args = 0
 4137 0000 10B5     		push	{r4, lr}
 4138              	.LCFI69:
 4139              		.cfi_def_cfa_offset 8
 4140              		.cfi_offset 4, -8
 4141              		.cfi_offset 14, -4
1698:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1699:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((queue_def == NULL) ||
 4142              		.loc 1 1699 0
 4143 0002 0446     		mov	r4, r0
 4144 0004 80B1     		cbz	r0, .L337
1700:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->queue_sz == 0) ||
 4145              		.loc 1 1700 0 discriminator 1
 4146 0006 0368     		ldr	r3, [r0, #0]
1699:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((queue_def == NULL) ||
 4147              		.loc 1 1699 0 discriminator 1
 4148 0008 8BB1     		cbz	r3, .L338
1701:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->pool == NULL)) {
 4149              		.loc 1 1701 0
 4150 000a 4068     		ldr	r0, [r0, #4]
1700:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->queue_sz == 0) ||
 4151              		.loc 1 1700 0
 4152 000c 90B1     		cbz	r0, .L339
1702:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1703:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1704:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1705:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
1706:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_def->pool)->cb_type != 0) {
 4153              		.loc 1 1706 0
 4154 000e 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 4155 0010 9AB9     		cbnz	r2, .L340
1707:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1708:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1709:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1710:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1711:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_mbx_init(queue_def->pool, 4*(queue_def->queue_sz + 4));
 4156              		.loc 1 1711 0
 4157 0012 03F10403 		add	r3, r3, #4
 4158 0016 4FEA8303 		lsl	r3, r3, #2
 4159 001a 4FF6FC71 		movw	r1, #65532
 4160 001e 1940     		ands	r1, r1, r3
 4161 0020 FFF7FEFF 		bl	rt_mbx_init
1712:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1713:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return queue_def->pool;
 4162              		.loc 1 1713 0
 4163 0024 6068     		ldr	r0, [r4, #4]
 4164 0026 10BD     		pop	{r4, pc}
 4165              	.L337:
1703:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 4166              		.loc 1 1703 0
 4167 0028 4FF00000 		mov	r0, #0
 4168 002c 10BD     		pop	{r4, pc}
 4169              	.L338:
 4170 002e 4FF00000 		mov	r0, #0
 4171 0032 10BD     		pop	{r4, pc}
 4172              	.L339:
 4173 0034 4FF00000 		mov	r0, #0
 4174 0038 10BD     		pop	{r4, pc}
 4175              	.L340:
1708:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 4176              		.loc 1 1708 0
 4177 003a 4FF00000 		mov	r0, #0
1714:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4178              		.loc 1 1714 0
 4179 003e 10BD     		pop	{r4, pc}
 4180              		.cfi_endproc
 4181              	.LFE210:
 4183              		.section	.text.svcMessagePut,"ax",%progbits
 4184              		.align	2
 4185              		.global	svcMessagePut
 4186              		.thumb
 4187              		.thumb_func
 4189              	svcMessagePut:
 4190              	.LFB211:
1715:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1716:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Put a Message to a Queue
1717:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus svcMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec) {
 4191              		.loc 1 1717 0
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 0
 4194              		@ frame_needed = 0, uses_anonymous_args = 0
 4195 0000 70B5     		push	{r4, r5, r6, lr}
 4196              	.LCFI70:
 4197              		.cfi_def_cfa_offset 16
 4198              		.cfi_offset 4, -16
 4199              		.cfi_offset 5, -12
 4200              		.cfi_offset 6, -8
 4201              		.cfi_offset 14, -4
 4202 0002 0E46     		mov	r6, r1
 4203 0004 1546     		mov	r5, r2
1718:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1719:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1720:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return osErrorParameter;
 4204              		.loc 1 1720 0
 4205 0006 0446     		mov	r4, r0
 4206 0008 88B1     		cbz	r0, .L343
1721:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1722:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_id)->cb_type != MCB) return osErrorParameter;
 4207              		.loc 1 1722 0
 4208 000a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 4209 000c 012B     		cmp	r3, #1
 4210 000e 11D1     		bne	.L344
1723:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1724:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_mbx_send(queue_id, (void *)info, rt_ms2tick(millisec));
 4211              		.loc 1 1724 0
 4212 0010 1046     		mov	r0, r2
 4213 0012 FFF7FEFF 		bl	rt_ms2tick
 4214 0016 82B2     		uxth	r2, r0
 4215 0018 2046     		mov	r0, r4
 4216 001a 3146     		mov	r1, r6
 4217 001c FFF7FEFF 		bl	rt_mbx_send
1725:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1726:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_TMO) {
 4218              		.loc 1 1726 0
 4219 0020 0128     		cmp	r0, #1
 4220 0022 0AD1     		bne	.L345
1727:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return (millisec ? osErrorTimeoutResource : osErrorResource);
 4221              		.loc 1 1727 0
 4222 0024 002D     		cmp	r5, #0
 4223 0026 0CBF     		ite	eq
 4224 0028 8120     		moveq	r0, #129
 4225 002a C120     		movne	r0, #193
 4226 002c 70BD     		pop	{r4, r5, r6, pc}
 4227              	.L343:
1720:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return osErrorParameter;
 4228              		.loc 1 1720 0
 4229 002e 4FF08000 		mov	r0, #128
 4230 0032 70BD     		pop	{r4, r5, r6, pc}
 4231              	.L344:
1722:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_id)->cb_type != MCB) return osErrorParameter;
 4232              		.loc 1 1722 0
 4233 0034 4FF08000 		mov	r0, #128
 4234 0038 70BD     		pop	{r4, r5, r6, pc}
 4235              	.L345:
1728:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1729:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1730:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 4236              		.loc 1 1730 0
 4237 003a 4FF00000 		mov	r0, #0
1731:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4238              		.loc 1 1731 0
 4239 003e 70BD     		pop	{r4, r5, r6, pc}
 4240              		.cfi_endproc
 4241              	.LFE211:
 4243              		.section	.text.svcMessageGet,"ax",%progbits
 4244              		.align	2
 4245              		.global	svcMessageGet
 4246              		.thumb
 4247              		.thumb_func
 4249              	svcMessageGet:
 4250              	.LFB212:
1732:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1733:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get a Message or Wait for a Message from a Queue
1734:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent_type svcMessageGet (osMessageQId queue_id, uint32_t millisec) {
 4251              		.loc 1 1734 0
 4252              		.cfi_startproc
 4253              		@ args = 0, pretend = 0, frame = 16
 4254              		@ frame_needed = 0, uses_anonymous_args = 0
 4255 0000 30B5     		push	{r4, r5, lr}
 4256              	.LCFI71:
 4257              		.cfi_def_cfa_offset 12
 4258              		.cfi_offset 4, -12
 4259              		.cfi_offset 5, -8
 4260              		.cfi_offset 14, -4
 4261 0002 85B0     		sub	sp, sp, #20
 4262              	.LCFI72:
 4263              		.cfi_def_cfa_offset 32
 4264 0004 0D46     		mov	r5, r1
1735:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1736:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent   ret;
1737:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1738:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) {
 4265              		.loc 1 1738 0
 4266 0006 0446     		mov	r4, r0
 4267 0008 30B9     		cbnz	r0, .L348
1739:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorParameter;
1740:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osEvent_ret_status;
 4268              		.loc 1 1740 0
 4269 000a 4FF00001 		mov	r1, #0
 4270 000e 0A46     		mov	r2, r1
 4271 0010 0B46     		mov	r3, r1
 4272 0012 4FF08000 		mov	r0, #128
 4273 0016 22E0     		b	.L349
 4274              	.L348:
1741:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1742:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1743:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_id)->cb_type != MCB) {
 4275              		.loc 1 1743 0
 4276 0018 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 4277 001a 012B     		cmp	r3, #1
 4278 001c 06D0     		beq	.L350
1744:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorParameter;
1745:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osEvent_ret_status;
 4279              		.loc 1 1745 0
 4280 001e 4FF00001 		mov	r1, #0
 4281 0022 0A46     		mov	r2, r1
 4282 0024 0B46     		mov	r3, r1
 4283 0026 4FF08000 		mov	r0, #128
 4284 002a 18E0     		b	.L349
 4285              	.L350:
1746:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1747:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1748:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_mbx_wait(queue_id, &ret.value.p, rt_ms2tick(millisec));
 4286              		.loc 1 1748 0
 4287 002c 0846     		mov	r0, r1
 4288 002e FFF7FEFF 		bl	rt_ms2tick
 4289 0032 82B2     		uxth	r2, r0
 4290 0034 2046     		mov	r0, r4
 4291 0036 02A9     		add	r1, sp, #8
 4292 0038 FFF7FEFF 		bl	rt_mbx_wait
1749:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
1750:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res == OS_R_TMO) {
 4293              		.loc 1 1750 0
 4294 003c 0128     		cmp	r0, #1
 4295 003e 08D1     		bne	.L351
1751:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = millisec ? osEventTimeout : osOK;
1752:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osEvent_ret_value;
 4296              		.loc 1 1752 0
 4297 0040 4FF00003 		mov	r3, #0
 4298 0044 9D42     		cmp	r5, r3
 4299 0046 14BF     		ite	ne
 4300 0048 4020     		movne	r0, #64
 4301 004a 1846     		moveq	r0, r3
 4302 004c 0299     		ldr	r1, [sp, #8]
 4303 004e 1A46     		mov	r2, r3
 4304 0050 05E0     		b	.L349
 4305              	.L351:
1753:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1754:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1755:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret.status = osEventMessage;
1756:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1757:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osEvent_ret_value;
 4306              		.loc 1 1757 0
 4307 0052 4FF00003 		mov	r3, #0
 4308 0056 4FF01000 		mov	r0, #16
 4309 005a 0299     		ldr	r1, [sp, #8]
 4310 005c 1A46     		mov	r2, r3
 4311              	.L349:
1758:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4312              		.loc 1 1758 0
 4313 005e 05B0     		add	sp, sp, #20
 4314 0060 30BD     		pop	{r4, r5, pc}
 4315              		.cfi_endproc
 4316              	.LFE212:
 4318 0062 00BF     		.section	.text.isrMessagePut,"ax",%progbits
 4319              		.align	2
 4320              		.thumb
 4321              		.thumb_func
 4323              	isrMessagePut:
 4324              	.LFB213:
1759:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1760:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1761:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Message Queue ISR Calls
1762:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1763:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Put a Message to a Queue
1764:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __INLINE osStatus isrMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec) {
 4325              		.loc 1 1764 0
 4326              		.cfi_startproc
 4327              		@ args = 0, pretend = 0, frame = 0
 4328              		@ frame_needed = 0, uses_anonymous_args = 0
 4329 0000 38B5     		push	{r3, r4, r5, lr}
 4330              	.LCFI73:
 4331              		.cfi_def_cfa_offset 16
 4332              		.cfi_offset 3, -16
 4333              		.cfi_offset 4, -12
 4334              		.cfi_offset 5, -8
 4335              		.cfi_offset 14, -4
 4336 0002 0D46     		mov	r5, r1
1765:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1766:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((queue_id == NULL) || (millisec != 0)) {
 4337              		.loc 1 1766 0
 4338 0004 0446     		mov	r4, r0
 4339 0006 68B1     		cbz	r0, .L356
 4340              		.loc 1 1766 0 is_stmt 0 discriminator 1
 4341 0008 7AB9     		cbnz	r2, .L357
1767:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorParameter;
1768:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1769:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1770:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_id)->cb_type != MCB) return osErrorParameter;
 4342              		.loc 1 1770 0 is_stmt 1
 4343 000a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 4344 000c 012B     		cmp	r3, #1
 4345 000e 0FD1     		bne	.L358
1771:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1772:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (rt_mbx_check(queue_id) == 0) {            // Check if Queue is full
 4346              		.loc 1 1772 0
 4347 0010 FFF7FEFF 		bl	rt_mbx_check
 4348 0014 78B1     		cbz	r0, .L359
1773:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorResource;
1774:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1775:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1776:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   isr_mbx_send(queue_id, (void *)info);
 4349              		.loc 1 1776 0
 4350 0016 2046     		mov	r0, r4
 4351 0018 2946     		mov	r1, r5
 4352 001a FFF7FEFF 		bl	isr_mbx_send
1777:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1778:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 4353              		.loc 1 1778 0
 4354 001e 4FF00000 		mov	r0, #0
 4355 0022 38BD     		pop	{r3, r4, r5, pc}
 4356              	.L356:
1767:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorParameter;
 4357              		.loc 1 1767 0
 4358 0024 4FF08000 		mov	r0, #128
 4359 0028 38BD     		pop	{r3, r4, r5, pc}
 4360              	.L357:
 4361 002a 4FF08000 		mov	r0, #128
 4362 002e 38BD     		pop	{r3, r4, r5, pc}
 4363              	.L358:
1770:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_id)->cb_type != MCB) return osErrorParameter;
 4364              		.loc 1 1770 0
 4365 0030 4FF08000 		mov	r0, #128
 4366 0034 38BD     		pop	{r3, r4, r5, pc}
 4367              	.L359:
1773:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return osErrorResource;
 4368              		.loc 1 1773 0
 4369 0036 4FF08100 		mov	r0, #129
1779:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4370              		.loc 1 1779 0
 4371 003a 38BD     		pop	{r3, r4, r5, pc}
 4372              		.cfi_endproc
 4373              	.LFE213:
 4375              		.section	.text.isrMessageGet,"ax",%progbits
 4376              		.align	2
 4377              		.thumb
 4378              		.thumb_func
 4380              	isrMessageGet:
 4381              	.LFB214:
1780:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1781:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get a Message or Wait for a Message from a Queue
1782:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** static __INLINE os_InRegs osEvent isrMessageGet (osMessageQId queue_id, uint32_t millisec) {
 4382              		.loc 1 1782 0
 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 16
 4385              		@ frame_needed = 0, uses_anonymous_args = 0
 4386 0000 10B5     		push	{r4, lr}
 4387              	.LCFI74:
 4388              		.cfi_def_cfa_offset 8
 4389              		.cfi_offset 4, -8
 4390              		.cfi_offset 14, -4
 4391 0002 84B0     		sub	sp, sp, #16
 4392              	.LCFI75:
 4393              		.cfi_def_cfa_offset 24
 4394 0004 0446     		mov	r4, r0
1783:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   OS_RESULT res;
1784:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent   ret;
1785:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1786:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((queue_id == NULL) || (millisec != 0)) {
 4395              		.loc 1 1786 0
 4396 0006 0846     		mov	r0, r1
 4397 0008 01B1     		cbz	r1, .L361
 4398              		.loc 1 1786 0 is_stmt 0 discriminator 1
 4399 000a 4AB1     		cbz	r2, .L362
 4400              	.L361:
1787:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorParameter;
 4401              		.loc 1 1787 0 is_stmt 1
 4402 000c 04AB     		add	r3, sp, #16
 4403 000e 4FF08002 		mov	r2, #128
 4404 0012 43F80C2D 		str	r2, [r3, #-12]!
1788:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return ret;
 4405              		.loc 1 1788 0
 4406 0016 93E80700 		ldmia	r3, {r0, r1, r2}
 4407 001a 84E80700 		stmia	r4, {r0, r1, r2}
 4408 001e 1AE0     		b	.L360
 4409              	.L362:
1789:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1790:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1791:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((P_MCB)queue_id)->cb_type != MCB) {
 4410              		.loc 1 1791 0
 4411 0020 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 4412 0022 012B     		cmp	r3, #1
 4413 0024 09D0     		beq	.L364
1792:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorParameter;
 4414              		.loc 1 1792 0
 4415 0026 04AB     		add	r3, sp, #16
 4416 0028 4FF08002 		mov	r2, #128
 4417 002c 43F80C2D 		str	r2, [r3, #-12]!
1793:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return ret;
 4418              		.loc 1 1793 0
 4419 0030 93E80700 		ldmia	r3, {r0, r1, r2}
 4420 0034 84E80700 		stmia	r4, {r0, r1, r2}
 4421 0038 0DE0     		b	.L360
 4422              	.L364:
1794:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1795:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1796:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = isr_mbx_receive(queue_id, &ret.value.p);
 4423              		.loc 1 1796 0
 4424 003a 02A9     		add	r1, sp, #8
 4425 003c FFF7FEFF 		bl	isr_mbx_receive
1797:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   
1798:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res != OS_R_MBX) {
 4426              		.loc 1 1798 0
 4427 0040 0428     		cmp	r0, #4
1799:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osOK;
 4428              		.loc 1 1799 0
 4429 0042 04AB     		add	r3, sp, #16
 4430 0044 14BF     		ite	ne
 4431 0046 0022     		movne	r2, #0
1800:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return ret;
1801:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1802:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1803:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret.status = osEventMessage; 
 4432              		.loc 1 1803 0
 4433 0048 1022     		moveq	r2, #16
 4434 004a 43F80C2D 		str	r2, [r3, #-12]!
1804:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1805:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ret;
 4435              		.loc 1 1805 0
 4436 004e 93E80700 		ldmia	r3, {r0, r1, r2}
 4437 0052 84E80700 		stmia	r4, {r0, r1, r2}
 4438              	.L360:
1806:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4439              		.loc 1 1806 0
 4440 0056 2046     		mov	r0, r4
 4441 0058 04B0     		add	sp, sp, #16
 4442 005a 10BD     		pop	{r4, pc}
 4443              		.cfi_endproc
 4444              	.LFE214:
 4446              		.section	.text.osMessageCreate,"ax",%progbits
 4447              		.align	2
 4448              		.global	osMessageCreate
 4449              		.thumb
 4450              		.thumb_func
 4452              	osMessageCreate:
 4453              	.LFB215:
1807:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1808:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1809:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Message Queue Management Public API
1810:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1811:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize Message Queue
1812:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMessageQId osMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id) {
 4454              		.loc 1 1812 0
 4455              		.cfi_startproc
 4456              		@ args = 0, pretend = 0, frame = 0
 4457              		@ frame_needed = 0, uses_anonymous_args = 0
 4458 0000 10B5     		push	{r4, lr}
 4459              	.LCFI76:
 4460              		.cfi_def_cfa_offset 8
 4461              		.cfi_offset 4, -8
 4462              		.cfi_offset 14, -4
 4463              	.LBB370:
 4464              	.LBB371:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 4465              		.loc 2 383 0
 4466              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4467 0002 EFF30584 		MRS r4, ipsr
 4468              	@ 0 "" 2
 4469              		.thumb
 4470              	.LBE371:
 4471              	.LBE370:
1813:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 4472              		.loc 1 1813 0
 4473 0006 8CB9     		cbnz	r4, .L369
 4474              	.LBB372:
 4475              	.LBB373:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 4476              		.loc 2 356 0
 4477              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4478 0008 EFF31484 		MRS r4, control
 4479              	@ 0 "" 2
 4480              		.thumb
 4481              	.LBE373:
 4482              	.LBE372:
1814:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 4483              		.loc 1 1814 0
 4484 000c 14F0010F 		tst	r4, #1
 4485 0010 08D1     		bne	.L368
 4486              		.loc 1 1814 0 is_stmt 0 discriminator 1
 4487 0012 40F20004 		movw	r4, #:lower16:os_running
 4488 0016 C0F20004 		movt	r4, #:upper16:os_running
 4489 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 4490 001c 14B9     		cbnz	r4, .L368
1815:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
1816:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcMessageCreate(queue_def, thread_id);
 4491              		.loc 1 1816 0 is_stmt 1
 4492 001e FFF7FEFF 		bl	svcMessageCreate
 4493 0022 10BD     		pop	{r4, pc}
 4494              	.L368:
 4495              	.LBB374:
 4496              	.LBB375:
1690:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcMessageCreate,        osMessageQId, const osMessageQDef_t *, osThreadId,           RET_p
 4497              		.loc 1 1690 0
 4498              	@ 1690 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 4499 0024 DFF80CC0 		ldr r12,=svcMessageCreate
 4500 0028 00DF     		svc 0
 4501              	@ 0 "" 2
 4502              		.thumb
 4503              	.LBE375:
 4504              	.LBE374:
1817:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1818:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcMessageCreate(queue_def, thread_id);
 4505              		.loc 1 1818 0
 4506 002a 10BD     		pop	{r4, pc}
 4507              	.L369:
1813:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 4508              		.loc 1 1813 0
 4509 002c 4FF00000 		mov	r0, #0
1819:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1820:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4510              		.loc 1 1820 0
 4511 0030 10BD     		pop	{r4, pc}
 4512              		.cfi_endproc
 4513              	.LFE215:
 4515 0032 0000     		.section	.text.osMessagePut,"ax",%progbits
 4516              		.align	2
 4517              		.global	osMessagePut
 4518              		.thumb
 4519              		.thumb_func
 4521              	osMessagePut:
 4522              	.LFB216:
1821:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1822:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Put a Message to a Queue
1823:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec) {
 4523              		.loc 1 1823 0
 4524              		.cfi_startproc
 4525              		@ args = 0, pretend = 0, frame = 0
 4526              		@ frame_needed = 0, uses_anonymous_args = 0
 4527 0000 10B5     		push	{r4, lr}
 4528              	.LCFI77:
 4529              		.cfi_def_cfa_offset 8
 4530              		.cfi_offset 4, -8
 4531              		.cfi_offset 14, -4
 4532              	.LBB376:
 4533              	.LBB377:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 4534              		.loc 2 383 0
 4535              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4536 0002 EFF30584 		MRS r4, ipsr
 4537              	@ 0 "" 2
 4538              		.thumb
 4539              	.LBE377:
 4540              	.LBE376:
1824:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 4541              		.loc 1 1824 0
 4542 0006 14B1     		cbz	r4, .L371
1825:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   isrMessagePut(queue_id, info, millisec);
 4543              		.loc 1 1825 0
 4544 0008 FFF7FEFF 		bl	isrMessagePut
 4545 000c 10BD     		pop	{r4, pc}
 4546              	.L371:
 4547              	.LBB378:
 4548              	.LBB379:
1691:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_3_1(svcMessagePut,           osStatus,           osMessageQId,      uint32_t,   uint32_t, RET_o
 4549              		.loc 1 1691 0
 4550              	@ 1691 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 4551 000e DFF808C0 		ldr r12,=svcMessagePut
 4552 0012 00DF     		svc 0
 4553              	@ 0 "" 2
 4554              		.thumb
 4555              	.LBE379:
 4556              	.LBE378:
1826:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1827:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcMessagePut(queue_id, info, millisec);
1828:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1829:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4557              		.loc 1 1829 0
 4558 0014 10BD     		pop	{r4, pc}
 4559              		.cfi_endproc
 4560              	.LFE216:
 4562 0016 0000     		.section	.text.osMessageGet,"ax",%progbits
 4563              		.align	2
 4564              		.global	osMessageGet
 4565              		.thumb
 4566              		.thumb_func
 4568              	osMessageGet:
 4569              	.LFB217:
1830:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1831:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get a Message or Wait for a Message from a Queue
1832:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent osMessageGet (osMessageQId queue_id, uint32_t millisec) {
 4570              		.loc 1 1832 0
 4571              		.cfi_startproc
 4572              		@ args = 0, pretend = 0, frame = 0
 4573              		@ frame_needed = 0, uses_anonymous_args = 0
 4574 0000 70B5     		push	{r4, r5, r6, lr}
 4575              	.LCFI78:
 4576              		.cfi_def_cfa_offset 16
 4577              		.cfi_offset 4, -16
 4578              		.cfi_offset 5, -12
 4579              		.cfi_offset 6, -8
 4580              		.cfi_offset 14, -4
 4581 0002 0446     		mov	r4, r0
 4582 0004 1646     		mov	r6, r2
 4583              	.LBB380:
 4584              	.LBB381:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 4585              		.loc 2 383 0
 4586              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4587 0006 EFF30585 		MRS r5, ipsr
 4588              	@ 0 "" 2
 4589              		.thumb
 4590              	.LBE381:
 4591              	.LBE380:
1833:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 4592              		.loc 1 1833 0
 4593 000a 15B1     		cbz	r5, .L374
1834:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   isrMessageGet(queue_id, millisec);
 4594              		.loc 1 1834 0
 4595 000c FFF7FEFF 		bl	isrMessageGet
 4596 0010 07E0     		b	.L373
 4597              	.L374:
 4598              	.LBB382:
 4599              	.LBB383:
1692:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_3(svcMessageGet, os_InRegs osEvent,            osMessageQId,      uint32_t,             RET_o
 4600              		.loc 1 1692 0
 4601 0012 0846     		mov	r0, r1
 4602 0014 1146     		mov	r1, r2
 4603              	@ 1692 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 4604 0016 DFF810C0 		ldr r12,=svcMessageGet
 4605 001a 00DF     		svc 0
 4606              	@ 0 "" 2
 4607              		.thumb
 4608 001c 2060     		str	r0, [r4, #0]
 4609 001e 6160     		str	r1, [r4, #4]
 4610 0020 A260     		str	r2, [r4, #8]
 4611              	.L373:
 4612              	.LBE383:
 4613              	.LBE382:
1835:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1836:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcMessageGet(queue_id, millisec);
1837:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1838:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4614              		.loc 1 1838 0
 4615 0022 2046     		mov	r0, r4
 4616 0024 70BD     		pop	{r4, r5, r6, pc}
 4617              		.cfi_endproc
 4618              	.LFE217:
 4620 0026 0000     		.section	.text.svcMailCreate,"ax",%progbits
 4621              		.align	2
 4622              		.global	svcMailCreate
 4623              		.thumb
 4624              		.thumb_func
 4626              	svcMailCreate:
 4627              	.LFB221:
1839:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1840:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1841:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // ==== Mail Queue Management Functions ====
1842:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1843:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Mail Queue Management Service Calls declarations
1844:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcMailCreate, osMailQId, const osMailQDef_t *, osThreadId,                   RET_pointer)
1845:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_4_1(sysMailAlloc,  void *,          osMailQId,      uint32_t, uint32_t, uint32_t, RET_pointer)
1846:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_3_1(sysMailFree,   osStatus,        osMailQId,      void *,   uint32_t,           RET_osStatus)
1847:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1848:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Mail Queue Management Service & ISR Calls
1849:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1850:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize mail queue
1851:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMailQId svcMailCreate (const osMailQDef_t *queue_def, osThreadId thread_id) {
 4628              		.loc 1 1851 0
 4629              		.cfi_startproc
 4630              		@ args = 0, pretend = 0, frame = 0
 4631              		@ frame_needed = 0, uses_anonymous_args = 0
 4632 0000 38B5     		push	{r3, r4, r5, lr}
 4633              	.LCFI79:
 4634              		.cfi_def_cfa_offset 16
 4635              		.cfi_offset 3, -16
 4636              		.cfi_offset 4, -12
 4637              		.cfi_offset 5, -8
 4638              		.cfi_offset 14, -4
1852:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   uint32_t blk_sz;
1853:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_MCB    pmcb;
1854:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void    *pool;
1855:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1856:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((queue_def == NULL) ||
 4639              		.loc 1 1856 0
 4640 0002 0446     		mov	r4, r0
 4641 0004 0028     		cmp	r0, #0
 4642 0006 28D0     		beq	.L378
1857:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->queue_sz == 0) ||
 4643              		.loc 1 1857 0 discriminator 1
 4644 0008 0168     		ldr	r1, [r0, #0]
1856:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((queue_def == NULL) ||
 4645              		.loc 1 1856 0 discriminator 1
 4646 000a 0029     		cmp	r1, #0
 4647 000c 28D0     		beq	.L379
1858:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->item_sz  == 0) ||
 4648              		.loc 1 1858 0
 4649 000e 4268     		ldr	r2, [r0, #4]
1857:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->queue_sz == 0) ||
 4650              		.loc 1 1857 0
 4651 0010 002A     		cmp	r2, #0
 4652 0012 28D0     		beq	.L380
1859:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->pool == NULL)) {
 4653              		.loc 1 1859 0
 4654 0014 8368     		ldr	r3, [r0, #8]
1858:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       (queue_def->item_sz  == 0) ||
 4655              		.loc 1 1858 0
 4656 0016 002B     		cmp	r3, #0
 4657 0018 28D0     		beq	.L381
1860:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1861:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1862:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1863:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1864:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pmcb = *(((void **)queue_def->pool) + 0);
 4658              		.loc 1 1864 0
 4659 001a 1D68     		ldr	r5, [r3, #0]
1865:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pool = *(((void **)queue_def->pool) + 1);
 4660              		.loc 1 1865 0
 4661 001c 5868     		ldr	r0, [r3, #4]
1866:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1867:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pool == NULL) || (pmcb == NULL) || (pmcb->cb_type != 0)) {
 4662              		.loc 1 1867 0
 4663 001e 0028     		cmp	r0, #0
 4664 0020 27D0     		beq	.L382
 4665              		.loc 1 1867 0 is_stmt 0 discriminator 1
 4666 0022 002D     		cmp	r5, #0
 4667 0024 28D0     		beq	.L383
 4668 0026 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 4669 0028 002B     		cmp	r3, #0
 4670 002a 28D1     		bne	.L384
1868:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     sysThreadError(osErrorParameter);
1869:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
1870:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1871:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1872:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   blk_sz = (queue_def->item_sz + 3) & ~3;
 4671              		.loc 1 1872 0 is_stmt 1
 4672 002c 02F10302 		add	r2, r2, #3
 4673 0030 22F00302 		bic	r2, r2, #3
1873:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1874:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   _init_box(pool, sizeof(struct OS_BM) + queue_def->queue_sz * blk_sz, blk_sz);
 4674              		.loc 1 1874 0
 4675 0034 01FB02F1 		mul	r1, r1, r2
 4676 0038 01F10C01 		add	r1, r1, #12
 4677 003c FFF7FEFF 		bl	_init_box
1875:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1876:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   rt_mbx_init(pmcb, 4*(queue_def->queue_sz + 4));
 4678              		.loc 1 1876 0
 4679 0040 2368     		ldr	r3, [r4, #0]
 4680 0042 03F10403 		add	r3, r3, #4
 4681 0046 4FEA8303 		lsl	r3, r3, #2
 4682 004a 2846     		mov	r0, r5
 4683 004c 4FF6FC71 		movw	r1, #65532
 4684 0050 1940     		ands	r1, r1, r3
 4685 0052 FFF7FEFF 		bl	rt_mbx_init
1877:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1878:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return queue_def->pool;
 4686              		.loc 1 1878 0
 4687 0056 A068     		ldr	r0, [r4, #8]
 4688 0058 38BD     		pop	{r3, r4, r5, pc}
 4689              	.L378:
1861:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 4690              		.loc 1 1861 0
 4691 005a 4FF00000 		mov	r0, #0
 4692 005e 38BD     		pop	{r3, r4, r5, pc}
 4693              	.L379:
 4694 0060 4FF00000 		mov	r0, #0
 4695 0064 38BD     		pop	{r3, r4, r5, pc}
 4696              	.L380:
 4697 0066 4FF00000 		mov	r0, #0
 4698 006a 38BD     		pop	{r3, r4, r5, pc}
 4699              	.L381:
 4700 006c 4FF00000 		mov	r0, #0
 4701 0070 38BD     		pop	{r3, r4, r5, pc}
 4702              	.L382:
1869:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return NULL;
 4703              		.loc 1 1869 0
 4704 0072 4FF00000 		mov	r0, #0
 4705 0076 38BD     		pop	{r3, r4, r5, pc}
 4706              	.L383:
 4707 0078 4FF00000 		mov	r0, #0
 4708 007c 38BD     		pop	{r3, r4, r5, pc}
 4709              	.L384:
 4710 007e 4FF00000 		mov	r0, #0
1879:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4711              		.loc 1 1879 0
 4712 0082 38BD     		pop	{r3, r4, r5, pc}
 4713              		.cfi_endproc
 4714              	.LFE221:
 4716              		.section	.text.sysMailAlloc,"ax",%progbits
 4717              		.align	2
 4718              		.global	sysMailAlloc
 4719              		.thumb
 4720              		.thumb_func
 4722              	sysMailAlloc:
 4723              	.LFB222:
1880:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1881:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Allocate a memory block from a mail
1882:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void *sysMailAlloc (osMailQId queue_id, uint32_t millisec, uint32_t isr, uint32_t clr) {
 4724              		.loc 1 1882 0
 4725              		.cfi_startproc
 4726              		@ args = 0, pretend = 0, frame = 0
 4727              		@ frame_needed = 0, uses_anonymous_args = 0
 4728 0000 2DE97043 		push	{r4, r5, r6, r8, r9, lr}
 4729              	.LCFI80:
 4730              		.cfi_def_cfa_offset 24
 4731              		.cfi_offset 4, -24
 4732              		.cfi_offset 5, -20
 4733              		.cfi_offset 6, -16
 4734              		.cfi_offset 8, -12
 4735              		.cfi_offset 9, -8
 4736              		.cfi_offset 14, -4
 4737 0004 8946     		mov	r9, r1
 4738 0006 9846     		mov	r8, r3
1883:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_MCB pmcb;
1884:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void *pool;
1885:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void *mem;
1886:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1887:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return NULL;
 4739              		.loc 1 1887 0
 4740 0008 0028     		cmp	r0, #0
 4741 000a 38D0     		beq	.L391
1888:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1889:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pmcb = *(((void **)queue_id) + 0);
 4742              		.loc 1 1889 0
 4743 000c 0668     		ldr	r6, [r0, #0]
1890:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pool = *(((void **)queue_id) + 1);
 4744              		.loc 1 1890 0
 4745 000e 4568     		ldr	r5, [r0, #4]
1891:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1892:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pool == NULL) || (pmcb == NULL)) return NULL;
 4746              		.loc 1 1892 0
 4747 0010 002D     		cmp	r5, #0
 4748 0012 37D0     		beq	.L392
 4749              		.loc 1 1892 0 is_stmt 0 discriminator 2
 4750 0014 002E     		cmp	r6, #0
 4751 0016 38D0     		beq	.L393
1893:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1894:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (isr && (millisec != 0)) return NULL;
 4752              		.loc 1 1894 0 is_stmt 1
 4753 0018 0AB1     		cbz	r2, .L387
 4754              		.loc 1 1894 0 is_stmt 0 discriminator 1
 4755 001a 0029     		cmp	r1, #0
 4756 001c 38D1     		bne	.L394
 4757              	.L387:
1895:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1896:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   mem = rt_alloc_box(pool);
 4758              		.loc 1 1896 0 is_stmt 1
 4759 001e 2846     		mov	r0, r5
 4760 0020 FFF7FEFF 		bl	rt_alloc_box
 4761 0024 0446     		mov	r4, r0
1897:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (clr) {
 4762              		.loc 1 1897 0
 4763 0026 B8F1000F 		cmp	r8, #0
 4764 002a 03D0     		beq	.L388
1898:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     rt_clr_box(pool, mem);
 4765              		.loc 1 1898 0
 4766 002c 2846     		mov	r0, r5
 4767 002e 2146     		mov	r1, r4
 4768 0030 FFF7FEFF 		bl	rt_clr_box
 4769              	.L388:
1899:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1900:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1901:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((mem == NULL) && (millisec != 0)) {
 4770              		.loc 1 1901 0
 4771 0034 74BB     		cbnz	r4, .L386
 4772              		.loc 1 1901 0 is_stmt 0 discriminator 1
 4773 0036 B9F1000F 		cmp	r9, #0
 4774 003a 2BD0     		beq	.L386
1902:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Put Task to sleep when Memory not available
1903:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (pmcb->p_lnk != NULL) {
 4775              		.loc 1 1903 0 is_stmt 1
 4776 003c 7368     		ldr	r3, [r6, #4]
 4777 003e 43B1     		cbz	r3, .L389
1904:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_put_prio((P_XCB)pmcb, os_tsk.run);
 4778              		.loc 1 1904 0
 4779 0040 40F20003 		movw	r3, #:lower16:os_tsk
 4780 0044 C0F20003 		movt	r3, #:upper16:os_tsk
 4781 0048 3046     		mov	r0, r6
 4782 004a 1968     		ldr	r1, [r3, #0]
 4783 004c FFF7FEFF 		bl	rt_put_prio
 4784 0050 0CE0     		b	.L390
 4785              	.L389:
1905:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     } else {
1906:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       pmcb->p_lnk = os_tsk.run;
 4786              		.loc 1 1906 0
 4787 0052 40F20003 		movw	r3, #:lower16:os_tsk
 4788 0056 C0F20003 		movt	r3, #:upper16:os_tsk
 4789 005a 1B68     		ldr	r3, [r3, #0]
 4790 005c 7360     		str	r3, [r6, #4]
1907:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       os_tsk.run->p_lnk = NULL;
 4791              		.loc 1 1907 0
 4792 005e 4FF00002 		mov	r2, #0
 4793 0062 5A60     		str	r2, [r3, #4]
1908:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       os_tsk.run->p_rlnk = (P_TCB)pmcb;
 4794              		.loc 1 1908 0
 4795 0064 9E60     		str	r6, [r3, #8]
1909:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       // Task is waiting to allocate a message
1910:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       pmcb->state = 3;
 4796              		.loc 1 1910 0
 4797 0066 4FF00303 		mov	r3, #3
 4798 006a 7370     		strb	r3, [r6, #1]
 4799              	.L390:
1911:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
1912:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     rt_block(rt_ms2tick(millisec), WAIT_MBX);
 4800              		.loc 1 1912 0
 4801 006c 4846     		mov	r0, r9
 4802 006e FFF7FEFF 		bl	rt_ms2tick
 4803 0072 80B2     		uxth	r0, r0
 4804 0074 4FF00801 		mov	r1, #8
 4805 0078 FFF7FEFF 		bl	rt_block
 4806 007c 0AE0     		b	.L386
 4807              	.L391:
1887:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return NULL;
 4808              		.loc 1 1887 0
 4809 007e 4FF00004 		mov	r4, #0
 4810 0082 07E0     		b	.L386
 4811              	.L392:
1892:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pool == NULL) || (pmcb == NULL)) return NULL;
 4812              		.loc 1 1892 0
 4813 0084 4FF00004 		mov	r4, #0
 4814 0088 04E0     		b	.L386
 4815              	.L393:
 4816 008a 4FF00004 		mov	r4, #0
 4817 008e 01E0     		b	.L386
 4818              	.L394:
1894:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (isr && (millisec != 0)) return NULL;
 4819              		.loc 1 1894 0
 4820 0090 4FF00004 		mov	r4, #0
 4821              	.L386:
1913:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1914:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1915:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return mem;  
1916:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4822              		.loc 1 1916 0
 4823 0094 2046     		mov	r0, r4
 4824 0096 BDE87083 		pop	{r4, r5, r6, r8, r9, pc}
 4825              		.cfi_endproc
 4826              	.LFE222:
 4828 009a 00BF     		.section	.text.sysMailFree,"ax",%progbits
 4829              		.align	2
 4830              		.global	sysMailFree
 4831              		.thumb
 4832              		.thumb_func
 4834              	sysMailFree:
 4835              	.LFB223:
1917:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1918:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Free a memory block from a mail
1919:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus sysMailFree (osMailQId queue_id, void *mail, uint32_t isr) {
 4836              		.loc 1 1919 0
 4837              		.cfi_startproc
 4838              		@ args = 0, pretend = 0, frame = 0
 4839              		@ frame_needed = 0, uses_anonymous_args = 0
 4840 0000 70B5     		push	{r4, r5, r6, lr}
 4841              	.LCFI81:
 4842              		.cfi_def_cfa_offset 16
 4843              		.cfi_offset 4, -16
 4844              		.cfi_offset 5, -12
 4845              		.cfi_offset 6, -8
 4846              		.cfi_offset 14, -4
 4847 0002 1646     		mov	r6, r2
1920:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_MCB   pmcb;
1921:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   P_TCB   ptcb;
1922:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void   *pool;
1923:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   void   *mem;
1924:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   int32_t res;
1925:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1926:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return osErrorParameter;
 4848              		.loc 1 1926 0
 4849 0004 0028     		cmp	r0, #0
 4850 0006 30D0     		beq	.L398
1927:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1928:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pmcb = *(((void **)queue_id) + 0);
 4851              		.loc 1 1928 0
 4852 0008 0468     		ldr	r4, [r0, #0]
1929:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   pool = *(((void **)queue_id) + 1);
 4853              		.loc 1 1929 0
 4854 000a 4568     		ldr	r5, [r0, #4]
1930:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1931:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pmcb == NULL) || (pool == NULL)) return osErrorParameter;
 4855              		.loc 1 1931 0
 4856 000c 002C     		cmp	r4, #0
 4857 000e 2FD0     		beq	.L399
 4858              		.loc 1 1931 0 is_stmt 0 discriminator 2
 4859 0010 002D     		cmp	r5, #0
 4860 0012 30D0     		beq	.L400
1932:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1933:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   res = rt_free_box(pool, mail);
 4861              		.loc 1 1933 0 is_stmt 1
 4862 0014 2846     		mov	r0, r5
 4863 0016 FFF7FEFF 		bl	rt_free_box
1934:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1935:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res != 0) return osErrorValue;
 4864              		.loc 1 1935 0
 4865 001a 0028     		cmp	r0, #0
 4866 001c 2ED1     		bne	.L401
1936:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1937:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pmcb->p_lnk != NULL) && (pmcb->state == 3)) {
 4867              		.loc 1 1937 0
 4868 001e 6368     		ldr	r3, [r4, #4]
 4869 0020 002B     		cmp	r3, #0
 4870 0022 2ED0     		beq	.L402
 4871              		.loc 1 1937 0 is_stmt 0 discriminator 1
 4872 0024 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 4873 0026 032B     		cmp	r3, #3
 4874 0028 2ED1     		bne	.L403
1938:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Task is waiting to allocate a message
1939:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     if (isr) {
 4875              		.loc 1 1939 0 is_stmt 1
 4876 002a 46B1     		cbz	r6, .L397
1940:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_psq_enq (pmcb, (U32)pool);
 4877              		.loc 1 1940 0
 4878 002c 2046     		mov	r0, r4
 4879 002e 2946     		mov	r1, r5
 4880 0030 FFF7FEFF 		bl	rt_psq_enq
1941:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       rt_psh_req ();
 4881              		.loc 1 1941 0
 4882 0034 FFF7FEFF 		bl	rt_psh_req
1942:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     } else {
1943:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       mem = rt_alloc_box(pool);
1944:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if (mem != NULL) {
1945:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         ptcb = rt_get_first((P_XCB)pmcb);
1946:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         rt_ret_val(ptcb, (U32)mem);
1947:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         rt_rmv_dly(ptcb);
1948:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         rt_dispatch(ptcb);
1949:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       }
1950:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     }
1951:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1952:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1953:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osOK;
 4883              		.loc 1 1953 0
 4884 0038 4FF00000 		mov	r0, #0
 4885 003c 70BD     		pop	{r4, r5, r6, pc}
 4886              	.L397:
1943:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       mem = rt_alloc_box(pool);
 4887              		.loc 1 1943 0
 4888 003e 2846     		mov	r0, r5
 4889 0040 FFF7FEFF 		bl	rt_alloc_box
1944:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****       if (mem != NULL) {
 4890              		.loc 1 1944 0
 4891 0044 0546     		mov	r5, r0
 4892 0046 0028     		cmp	r0, #0
 4893 0048 21D0     		beq	.L404
1945:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         ptcb = rt_get_first((P_XCB)pmcb);
 4894              		.loc 1 1945 0
 4895 004a 2046     		mov	r0, r4
 4896 004c FFF7FEFF 		bl	rt_get_first
 4897 0050 0446     		mov	r4, r0
1946:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         rt_ret_val(ptcb, (U32)mem);
 4898              		.loc 1 1946 0
 4899 0052 2946     		mov	r1, r5
 4900 0054 FFF7FEFF 		bl	rt_ret_val
1947:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         rt_rmv_dly(ptcb);
 4901              		.loc 1 1947 0
 4902 0058 2046     		mov	r0, r4
 4903 005a FFF7FEFF 		bl	rt_rmv_dly
1948:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****         rt_dispatch(ptcb);
 4904              		.loc 1 1948 0
 4905 005e 2046     		mov	r0, r4
 4906 0060 FFF7FEFF 		bl	rt_dispatch
 4907              		.loc 1 1953 0
 4908 0064 4FF00000 		mov	r0, #0
 4909 0068 70BD     		pop	{r4, r5, r6, pc}
 4910              	.L398:
1926:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return osErrorParameter;
 4911              		.loc 1 1926 0
 4912 006a 4FF08000 		mov	r0, #128
 4913 006e 70BD     		pop	{r4, r5, r6, pc}
 4914              	.L399:
1931:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if ((pmcb == NULL) || (pool == NULL)) return osErrorParameter;
 4915              		.loc 1 1931 0
 4916 0070 4FF08000 		mov	r0, #128
 4917 0074 70BD     		pop	{r4, r5, r6, pc}
 4918              	.L400:
 4919 0076 4FF08000 		mov	r0, #128
 4920 007a 70BD     		pop	{r4, r5, r6, pc}
 4921              	.L401:
1935:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (res != 0) return osErrorValue;
 4922              		.loc 1 1935 0
 4923 007c 4FF08600 		mov	r0, #134
 4924 0080 70BD     		pop	{r4, r5, r6, pc}
 4925              	.L402:
 4926              		.loc 1 1953 0
 4927 0082 4FF00000 		mov	r0, #0
 4928 0086 70BD     		pop	{r4, r5, r6, pc}
 4929              	.L403:
 4930 0088 4FF00000 		mov	r0, #0
 4931 008c 70BD     		pop	{r4, r5, r6, pc}
 4932              	.L404:
 4933 008e 4FF00000 		mov	r0, #0
1954:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 4934              		.loc 1 1954 0
 4935 0092 70BD     		pop	{r4, r5, r6, pc}
 4936              		.cfi_endproc
 4937              	.LFE223:
 4939              		.section	.text.osMailCreate,"ax",%progbits
 4940              		.align	2
 4941              		.global	osMailCreate
 4942              		.thumb
 4943              		.thumb_func
 4945              	osMailCreate:
 4946              	.LFB224:
1955:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1956:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1957:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Mail Queue Management Public API
1958:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1959:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Create and Initialize mail queue
1960:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osMailQId osMailCreate (const osMailQDef_t *queue_def, osThreadId thread_id) {
 4947              		.loc 1 1960 0
 4948              		.cfi_startproc
 4949              		@ args = 0, pretend = 0, frame = 0
 4950              		@ frame_needed = 0, uses_anonymous_args = 0
 4951 0000 10B5     		push	{r4, lr}
 4952              	.LCFI82:
 4953              		.cfi_def_cfa_offset 8
 4954              		.cfi_offset 4, -8
 4955              		.cfi_offset 14, -4
 4956              	.LBB384:
 4957              	.LBB385:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 4958              		.loc 2 383 0
 4959              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4960 0002 EFF30584 		MRS r4, ipsr
 4961              	@ 0 "" 2
 4962              		.thumb
 4963              	.LBE385:
 4964              	.LBE384:
1961:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 4965              		.loc 1 1961 0
 4966 0006 8CB9     		cbnz	r4, .L408
 4967              	.LBB386:
 4968              	.LBB387:
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 4969              		.loc 2 356 0
 4970              	@ 356 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 4971 0008 EFF31484 		MRS r4, control
 4972              	@ 0 "" 2
 4973              		.thumb
 4974              	.LBE387:
 4975              	.LBE386:
1962:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (((__get_CONTROL() & 1) == 0) && (os_running == 0)) {
 4976              		.loc 1 1962 0
 4977 000c 14F0010F 		tst	r4, #1
 4978 0010 08D1     		bne	.L407
 4979              		.loc 1 1962 0 is_stmt 0 discriminator 1
 4980 0012 40F20004 		movw	r4, #:lower16:os_running
 4981 0016 C0F20004 		movt	r4, #:upper16:os_running
 4982 001a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 4983 001c 14B9     		cbnz	r4, .L407
1963:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     // Privileged and not running
1964:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   svcMailCreate(queue_def, thread_id);
 4984              		.loc 1 1964 0 is_stmt 1
 4985 001e FFF7FEFF 		bl	svcMailCreate
 4986 0022 10BD     		pop	{r4, pc}
 4987              	.L407:
 4988              	.LBB388:
 4989              	.LBB389:
1844:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_2_1(svcMailCreate, osMailQId, const osMailQDef_t *, osThreadId,                   RET_pointer)
 4990              		.loc 1 1844 0
 4991              	@ 1844 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 4992 0024 DFF80CC0 		ldr r12,=svcMailCreate
 4993 0028 00DF     		svc 0
 4994              	@ 0 "" 2
 4995              		.thumb
 4996              	.LBE389:
 4997              	.LBE388:
1965:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {
1966:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __svcMailCreate(queue_def, thread_id);
 4998              		.loc 1 1966 0
 4999 002a 10BD     		pop	{r4, pc}
 5000              	.L408:
1961:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) return NULL;           // Not allowed in ISR
 5001              		.loc 1 1961 0
 5002 002c 4FF00000 		mov	r0, #0
1967:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1968:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5003              		.loc 1 1968 0
 5004 0030 10BD     		pop	{r4, pc}
 5005              		.cfi_endproc
 5006              	.LFE224:
 5008 0032 0000     		.section	.text.osMailAlloc,"ax",%progbits
 5009              		.align	2
 5010              		.global	osMailAlloc
 5011              		.thumb
 5012              		.thumb_func
 5014              	osMailAlloc:
 5015              	.LFB225:
1969:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1970:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Allocate a memory block from a mail
1971:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void *osMailAlloc (osMailQId queue_id, uint32_t millisec) {
 5016              		.loc 1 1971 0
 5017              		.cfi_startproc
 5018              		@ args = 0, pretend = 0, frame = 0
 5019              		@ frame_needed = 0, uses_anonymous_args = 0
 5020 0000 08B5     		push	{r3, lr}
 5021              	.LCFI83:
 5022              		.cfi_def_cfa_offset 8
 5023              		.cfi_offset 3, -8
 5024              		.cfi_offset 14, -4
 5025              	.LBB390:
 5026              	.LBB391:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 5027              		.loc 2 383 0
 5028              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 5029 0002 EFF30583 		MRS r3, ipsr
 5030              	@ 0 "" 2
 5031              		.thumb
 5032              	.LBE391:
 5033              	.LBE390:
1972:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 5034              		.loc 1 1972 0
 5035 0006 33B1     		cbz	r3, .L410
1973:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   sysMailAlloc(queue_id, millisec, 1, 0);
 5036              		.loc 1 1973 0
 5037 0008 4FF00102 		mov	r2, #1
 5038 000c 4FF00003 		mov	r3, #0
 5039 0010 FFF7FEFF 		bl	sysMailAlloc
 5040 0014 08BD     		pop	{r3, pc}
 5041              	.L410:
 5042              	.LBB392:
 5043              	.LBB393:
1845:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_4_1(sysMailAlloc,  void *,          osMailQId,      uint32_t, uint32_t, uint32_t, RET_pointer)
 5044              		.loc 1 1845 0
 5045 0016 4FF00002 		mov	r2, #0
 5046 001a 1346     		mov	r3, r2
 5047              	@ 1845 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 5048 001c DFF804C0 		ldr r12,=sysMailAlloc
 5049 0020 00DF     		svc 0
 5050              	@ 0 "" 2
 5051              		.thumb
 5052              	.LBE393:
 5053              	.LBE392:
1974:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1975:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __sysMailAlloc(queue_id, millisec, 0, 0);
1976:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1977:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5054              		.loc 1 1977 0
 5055 0022 08BD     		pop	{r3, pc}
 5056              		.cfi_endproc
 5057              	.LFE225:
 5059              		.section	.text.osMailCAlloc,"ax",%progbits
 5060              		.align	2
 5061              		.global	osMailCAlloc
 5062              		.thumb
 5063              		.thumb_func
 5065              	osMailCAlloc:
 5066              	.LFB226:
1978:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1979:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Allocate a memory block from a mail and set memory block to zero
1980:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void *osMailCAlloc (osMailQId queue_id, uint32_t millisec) {
 5067              		.loc 1 1980 0
 5068              		.cfi_startproc
 5069              		@ args = 0, pretend = 0, frame = 0
 5070              		@ frame_needed = 0, uses_anonymous_args = 0
 5071 0000 08B5     		push	{r3, lr}
 5072              	.LCFI84:
 5073              		.cfi_def_cfa_offset 8
 5074              		.cfi_offset 3, -8
 5075              		.cfi_offset 14, -4
 5076              	.LBB394:
 5077              	.LBB395:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 5078              		.loc 2 383 0
 5079              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 5080 0002 EFF30583 		MRS r3, ipsr
 5081              	@ 0 "" 2
 5082              		.thumb
 5083              	.LBE395:
 5084              	.LBE394:
1981:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 5085              		.loc 1 1981 0
 5086 0006 2BB1     		cbz	r3, .L413
1982:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   sysMailAlloc(queue_id, millisec, 1, 1);
 5087              		.loc 1 1982 0
 5088 0008 4FF00102 		mov	r2, #1
 5089 000c 1346     		mov	r3, r2
 5090 000e FFF7FEFF 		bl	sysMailAlloc
 5091 0012 08BD     		pop	{r3, pc}
 5092              	.L413:
 5093              	.LBB396:
 5094              	.LBB397:
1845:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_4_1(sysMailAlloc,  void *,          osMailQId,      uint32_t, uint32_t, uint32_t, RET_pointer)
 5095              		.loc 1 1845 0
 5096 0014 4FF00002 		mov	r2, #0
 5097 0018 4FF00103 		mov	r3, #1
 5098              	@ 1845 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 5099 001c DFF804C0 		ldr r12,=sysMailAlloc
 5100 0020 00DF     		svc 0
 5101              	@ 0 "" 2
 5102              		.thumb
 5103              	.LBE397:
 5104              	.LBE396:
1983:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1984:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __sysMailAlloc(queue_id, millisec, 0, 1);
1985:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1986:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5105              		.loc 1 1986 0
 5106 0022 08BD     		pop	{r3, pc}
 5107              		.cfi_endproc
 5108              	.LFE226:
 5110              		.section	.text.osMailFree,"ax",%progbits
 5111              		.align	2
 5112              		.global	osMailFree
 5113              		.thumb
 5114              		.thumb_func
 5116              	osMailFree:
 5117              	.LFB227:
1987:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1988:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Free a memory block from a mail
1989:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osMailFree (osMailQId queue_id, void *mail) {
 5118              		.loc 1 1989 0
 5119              		.cfi_startproc
 5120              		@ args = 0, pretend = 0, frame = 0
 5121              		@ frame_needed = 0, uses_anonymous_args = 0
 5122 0000 08B5     		push	{r3, lr}
 5123              	.LCFI85:
 5124              		.cfi_def_cfa_offset 8
 5125              		.cfi_offset 3, -8
 5126              		.cfi_offset 14, -4
 5127              	.LBB398:
 5128              	.LBB399:
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 5129              		.loc 2 383 0
 5130              	@ 383 "C:\DAVE-3.1.10\eclipse\/../CMSIS/Include/core_cmFunc.h" 1
 5131 0002 EFF30582 		MRS r2, ipsr
 5132              	@ 0 "" 2
 5133              		.thumb
 5134              	.LBE399:
 5135              	.LBE398:
1990:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (__get_IPSR() != 0) {                      // in ISR
 5136              		.loc 1 1990 0
 5137 0006 22B1     		cbz	r2, .L416
1991:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return   sysMailFree(queue_id, mail, 1);
 5138              		.loc 1 1991 0
 5139 0008 4FF00102 		mov	r2, #1
 5140 000c FFF7FEFF 		bl	sysMailFree
 5141 0010 08BD     		pop	{r3, pc}
 5142              	.L416:
 5143              	.LBB400:
 5144              	.LBB401:
1846:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_3_1(sysMailFree,   osStatus,        osMailQId,      void *,   uint32_t,           RET_osStatus)
 5145              		.loc 1 1846 0
 5146 0012 4FF00002 		mov	r2, #0
 5147              	@ 1846 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 5148 0016 DFF808C0 		ldr r12,=sysMailFree
 5149 001a 00DF     		svc 0
 5150              	@ 0 "" 2
 5151              		.thumb
 5152              	.LBE401:
 5153              	.LBE400:
1992:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   } else {                                      // in Thread
1993:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return __sysMailFree(queue_id, mail, 0);
1994:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
1995:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5154              		.loc 1 1995 0
 5155 001c 08BD     		pop	{r3, pc}
 5156              		.cfi_endproc
 5157              	.LFE227:
 5159 001e 0000     		.section	.text.osMailPut,"ax",%progbits
 5160              		.align	2
 5161              		.global	osMailPut
 5162              		.thumb
 5163              		.thumb_func
 5165              	osMailPut:
 5166              	.LFB228:
1996:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
1997:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Put a mail to a queue
1998:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** osStatus osMailPut (osMailQId queue_id, void *mail) {
 5167              		.loc 1 1998 0
 5168              		.cfi_startproc
 5169              		@ args = 0, pretend = 0, frame = 0
 5170              		@ frame_needed = 0, uses_anonymous_args = 0
 5171 0000 08B5     		push	{r3, lr}
 5172              	.LCFI86:
 5173              		.cfi_def_cfa_offset 8
 5174              		.cfi_offset 3, -8
 5175              		.cfi_offset 14, -4
1999:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return osErrorParameter;
 5176              		.loc 1 1999 0
 5177 0002 30B1     		cbz	r0, .L420
2000:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mail == NULL)     return osErrorValue;
 5178              		.loc 1 2000 0
 5179 0004 41B1     		cbz	r1, .L421
2001:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return osMessagePut(*((void **)queue_id), (uint32_t)mail, 0);
 5180              		.loc 1 2001 0
 5181 0006 0068     		ldr	r0, [r0, #0]
 5182 0008 4FF00002 		mov	r2, #0
 5183 000c FFF7FEFF 		bl	osMessagePut
 5184 0010 08BD     		pop	{r3, pc}
 5185              	.L420:
1999:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) return osErrorParameter;
 5186              		.loc 1 1999 0
 5187 0012 4FF08000 		mov	r0, #128
 5188 0016 08BD     		pop	{r3, pc}
 5189              	.L421:
2000:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (mail == NULL)     return osErrorValue;
 5190              		.loc 1 2000 0
 5191 0018 4FF08600 		mov	r0, #134
2002:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5192              		.loc 1 2002 0
 5193 001c 08BD     		pop	{r3, pc}
 5194              		.cfi_endproc
 5195              	.LFE228:
 5197 001e 00BF     		.section	.text.osMailGet,"ax",%progbits
 5198              		.align	2
 5199              		.global	osMailGet
 5200              		.thumb
 5201              		.thumb_func
 5203              	osMailGet:
 5204              	.LFB229:
2003:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2004:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Get a mail from a queue
2005:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** os_InRegs osEvent osMailGet (osMailQId queue_id, uint32_t millisec) {
 5205              		.loc 1 2005 0
 5206              		.cfi_startproc
 5207              		@ args = 0, pretend = 0, frame = 0
 5208              		@ frame_needed = 0, uses_anonymous_args = 0
 5209 0000 10B5     		push	{r4, lr}
 5210              	.LCFI87:
 5211              		.cfi_def_cfa_offset 8
 5212              		.cfi_offset 4, -8
 5213              		.cfi_offset 14, -4
 5214 0002 0446     		mov	r4, r0
2006:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   osEvent ret;
2007:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2008:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (queue_id == NULL) {
 5215              		.loc 1 2008 0
 5216 0004 19B9     		cbnz	r1, .L423
2009:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     ret.status = osErrorParameter;
2010:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****     return ret;
 5217              		.loc 1 2010 0
 5218 0006 4FF08003 		mov	r3, #128
 5219 000a 0360     		str	r3, [r0, #0]
 5220 000c 07E0     		b	.L422
 5221              	.L423:
2011:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   }
2012:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2013:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   ret = osMessageGet(*((void **)queue_id), millisec);
 5222              		.loc 1 2013 0
 5223 000e 0968     		ldr	r1, [r1, #0]
 5224 0010 FFF7FEFF 		bl	osMessageGet
 5225 0014 2368     		ldr	r3, [r4, #0]
 5226 0016 102B     		cmp	r3, #16
 5227 0018 08BF     		it	eq
 5228 001a 2023     		moveq	r3, #32
2014:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   if (ret.status == osEventMessage) ret.status = osEventMail;
2015:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2016:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return ret;
 5229              		.loc 1 2016 0
 5230 001c 2360     		str	r3, [r4, #0]
 5231              	.L422:
2017:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5232              		.loc 1 2017 0
 5233 001e 2046     		mov	r0, r4
 5234 0020 10BD     		pop	{r4, pc}
 5235              		.cfi_endproc
 5236              	.LFE229:
 5238 0022 00BF     		.section	.text.os_suspend,"ax",%progbits
 5239              		.align	2
 5240              		.global	os_suspend
 5241              		.thumb
 5242              		.thumb_func
 5244              	os_suspend:
 5245              	.LFB232:
2018:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2019:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2020:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** //  ==== RTX Extensions ====
2021:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2022:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Service Calls declarations
2023:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(rt_suspend, uint32_t, RET_uint32_t)
2024:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_0(rt_resume,  void,     uint32_t)
2025:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2026:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2027:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** // Public API
2028:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2029:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Suspends the OS task scheduler
2030:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** uint32_t os_suspend (void) {
 5246              		.loc 1 2030 0
 5247              		.cfi_startproc
 5248              		@ args = 0, pretend = 0, frame = 0
 5249              		@ frame_needed = 0, uses_anonymous_args = 0
 5250 0000 00B5     		push	{lr}
 5251              	.LCFI88:
 5252              		.cfi_def_cfa_offset 4
 5253              		.cfi_offset 14, -4
 5254              	.LBB402:
 5255              	.LBB403:
2023:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_0_1(rt_suspend, uint32_t, RET_uint32_t)
 5256              		.loc 1 2023 0
 5257              	@ 2023 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 5258 0002 DFF808C0 		ldr r12,=rt_suspend
 5259 0006 00DF     		svc 0
 5260              	@ 0 "" 2
 5261              		.thumb
 5262              	.LBE403:
 5263              	.LBE402:
2031:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c ****   return __rt_suspend();
2032:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** }
 5264              		.loc 1 2032 0
 5265 0008 5DF804FB 		ldr	pc, [sp], #4
 5266              		.cfi_endproc
 5267              	.LFE232:
 5269              		.section	.text.os_resume,"ax",%progbits
 5270              		.align	2
 5271              		.global	os_resume
 5272              		.thumb
 5273              		.thumb_func
 5275              	os_resume:
 5276              	.LFB233:
2033:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** 
2034:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** /// Resumes the OS task scheduler
2035:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** void os_resume (uint32_t sleep_time) {
 5277              		.loc 1 2035 0
 5278              		.cfi_startproc
 5279              		@ args = 0, pretend = 0, frame = 0
 5280              		@ frame_needed = 0, uses_anonymous_args = 0
 5281 0000 00B5     		push	{lr}
 5282              	.LCFI89:
 5283              		.cfi_def_cfa_offset 4
 5284              		.cfi_offset 14, -4
 5285              	.LBB404:
 5286              	.LBB405:
2024:../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c **** SVC_1_0(rt_resume,  void,     uint32_t)
 5287              		.loc 1 2024 0
 5288              	@ 2024 "../Dave/Generated/src/RTOS001/SRC/rt_CMSIS.c" 1
 5289 0002 DFF808C0 		ldr r12,=rt_resume
 5290 0006 00DF     		svc 0
 5291              	@ 0 "" 2
 5292              		.thumb
 5293 0008 5DF804FB 		ldr	pc, [sp], #4
 5294              	.LBE405:
 5295              	.LBE404:
 5296              		.cfi_endproc
 5297              	.LFE233:
 5299              		.text
 5300              	.Letext0:
 5301              		.file 4 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 5302              		.file 5 "../Dave/Generated/src/RTOS001/SRC/rt_TypeDef.h"
 5303              		.file 6 "../Dave/Generated/src/RTOS001/SRC/../INC/cmsis_os.h"
 5304              		.file 7 "../Dave/Generated/src/RTOS001/SRC/RTX_Config.h"
 5305              		.file 8 "../Dave/Generated/src/RTOS001/SRC/rt_Task.h"
 5306              		.file 9 "../Dave/Generated/src/RTOS001/SRC/rt_Time.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rt_CMSIS.c
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:20     .text.rt_ms2tick:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:24     .text.rt_ms2tick:00000000 rt_ms2tick
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:66     .text.rt_tid2ptcb:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:70     .text.rt_tid2ptcb:00000000 rt_tid2ptcb
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:103    .text.rt_id2obj:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:107    .text.rt_id2obj:00000000 rt_id2obj
                            *COM*:00000001 os_initialized
                            *COM*:00000001 os_running
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:127    .text.svcKernelInitialize:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:132    .text.svcKernelInitialize:00000000 svcKernelInitialize
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4131   .text.svcMessageCreate:00000000 svcMessageCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:720    .text.svcThreadCreate:00000000 svcThreadCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:210    .text.svcKernelStart:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:215    .text.svcKernelStart:00000000 svcKernelStart
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:286    .text.svcKernelRunning:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:291    .text.svcKernelRunning:00000000 svcKernelRunning
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:308    .text.svcKernelSysTick:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:313    .text.svcKernelSysTick:00000000 svcKernelSysTick
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:362    .text.osKernelInitialize:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:367    .text.osKernelInitialize:00000000 osKernelInitialize
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:426    .text.osKernelStart:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:431    .text.osKernelStart:00000000 osKernelStart
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:473    .text.osKernelStart:0000001c $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:477    .text.osKernelStart:00000020 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:605    .text.osKernelRunning:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:610    .text.osKernelRunning:00000000 osKernelRunning
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:667    .text.osKernelSysTick:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:672    .text.osKernelSysTick:00000000 osKernelSysTick
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:715    .text.svcThreadCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1369   .text.osThreadExit:00000000 osThreadExit
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:842    .text.svcThreadGetId:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:847    .text.svcThreadGetId:00000000 svcThreadGetId
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:877    .text.svcThreadTerminate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:882    .text.svcThreadTerminate:00000000 svcThreadTerminate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:941    .text.svcThreadYield:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:946    .text.svcThreadYield:00000000 svcThreadYield
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:966    .text.svcThreadSetPriority:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:971    .text.svcThreadSetPriority:00000000 svcThreadSetPriority
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1016   .text.svcThreadGetPriority:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1021   .text.svcThreadGetPriority:00000000 svcThreadGetPriority
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1052   .text.osThreadCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1057   .text.osThreadCreate:00000000 osThreadCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1121   .text.osThreadGetId:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1126   .text.osThreadGetId:00000000 osThreadGetId
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1169   .text.osThreadTerminate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1174   .text.osThreadTerminate:00000000 osThreadTerminate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1217   .text.osThreadYield:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1222   .text.osThreadYield:00000000 osThreadYield
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1265   .text.osThreadSetPriority:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1270   .text.osThreadSetPriority:00000000 osThreadSetPriority
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1313   .text.osThreadGetPriority:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1318   .text.osThreadGetPriority:00000000 osThreadGetPriority
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1364   .text.osThreadExit:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1406   .text.svcDelay:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1411   .text.svcDelay:00000000 svcDelay
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1440   .text.osDelay:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1445   .text.osDelay:00000000 osDelay
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1488   .text.osWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1493   .text.osWait:00000000 osWait
                            *COM*:00000004 os_timer_head
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1510   .text.rt_timer_insert:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1514   .text.rt_timer_insert:00000000 rt_timer_insert
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1598   .text.rt_timer_remove:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1602   .text.rt_timer_remove:00000000 rt_timer_remove
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1672   .text.svcTimerCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1677   .text.svcTimerCreate:00000000 svcTimerCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1748   .text.svcTimerStart:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1753   .text.svcTimerStart:00000000 svcTimerStart
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1824   .text.svcTimerStop:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1829   .text.svcTimerStop:00000000 svcTimerStop
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1872   .text.svcTimerDelete:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1877   .text.svcTimerDelete:00000000 svcTimerDelete
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1920   .text.svcTimerCall:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1925   .text.svcTimerCall:00000000 svcTimerCall
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1960   .text.sysTimerTick:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1965   .text.sysTimerTick:00000000 sysTimerTick
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4323   .text.isrMessagePut:00000000 isrMessagePut
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2040   .text.sysUserTimerWakeupTime:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2045   .text.sysUserTimerWakeupTime:00000000 sysUserTimerWakeupTime
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2069   .text.sysUserTimerUpdate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2074   .text.sysUserTimerUpdate:00000000 sysUserTimerUpdate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2143   .text.osTimerCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2148   .text.osTimerCreate:00000000 osTimerCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2212   .text.osTimerStart:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2217   .text.osTimerStart:00000000 osTimerStart
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2260   .text.osTimerStop:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2265   .text.osTimerStop:00000000 osTimerStop
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2308   .text.osTimerDelete:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2313   .text.osTimerDelete:00000000 osTimerDelete
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2356   .text.osTimerCall:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2361   .text.osTimerCall:00000000 osTimerCall
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2393   .text.osTimerThread:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2398   .text.osTimerThread:00000000 osTimerThread
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4568   .text.osMessageGet:00000000 osMessageGet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2441   .text.svcSignalSet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2446   .text.svcSignalSet:00000000 svcSignalSet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2491   .text.svcSignalClear:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2496   .text.svcSignalClear:00000000 svcSignalClear
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2541   .text.svcSignalWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2546   .text.svcSignalWait:00000000 svcSignalWait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2632   .text.isrSignalSet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2636   .text.isrSignalSet:00000000 isrSignalSet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2681   .text.osSignalSet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2686   .text.osSignalSet:00000000 osSignalSet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2728   .text.osSignalClear:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2733   .text.osSignalClear:00000000 osSignalClear
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2776   .text.osSignalWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2781   .text.osSignalWait:00000000 osSignalWait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2835   .text.svcMutexCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2840   .text.svcMutexCreate:00000000 svcMutexCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2880   .text.svcMutexWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2885   .text.svcMutexWait:00000000 svcMutexWait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2940   .text.svcMutexRelease:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2945   .text.svcMutexRelease:00000000 svcMutexRelease
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2985   .text.svcMutexDelete:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2990   .text.svcMutexDelete:00000000 svcMutexDelete
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3027   .text.osMutexCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3032   .text.osMutexCreate:00000000 osMutexCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3096   .text.osMutexWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3101   .text.osMutexWait:00000000 osMutexWait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3144   .text.osMutexRelease:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3149   .text.osMutexRelease:00000000 osMutexRelease
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3192   .text.osMutexDelete:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3197   .text.osMutexDelete:00000000 osMutexDelete
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3240   .text.svcSemaphoreCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3245   .text.svcSemaphoreCreate:00000000 svcSemaphoreCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3293   .text.svcSemaphoreWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3298   .text.svcSemaphoreWait:00000000 svcSemaphoreWait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3351   .text.svcSemaphoreRelease:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3356   .text.svcSemaphoreRelease:00000000 svcSemaphoreRelease
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3402   .text.svcSemaphoreDelete:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3407   .text.svcSemaphoreDelete:00000000 svcSemaphoreDelete
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3444   .text.isrSemaphoreRelease:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3448   .text.isrSemaphoreRelease:00000000 isrSemaphoreRelease
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3494   .text.osSemaphoreCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3499   .text.osSemaphoreCreate:00000000 osSemaphoreCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3563   .text.osSemaphoreWait:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3568   .text.osSemaphoreWait:00000000 osSemaphoreWait
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3611   .text.osSemaphoreRelease:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3616   .text.osSemaphoreRelease:00000000 osSemaphoreRelease
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3658   .text.osSemaphoreDelete:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3663   .text.osSemaphoreDelete:00000000 osSemaphoreDelete
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3706   .text.rt_clr_box:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3710   .text.rt_clr_box:00000000 rt_clr_box
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3736   .text.svcPoolCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3741   .text.svcPoolCreate:00000000 svcPoolCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3795   .text.sysPoolAlloc:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3800   .text.sysPoolAlloc:00000000 sysPoolAlloc
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3838   .text.sysPoolFree:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3843   .text.sysPoolFree:00000000 sysPoolFree
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3873   .text.osPoolCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3878   .text.osPoolCreate:00000000 osPoolCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3942   .text.osPoolAlloc:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3947   .text.osPoolAlloc:00000000 osPoolAlloc
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4004   .text.osPoolCAlloc:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4009   .text.osPoolCAlloc:00000000 osPoolCAlloc
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4066   .text.osPoolFree:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4071   .text.osPoolFree:00000000 osPoolFree
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4126   .text.svcMessageCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4184   .text.svcMessagePut:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4189   .text.svcMessagePut:00000000 svcMessagePut
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4244   .text.svcMessageGet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4249   .text.svcMessageGet:00000000 svcMessageGet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4319   .text.isrMessagePut:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4376   .text.isrMessageGet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4380   .text.isrMessageGet:00000000 isrMessageGet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4447   .text.osMessageCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4452   .text.osMessageCreate:00000000 osMessageCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4516   .text.osMessagePut:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4521   .text.osMessagePut:00000000 osMessagePut
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4563   .text.osMessageGet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4621   .text.svcMailCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4626   .text.svcMailCreate:00000000 svcMailCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4717   .text.sysMailAlloc:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4722   .text.sysMailAlloc:00000000 sysMailAlloc
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4829   .text.sysMailFree:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4834   .text.sysMailFree:00000000 sysMailFree
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4940   .text.osMailCreate:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4945   .text.osMailCreate:00000000 osMailCreate
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5009   .text.osMailAlloc:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5014   .text.osMailAlloc:00000000 osMailAlloc
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5060   .text.osMailCAlloc:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5065   .text.osMailCAlloc:00000000 osMailCAlloc
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5111   .text.osMailFree:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5116   .text.osMailFree:00000000 osMailFree
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5160   .text.osMailPut:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5165   .text.osMailPut:00000000 osMailPut
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5198   .text.osMailGet:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5203   .text.osMailGet:00000000 osMailGet
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5239   .text.os_suspend:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5244   .text.os_suspend:00000000 os_suspend
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5270   .text.os_resume:00000000 $t
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5275   .text.os_resume:00000000 os_resume
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5299   .text.os_resume:0000000c $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5269   .text.os_suspend:0000000c $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5159   .text.osMailFree:0000001e $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5110   .text.osMailCAlloc:00000024 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5059   .text.osMailAlloc:00000024 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:5008   .text.osMailCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4620   .text.osMessageGet:00000026 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4562   .text.osMessagePut:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4515   .text.osMessageCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4125   .text.osPoolFree:00000020 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4065   .text.osPoolCAlloc:00000028 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:4003   .text.osPoolAlloc:00000028 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3941   .text.osPoolCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3705   .text.osSemaphoreDelete:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3657   .text.osSemaphoreRelease:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3610   .text.osSemaphoreWait:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3562   .text.osSemaphoreCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3239   .text.osMutexDelete:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3191   .text.osMutexRelease:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3143   .text.osMutexWait:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:3095   .text.osMutexCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2834   .text.osSignalWait:00000028 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2775   .text.osSignalClear:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2727   .text.osSignalSet:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2392   .text.osTimerCall:00000014 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2355   .text.osTimerDelete:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2307   .text.osTimerStop:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2259   .text.osTimerStart:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:2211   .text.osTimerCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1487   .text.osDelay:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1405   .text.osThreadExit:00000010 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1363   .text.osThreadGetPriority:0000001a $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1312   .text.osThreadSetPriority:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1264   .text.osThreadYield:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1216   .text.osThreadTerminate:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1168   .text.osThreadGetId:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:1120   .text.osThreadCreate:00000032 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:714    .text.osKernelSysTick:00000016 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:666    .text.osKernelRunning:00000026 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:604    .text.osKernelStart:00000096 $d
C:\Users\LIUDAN~1\AppData\Local\Temp\cc1nDC1j.s:425    .text.osKernelInitialize:00000026 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.rt_TypeDef.h.79.db0d61ef3f79bbdae3d134fa36f08304
                           .group:00000000 wm4.RTX_Config.h.42.eb93c57b7f787c25a05db70c41047f1a
                           .group:00000000 wm4.rt_Task.h.38.ad357e63c89f04311a4b4ec53df91b63
                           .group:00000000 wm4.rt_List.h.38.eac26046fac8ea42e6920eca3c3ee440
                           .group:00000000 wm4.rt_MemBox.h.36.bed0d6bbd95e17b5f9057dfffad2dc95
                           .group:00000000 wm4.rt_HAL_CM.h.36.531af519683d77df9d264c8d6c8a6b22
                           .group:00000000 wm4.cmsis_os.h.131.c9c34dc8297264a3e18c36fd1cd4383c
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.cmsis_os.h.185.c5bf6edc2212781bbc023e70c59eddda

UNDEFINED SYMBOLS
os_clockrate
os_stack_sz
os_stack_mem
rt_init_mem
rt_sys_init
os_tsk
os_messageQ_def_osTimerMessageQ
osMessageQId_osTimerMessageQ
os_thread_def_osTimerThread
osThreadId_osTimerThread
rt_tsk_prio
rt_sys_start
os_tick_val
os_tick_ovf
os_time
os_trv
os_flags
rt_alloc_mem
rt_free_mem
os_active_TCB
rt_tsk_create
rt_tsk_self
rt_tsk_delete
rt_tsk_pass
rt_dly_wait
rt_evt_set
rt_evt_clr
rt_evt_wait
isr_evt_set
rt_mut_init
rt_mut_wait
rt_mut_release
rt_mut_delete
rt_sem_init
rt_sem_wait
rt_sem_send
rt_sem_delete
isr_sem_send
_init_box
rt_alloc_box
rt_free_box
rt_mbx_init
rt_mbx_send
rt_mbx_wait
rt_mbx_check
isr_mbx_send
isr_mbx_receive
rt_put_prio
rt_block
rt_psq_enq
rt_psh_req
rt_get_first
rt_ret_val
rt_rmv_dly
rt_dispatch
rt_suspend
rt_resume

<?xml version="1.0" encoding="ASCII"?>
<ResourceModel:App xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ResourceModel="http://www.infineon.com/Davex/Resource.ecore" name="UART002" description="UART002 App provides reentrant&#xA; Apis allowing multiple tasks to&#xA;share a USIC channel configured&#xA;in ASC mode.This DAVE App&#xA;requires RTOS001 App, a CMSIS&#xA;compliant RTOS App" descriptionURL="/doc/html/group___u_s_i_c___u_a_r_t_o_s___u_a_r_t002_app.html" URI="http://www.infineon.com/1.0.14/app/uart002/0">
  <provided xsi:type="ResourceModel:VirtualSignal" name="FIFO Transmit Buffer Interrupt" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_stbi_vs" requiredSignalResource="channel/standard_transmit_buffer_int" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="FIFO Receive Buffer Interrupt" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_srbi_vs" requiredSignalResource="channel/standard_receive_buffer_int" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="UART Rx Pin" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_rx_vs" requiredSignalResource="channel/dx0ins" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="UART Rx Pin timm" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_rx_vs_timm" requiredSignalResource="channel/dx3ins" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="UART Tx Pin" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_tx_vs" requiredSignalResource="channel/dout0" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Receive Pin" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_rxpin_vs" requiredSignalResource="uart_rxpin/pad" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Transmit Pin" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_txpin_vs" requiredSignalResource="uart_txpin/pad" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="FIFO Transmit Buffer Interrupt Node" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvic_nodestbi_vs" requiredSignalResource="nvicstbinode/signal_in" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="FIFO Receive Buffer Interrupt Node" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvic_nodesrbi_vs" requiredSignalResource="nvicsrbinode/signal_in" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:Parameter" name="Operation Mode" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_mode">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
    <toolTipHelpDescription>This is to select the Operation Mode</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Operation Mode" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var value = SCM.getIntValue(currentResource);&#xD;&#xA;        var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;        SCM.setIntValue(Res,value);    &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;        var value = SCM.getIntValue(Res);&#xD;&#xA;        SCM.setIntValue(currentResource,value);&#xD;&#xA;      }&#xD;&#xA;      " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwmode" downWardmappedList="//@consumed.1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Selects operation mode for UART</toolTipHelpDescription>
    <item name="Full Duplex" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }  &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwmode/0" downWardmappedList="//@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Full duplex mode selected.
 Independent pins are allocated
for each transfer direction</toolTipHelpDescription>
    </item>
    <item name="Half Duplex" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwmode/1" downWardmappedList="//@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Half Duplex mode selected. Single
pin for both transmission and reception.</toolTipHelpDescription>
    </item>
    <item name="Loop Back Mode" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;uart002_OprModeTemp&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 2 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwmode/2" downWardmappedList="//@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Loop Back mode selected.
 No Pins are allocated.
 Transmit pin of allocated USIC channel is connected to Receive pin of same channel internally</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="DMA operation mode" evalFunction="&#xD;&#xA;       &#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;       &#x9;&#x9;&#x9;{&#xD;&#xA;                &#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;        &#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;SCM.setIntValue(Res,value);    &#xD;&#xA;        &#x9;&#x9;&#x9;var dep = &quot;DependentApp&quot;;&#xD;&#xA;        &#x9;&#x9;&#x9;var rxRes = SCM.getResource(&quot;DMAapp0&quot;); &#xD;&#xA;        &#x9;&#x9;&#x9;SCM.setStringValue(rxRes,dep);&#xD;&#xA;        &#x9;&#x9;&#x9;var txRes = SCM.getResource(&quot;DMAapp1&quot;); &#xD;&#xA;          &#x9;&#x9;&#x9;SCM.setStringValue(txRes,dep);&#xD;&#xA;                }&#xD;&#xA;        &#x9;&#x9;function BackwardMapping()&#xD;&#xA;        &#x9;&#x9;{&#xD;&#xA;        &#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;        &#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;      &#x9;&#x9;&#x9;}&#xD;&#xA;      &#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwdmamode" downWardmappedList="//@consumed.2 //@consumed.8 //@consumed.9">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Option to select the
DMA operation mode.</toolTipHelpDescription>
    <item name="No DMA" evalFunction="&#xD;&#xA;            &#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{ &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);       &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(Res,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}  &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var dep = &quot;DependentApp&quot;;&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var rxRes = SCM.getResource(&quot;DMAapp0&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(rxRes,dep);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var txRes = SCM.getResource(&quot;DMAapp1&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(txRes,dep);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res5 = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res5,1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res6 = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res6,1); &#xD;&#xA;                            var Res7 = SCM.getResource(&quot;channel/tbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res7,1);&#xD;&#xA;                            var Res8 = SCM.getResource(&quot;channel/rbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res8,1);&#xD;&#xA;            &#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;); &#xD;&#xA;             &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value === 0 ) { &#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value == -1 ){&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;}       &#xD;&#xA;            &#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwdmamode/0" downWardmappedList="//@consumed.2 //@consumed.8 //@consumed.9 //@consumed.22 //@consumed.24 //@consumed.23 //@consumed.21" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Non DMA mode.
No DMA resouce is consumed</toolTipHelpDescription>
    </item>
    <item name="Receive with DMA" evalFunction="&#xD;&#xA;            &#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{ &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);       &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(Res,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}  &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var dep = &quot;DependentApp&quot;;&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var rxRes = SCM.getResource(&quot;DMAapp0&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(rxRes,dep);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var txRes = SCM.getResource(&quot;DMAapp1&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(txRes,dep);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;DMAapp1/DMA003_erwChannelHWSel&quot;); &#xD;&#xA;                            SCM.setIntValue(Res2,0);&#xD;&#xA;                            var Res3 = SCM.getResource(&quot;DMAapp1/DMA003_erwFlowControl&quot;); &#xD;&#xA;                            SCM.setIntValue(Res3,2);&#xD;&#xA;                            var Res4 = SCM.getResource(&quot;DMAapp1/DMA003_erwSrcIncrement&quot;); &#xD;&#xA;                            SCM.setIntValue(Res4,2);&#xD;&#xA;                            var Res9 = SCM.getResource(&quot;DMAapp1/DMA003_TransferInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res9,1);&#xD;&#xA;                            var Res10 = SCM.getResource(&quot;DMAapp1/DMA003_ErrorInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res10,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res5 = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res5,4);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res6 = SCM.getResource(&quot;channel/rbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res6,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res7 = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res7,1); &#xD;&#xA;                            var Res8 = SCM.getResource(&quot;channel/tbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res8,1);&#xD;&#xA;&#xD;&#xA;            &#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;); &#xD;&#xA;             &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value === 1 ) { &#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value == -1 ){&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;}       &#xD;&#xA;            &#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwdmamode/1" downWardmappedList="//@consumed.2 //@consumed.8 //@consumed.9 //@consumed.34 //@consumed.35 //@consumed.36 //@consumed.40 //@consumed.42 //@consumed.22 //@consumed.21 //@consumed.24 //@consumed.23" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Uart reception in DMA mode.
Transmisson using
interrupts routine.</toolTipHelpDescription>
    </item>
    <item name="Transmit with DMA" evalFunction="&#xD;&#xA;            &#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{ &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);       &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(Res,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}  &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var dep = &quot;DependentApp&quot;;&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var rxRes = SCM.getResource(&quot;DMAapp0&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(rxRes,dep);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var txRes = SCM.getResource(&quot;DMAapp1&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(txRes,dep);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;DMAapp0/DMA003_erwChannelHWSel&quot;); &#xD;&#xA;                            SCM.setIntValue(Res2,0);&#xD;&#xA;                            var Res3 = SCM.getResource(&quot;DMAapp0/DMA003_erwFlowControl&quot;); &#xD;&#xA;                            SCM.setIntValue(Res3,1);&#xD;&#xA;                            var Res4 = SCM.getResource(&quot;DMAapp0/DMA003_erwDstIncrement&quot;); &#xD;&#xA;                            SCM.setIntValue(Res4,2);&#xD;&#xA;                            var Res9 = SCM.getResource(&quot;DMAapp0/DMA003_TransferInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res9,1);&#xD;&#xA;                            var Res10 = SCM.getResource(&quot;DMAapp0/DMA003_ErrorInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res10,1);&#xD;&#xA;                            var Res5 = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res5,4);&#xD;&#xA;                            var Res6 = SCM.getResource(&quot;channel/tbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res6,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res7 = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res7,1);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res8 = SCM.getResource(&quot;channel/rbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res8,1);&#xD;&#xA;            &#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;); &#xD;&#xA;             &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value === 2 ) { &#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value == -1 ){&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;}       &#xD;&#xA;            &#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwdmamode/2" downWardmappedList="//@consumed.2 //@consumed.8 //@consumed.9 //@consumed.37 //@consumed.38 //@consumed.39 //@consumed.41 //@consumed.43 //@consumed.24 //@consumed.23 //@consumed.22 //@consumed.21" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Uart transmission in DMA mode.Reception of Data using
interrupts routine  </toolTipHelpDescription>
    </item>
    <item name="Transmit and Receive with DMA" evalFunction="&#xD;&#xA;            &#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{ &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,3);       &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(Res,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}  &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var dep = &quot;DependentApp&quot;;&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var rxRes = SCM.getResource(&quot;DMAapp0&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(rxRes,dep);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var txRes = SCM.getResource(&quot;DMAapp1&quot;); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;SCM.setStringValue(txRes,dep);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;DMAapp1/DMA003_erwChannelHWSel&quot;); &#xD;&#xA;                            SCM.setIntValue(Res2,0);&#xD;&#xA;                            var Res3 = SCM.getResource(&quot;DMAapp1/DMA003_erwFlowControl&quot;); &#xD;&#xA;                            SCM.setIntValue(Res3,2);&#xD;&#xA;                            var Res4 = SCM.getResource(&quot;DMAapp1/DMA003_erwSrcIncrement&quot;); &#xD;&#xA;                            SCM.setIntValue(Res4,2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res5 = SCM.getResource(&quot;DMAapp0/DMA003_erwChannelHWSel&quot;); &#xD;&#xA;                            SCM.setIntValue(Res5,0);&#xD;&#xA;                            var Res6 = SCM.getResource(&quot;DMAapp0/DMA003_erwFlowControl&quot;); &#xD;&#xA;                            SCM.setIntValue(Res6,1);&#xD;&#xA;                            var Res7 = SCM.getResource(&quot;DMAapp0/DMA003_erwDstIncrement&quot;); &#xD;&#xA;                            SCM.setIntValue(Res7,2);&#xD;&#xA;                            var Res8 = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res8,4);&#xD;&#xA;                            var Res9 = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                            SCM.setIntValue(Res9,4);&#xD;&#xA;                            var Res10 = SCM.getResource(&quot;channel/tbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res10,1);&#xD;&#xA;                            var Res11 = SCM.getResource(&quot;channel/tbctr/limit&quot;);&#xD;&#xA;                            SCM.setIntValue(Res11,1);&#xD;&#xA;                            var Res12 = SCM.getResource(&quot;DMAapp0/DMA003_TransferInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res12,1);&#xD;&#xA;                            var Res13 = SCM.getResource(&quot;DMAapp1/DMA003_TransferInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res13,1);&#xD;&#xA;                            var Res14 = SCM.getResource(&quot;DMAapp0/DMA003_ErrorInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res14,1);&#xD;&#xA;                            var Res14 = SCM.getResource(&quot;DMAapp1/DMA003_ErrorInterrupt&quot;); &#xD;&#xA;                            SCM.setIntValue(Res14,1);&#xD;&#xA;            &#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;            &#x9;&#x9;&#x9;{&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_DMAOprModeTemp&quot;); &#xD;&#xA;             &#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;if (value === 3 ) { &#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;} else if (value == -1 ){&#xD;&#xA;                &#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;               &#x9;&#x9;&#x9;&#x9; SCM.setIntValue(currentResource,0);&#xD;&#xA;              &#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;            &#x9;&#x9;&#x9;}       &#xD;&#xA;            &#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwdmamode/3" downWardmappedList="//@consumed.2 //@consumed.8 //@consumed.9 //@consumed.34 //@consumed.35 //@consumed.36 //@consumed.37 //@consumed.38 //@consumed.39 //@consumed.22 //@consumed.24 //@consumed.23 //@consumed.41 //@consumed.40 //@consumed.43 //@consumed.42" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Both transmission and
reception in DMA mode</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Parity Selection" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var value = SCM.getIntValue(currentResource);&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/ccr/pm&quot;);&#xD;&#xA;        SCM.setIntValue(Res,value);        &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/ccr/pm&quot;);&#xD;&#xA;        var value = SCM.getIntValue(Res);&#xD;&#xA;        SCM.setIntValue(currentResource,value);&#xD;&#xA;      }&#xD;&#xA;      " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwparity" downWardmappedList="//@consumed.18">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select the parity value
Note:This is the default selection.
Note:User cannot change the value at run time.</toolTipHelpDescription>
    <item name="No Parity" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/ccr/pm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/ccr/pm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwparity/0" downWardmappedList="//@consumed.18" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>The Parity generation is disabled</toolTipHelpDescription>
    </item>
    <item name="Odd Parity" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/ccr/pm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/ccr/pm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 3 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwparity/2" downWardmappedList="//@consumed.18" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Odd parity is selected
(parity bit = 0 on odd number of 1s in data, parity bit = 1 on even number of 1s in data).</toolTipHelpDescription>
    </item>
    <item name="Even Parity" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/ccr/pm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/ccr/pm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 2 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwparity/3" downWardmappedList="//@consumed.18" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Even Parity is selected.
(parity bit = 1 on odd number of 1s in data, parity bit = 0 on even number of 1s in data).</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Select the stop bit" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var value = SCM.getIntValue(currentResource);&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/pcr/stpb&quot;);&#xD;&#xA;        SCM.setIntValue(Res,value);        &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/pcr/stpb&quot;);&#xD;&#xA;        var value = SCM.getIntValue(Res);&#xD;&#xA;        SCM.setIntValue(currentResource,value);&#xD;&#xA;      }&#xD;&#xA;      " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwstopbit" downWardmappedList="//@consumed.19">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select the number of stop bits required in ASC frame.
Note:User cannot change the value at run time.</toolTipHelpDescription>
    <item name="One stop bit" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/pcr/stpb&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/pcr/stpb&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwstopbit/0" downWardmappedList="//@consumed.19" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Selects one stop bit</toolTipHelpDescription>
    </item>
    <item name="Two stop bits" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            { &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/pcr/stpb&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;channel/pcr/stpb&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }       &#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwstopbit/1" downWardmappedList="//@consumed.19" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Selects two stop bits</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Select desired Baud Rate(baud)" evalFunction="&#xD;&#xA;    function ForwardMapping()&#xD;&#xA;      { &#xD;&#xA;        var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;   &#x9;    if(XMC1xxx==0)&#xD;&#xA;&#x9;    {&#xD;&#xA;          var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;          var clock = SCM.getDoubleValue(Res1);&#xD;&#xA;&#x9;    }&#xD;&#xA;&#x9;    else&#xD;&#xA;&#x9;    {        &#xD;&#xA;          var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);&#xD;&#xA;          var clock = SCM.getIntValue(Res1);&#xD;&#xA;        }&#xD;&#xA;//        var pdiv = 0;&#xD;&#xA;        var Baud = SCM.getIntValue(currentResource);                          &#xD;&#xA;//        var ratio= ((clock * 1000000)/(17*1024*Baud))*500;&#xD;&#xA;//        if( ratio &lt;= 1)&#xD;&#xA;//        {&#xD;&#xA;//          pdiv = 0;&#xD;&#xA;//        }&#xD;&#xA;//        else {&#xD;&#xA;//        pdiv =  (Math.floor(ratio) -1);&#xD;&#xA;//        if( pdiv > 1023)&#xD;&#xA;//        {&#xD;&#xA;//           pdiv = 1023;&#xD;&#xA;//        }&#xD;&#xA;//        }&#xD;&#xA;//        var Res = SCM.getResource(&quot;channel/brg/pdiv&quot;);                     &#xD;&#xA;//        SCM.setIntValue(Res,pdiv);&#xD;&#xA;//        var step= Math.floor((Baud * 17 * 1024 * (1+ pdiv))/(clock * 1000000));&#xD;&#xA;//        if(step > 1023)&#xD;&#xA;//        {&#xD;&#xA;//          step = 1023;&#xD;&#xA;//        }&#xD;&#xA;//        var Resstep = SCM.getResource(&quot;channel/fdr/step&quot;); &#xD;&#xA;//        SCM.setIntValue(Resstep,step);&#xD;&#xA;//        var tempRes = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);&#xD;&#xA;//        SCM.setIntValue(tempRes,Baud);&#xD;&#xA;//        var Res2 = SCM.getResource(&quot;ioapp1/IO002_erwOutputMode&quot;); &#xD;&#xA;//        SCM.setIntValue(Res2,1);&#xD;&#xA;//        var Res3 = SCM.getResource(&quot;ioapp1/IO002_erwDefaultOutputLevel&quot;); &#xD;&#xA;//        SCM.setIntValue(Res3,1);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            var fdr_step = 0;&#xD;&#xA;            var brg_pdiv = 0;&#xD;&#xA;            var final_step = 0;&#xD;&#xA;            var final_pdiv;&#xD;&#xA;            var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;            var divisor_in = SCM.getIntValue(Res2);&#xD;&#xA;            var dctq = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;);&#xD;&#xA;            var dctq_value = SCM.getIntValue(dctq);&#xD;&#xA;            var resy = Math.floor((clock * 1000000)/(1024 * (dctq_value+1))); &#xD;&#xA;            var dividend_in = (resy); &#xD;&#xA;            var divisor = new Array();&#xD;&#xA;            var dividend = new Array();&#xD;&#xA;&#x9;        var remainder = new Array();&#xD;&#xA;&#x9;        var divisor_array = new Array();&#xD;&#xA;&#x9;        var dividend_array = new Array();&#xD;&#xA;&#x9;        var div_array = new Array();&#xD;&#xA;&#x9;        var frac, max;&#xD;&#xA;&#x9;        var loop_cnt = 0;&#xD;&#xA;            var swapped = 0;&#xD;&#xA;            var swap_temp_int=0;&#xD;&#xA;&#x9;        var array_count&#xD;&#xA;            var array_count_1 = 0;&#xD;&#xA;            var array_count_2 = 0;&#xD;&#xA;            var divisor1 = 0;&#xD;&#xA;            var divisor2 = 0;&#xD;&#xA;            var dividend1 = 0;&#xD;&#xA;            var dividend2 = 0;&#xD;&#xA;&#x9;        var div_factor = 0;&#xD;&#xA;&#x9;        var while_condition = 1;&#xD;&#xA;&#x9;        var temp1 = 0;&#xD;&#xA;            var temp2 = 0;&#xD;&#xA;            divisor[0] = 0;&#xD;&#xA;            divisor[1] = 0;&#xD;&#xA;            divisor[2] = 0;&#xD;&#xA;            divisor[3] = 0;&#xD;&#xA;            dividend[0] = 0;&#xD;&#xA;            dividend[1] = 0;&#xD;&#xA;            dividend[2] = 0;&#xD;&#xA;            dividend[3] = 0;&#xD;&#xA;            remainder[0] = 0;&#xD;&#xA;            remainder[1] = 0;&#xD;&#xA;            remainder[2] = 0;&#xD;&#xA;            remainder[3] = 0;&#xD;&#xA;            divisor_array[0] = 0;&#xD;&#xA;            divisor_array[1] = 0;&#xD;&#xA;            divisor_array[2] = 0;&#xD;&#xA;            divisor_array[3] = 0;&#xD;&#xA;            dividend_array[0] = 0;&#xD;&#xA;            dividend_array[1] = 0;&#xD;&#xA;            dividend_array[2] = 0;&#xD;&#xA;            dividend_array[3] = 0;&#xD;&#xA;            div_array[0] = 0;&#xD;&#xA;            div_array[1] = 0;&#xD;&#xA;            div_array[2] = 0;&#xD;&#xA;            div_array[3] = 0;&#xD;&#xA;&#x9;        div_factor =  divisor_in/ dividend_in;&#xD;&#xA;            if ( div_factor > 1)&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      max = 1024;&#xD;&#xA;&#x9;&#x9;      swapped = 1;&#xD;&#xA;&#x9;&#x9;      swap_temp = divisor_in;&#xD;&#xA;&#x9;&#x9;      divisor_in = dividend_in;&#xD;&#xA;&#x9;&#x9;      dividend_in = swap_temp;&#xD;&#xA;&#x9;        }&#xD;&#xA;&#x9;        else&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      swapped=0;&#xD;&#xA;&#x9;&#x9;      max=1024;&#xD;&#xA;&#x9;        }&#xD;&#xA;            loop_cnt=0;&#xD;&#xA;&#x9;        array_count=0;&#xD;&#xA;&#x9;        array_count_1 = 0;&#xD;&#xA;&#x9;        array_count_2 = 0;&#xD;&#xA;&#x9;        divisor[0]=divisor_in;&#xD;&#xA;&#x9;        remainder[0]=dividend_in;&#xD;&#xA;&#x9;        divisor_array[0]=1;&#xD;&#xA;&#x9;        dividend_array[0]=0;&#xD;&#xA;            do {&#xD;&#xA;&#x9;          loop_cnt = loop_cnt + 1;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count_2 = array_count_1; &#xD;&#xA;&#x9;&#x9;&#x9;  array_count_1 = array_count;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count = (loop_cnt % 4);&#xD;&#xA;&#x9;&#x9;&#x9;  dividend[array_count] = divisor[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  divisor[array_count] = remainder[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  div_array[array_count] = Math.floor(dividend[array_count]/divisor[array_count]);&#xD;&#xA;&#x9;&#x9;&#x9;  remainder[array_count] = (dividend[array_count] % divisor[array_count]);&#xD;&#xA;              &#xD;&#xA;              if (loop_cnt == 1) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor_array[1] = div_array[1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[1] = 1;&#xD;&#xA;&#x9;&#x9;&#x9;  }else {&#xD;&#xA;&#x9;&#x9;&#x9;  &#x9;divisor_array[array_count] = (div_array[array_count] * divisor_array[array_count_1]) + divisor_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[array_count] = (div_array[array_count] * dividend_array[array_count_1]) + dividend_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;              if (dividend_array[array_count] > max) &#xD;&#xA;&#x9;&#x9;&#x9;  {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor1 = divisor_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend1 = dividend_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;frac = Math.floor((max - dividend_array[array_count_2]) / dividend_array[array_count_1]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor2 = ((frac * divisor_array[array_count-1]) + divisor_array[array_count-2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend2 =  ((frac * dividend_array[array_count-1]) + dividend_array[array_count_2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;            swap_temp_int = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor1 = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend1 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp_int = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor2 = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend2 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;    &#x9;&#x9;&#x9;if (dividend1 == 0 || divisor1 == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;else if (dividend2 == 0 || divisor2 == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                else { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    temp1 = (div_factor - (divisor1 / dividend1));&#xD;&#xA;                    if(temp1 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   temp1 = (-temp1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;temp2 = (div_factor - (divisor2 / dividend2 ));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(temp2 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  temp2 = (-temp2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ( temp1 > temp2) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  while_condition = 5; &#xD;&#xA;              }&#xD;&#xA;              else if (remainder[array_count]==0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;fdr_step=divisor_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;brg_pdiv=dividend_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp = fdr_step;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = brg_pdiv;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = swap_temp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;while_condition = 5;&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;           }while(while_condition!=5);&#xD;&#xA;&#xD;&#xA;&#x9;        if(fdr_step >= 1024)&#xD;&#xA;&#x9;&#x9;    {&#xD;&#xA;    &#x9;&#x9;  fdr_step = 1023;&#xD;&#xA;&#x9;        } &#xD;&#xA;&#x9;        final_step = (fdr_step);&#xD;&#xA;&#xD;&#xA;&#x9;        final_pdiv = (brg_pdiv - 1);&#x9;&#xD;&#xA;&#xD;&#xA;            var calBaud = (clock*1000000*final_step)/((1+dctq_value)*1024*(1+final_pdiv));&#xD;&#xA;&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/brg/pdiv&quot;);                     &#xD;&#xA;        SCM.setIntValue(Res,final_pdiv);&#xD;&#xA;&#xD;&#xA;        var Resstep = SCM.getResource(&quot;channel/fdr/step&quot;); &#xD;&#xA;        SCM.setIntValue(Resstep,final_step);&#xD;&#xA;        var tempRes = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);&#xD;&#xA;        SCM.setIntValue(tempRes,Baud);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      }&#xD;&#xA;      function BackwardMapping()&#xD;&#xA;      {&#xD;&#xA;        var tempRes = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);&#xD;&#xA;        var value = SCM.getIntValue(tempRes);&#xD;&#xA;        SCM.setIntValue(currentResource,value);&#xD;&#xA;    }&#xD;&#xA;    " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwbaudrate" downWardmappedList="//@consumed.26 //@consumed.27 //@consumed.0" maxValue="1E8480" minValue="32">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="4B00"/>
    <localValue xsi:type="ResourceModel:StringValue" value="4b0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4b0"/>
    <toolTipHelpDescription>Select desired Baud Rate.
Note:User cannot change the value at run time.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Data bits" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var value = SCM.getIntValue(currentResource);&#xD;&#xA;          value = value - 1;&#xD;&#xA;          var Res = SCM.getResource(&quot;channel/sctr/wle&quot;);&#xD;&#xA;          SCM.setIntValue(Res,value);       &#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res1 = SCM.getResource(&quot;channel/sctr/wle&quot;);&#xD;&#xA;          var value = SCM.getIntValue(Res1);&#xD;&#xA;          value = value + 1;&#xD;&#xA;          SCM.setIntValue(currentResource,value);&#xD;&#xA;  &#xD;&#xA;        }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwdatabits" downWardmappedList="//@consumed.25" maxValue="8" minValue="5">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="8"/>
    <localValue xsi:type="ResourceModel:StringValue" value="8"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="8"/>
    <toolTipHelpDescription>This defines the data word length.
Note:User cannot change the value at run time.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Peripheral Clock" evalFunction="&#xD;&#xA;            function ForwardMapping(){&#xD;&#xA;                var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;   &#x9;            if(XMC1xxx==0)&#xD;&#xA;&#x9;            {&#xD;&#xA;                 var Res0 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                 var value0 = SCM.getDoubleValue(Res0);                   &#xD;&#xA;&#x9;            }&#xD;&#xA;&#x9;            else&#xD;&#xA;&#x9;&#x9;&#x9;    {              &#xD;&#xA;                 var Res0 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);   &#xD;&#xA;                 var value0 = SCM.getIntValue(Res0);&#xD;&#xA;                }                   &#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            function BackwardMapping(){  &#xD;&#xA;&#x9;             var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;&#x9;   &#x9;         if(XMC1xxx==0)&#xD;&#xA;&#x9;&#x9;         {&#xD;&#xA;&#x9;&#x9;           var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;&#x9;               var clock = SCM.getDoubleValue(Res1);  &#xD;&#xA;&#x9;               SCM.setDoubleValue(currentResource, clock);&#xD;&#xA;&#x9;&#x9;         }&#xD;&#xA;&#x9;&#x9;         else&#xD;&#xA;&#x9;&#x9;         {                     &#xD;&#xA;&#x9;               var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;); &#xD;&#xA;&#x9;               var clock = SCM.getIntValue(Res1);     &#xD;&#xA;&#x9;               SCM.setIntValue(currentResource, clock);&#xD;&#xA;                 }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_iroclock" maxValue="1C200" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <toolTipHelpDescription>Selected Resolution (non-editable)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Baud advanced Settings" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;Baud_Advanced_Settings_dummylevel&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource); &#xD;&#xA;              SCM.setIntValue(Res0,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;Baud_Advanced_Settings_dummylevel&quot;); &#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              SCM.setIntValue(currentResource,value0);&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.14/app/uart002/0/baud_advanced_settings" downWardmappedList="//@consumed.16" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <item name="Bit Oversampling rate (Time Quanta)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;Baud_Advanced_Settings_dummylevel&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource); &#xD;&#xA;              SCM.setIntValue(Res0,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;Baud_Advanced_Settings_dummylevel&quot;); &#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              SCM.setIntValue(currentResource,value0);&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.14/app/uart002/0/baud_advanced_settings/0" downWardmappedList="//@consumed.16" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Enable to enter time quanta for baud calculation</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Time Quanta (DCTQ)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource); &#xD;&#xA;              SCM.setIntValue(Res0,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;); &#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              SCM.setIntValue(currentResource,value0);&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.14/app/uart002/0/time_quanta" downWardmappedList="//@consumed.17" maxValue="1F" minValue="4">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="9"/>
    <localValue xsi:type="ResourceModel:StringValue" value="f"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="f"/>
    <toolTipHelpDescription>Selected Time Quanta</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Real Baud rate (baud)" evalFunction="&#xD;&#xA;            function ForwardMapping(){&#xD;&#xA;&#x9;          var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;   &#x9;          if(XMC1xxx==0)&#xD;&#xA;&#x9;          {&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                var value1 = SCM.getDoubleValue(Res1); &#xD;&#xA;&#x9;          }&#xD;&#xA;&#x9;          else&#xD;&#xA;&#x9;          {&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);&#xD;&#xA;                var value1 = SCM.getIntValue(Res1); &#xD;&#xA;              }&#xD;&#xA;              var Res0 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;              var value0 = SCM.getIntValue(Res0);     &#xD;&#xA; &#xD;&#xA;              var dctq = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;);&#xD;&#xA;              var dctq_value = SCM.getIntValue(dctq);      &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            function BackwardMapping(){&#xD;&#xA;&#x9;          var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;   &#x9;          if(XMC1xxx==0)&#xD;&#xA;&#x9;          {&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                var clock = SCM.getDoubleValue(Res1); &#xD;&#xA;&#x9;          }&#xD;&#xA;&#x9;          else&#xD;&#xA;&#x9;          {&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);                          &#xD;&#xA;                var clock = SCM.getIntValue(Res1);&#xD;&#xA;              }&#xD;&#xA;//            var pdiv = 0;&#xD;&#xA;//            var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;//            var Baud = SCM.getIntValue(Res2); &#xD;&#xA;//            var ratio= ((clock * 1000000)/(17*1024*Baud))*500;&#xD;&#xA;//            if( ratio &lt;= 1)&#xD;&#xA;//            {&#xD;&#xA;//              pdiv = 0;&#xD;&#xA;//            }&#xD;&#xA;//            else {&#xD;&#xA;//            pdiv =  (Math.floor(ratio) -1);&#xD;&#xA;//            if( pdiv > 1023)&#xD;&#xA;//            {&#xD;&#xA;//               pdiv = 1023;&#xD;&#xA;//            }&#xD;&#xA;//            }&#xD;&#xA;//            var step= Math.floor((Baud * 17 * 1024 * (1+ pdiv))/(clock * 1000000));&#xD;&#xA;//            if(step > 1023)&#xD;&#xA;//            {&#xD;&#xA;//              step = 1023;&#xD;&#xA;//            }&#xD;&#xA;&#xD;&#xA;            var fdr_step = 0;&#xD;&#xA;            var brg_pdiv = 0;&#xD;&#xA;            var final_step = 0;&#xD;&#xA;            var final_pdiv;&#xD;&#xA;            var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;            var divisor_in = SCM.getIntValue(Res2);&#xD;&#xA;            var dctq = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;);&#xD;&#xA;            var dctq_value = SCM.getIntValue(dctq);&#xD;&#xA;            var resy = Math.floor((clock * 1000000)/(1024 * (dctq_value+1))); &#xD;&#xA;            var dividend_in = (resy); &#xD;&#xA;            var divisor = new Array();&#xD;&#xA;            var dividend = new Array();&#xD;&#xA;&#x9;        var remainder = new Array();&#xD;&#xA;&#x9;        var divisor_array = new Array();&#xD;&#xA;&#x9;        var dividend_array = new Array();&#xD;&#xA;&#x9;        var div_array = new Array();&#xD;&#xA;&#x9;        var frac, max;&#xD;&#xA;&#x9;        var loop_cnt = 0;&#xD;&#xA;            var swapped = 0;&#xD;&#xA;            var swap_temp_int=0;&#xD;&#xA;&#x9;        var array_count&#xD;&#xA;            var array_count_1 = 0;&#xD;&#xA;            var array_count_2 = 0;&#xD;&#xA;            var divisor1 = 0;&#xD;&#xA;            var divisor2 = 0;&#xD;&#xA;            var dividend1 = 0;&#xD;&#xA;            var dividend2 = 0;&#xD;&#xA;&#x9;        var div_factor = 0;&#xD;&#xA;&#x9;        var while_condition = 1;&#xD;&#xA;&#x9;        var temp1 = 0;&#xD;&#xA;            var temp2 = 0;&#xD;&#xA;            divisor[0] = 0;&#xD;&#xA;            divisor[1] = 0;&#xD;&#xA;            divisor[2] = 0;&#xD;&#xA;            divisor[3] = 0;&#xD;&#xA;            dividend[0] = 0;&#xD;&#xA;            dividend[1] = 0;&#xD;&#xA;            dividend[2] = 0;&#xD;&#xA;            dividend[3] = 0;&#xD;&#xA;            remainder[0] = 0;&#xD;&#xA;            remainder[1] = 0;&#xD;&#xA;            remainder[2] = 0;&#xD;&#xA;            remainder[3] = 0;&#xD;&#xA;            divisor_array[0] = 0;&#xD;&#xA;            divisor_array[1] = 0;&#xD;&#xA;            divisor_array[2] = 0;&#xD;&#xA;            divisor_array[3] = 0;&#xD;&#xA;            dividend_array[0] = 0;&#xD;&#xA;            dividend_array[1] = 0;&#xD;&#xA;            dividend_array[2] = 0;&#xD;&#xA;            dividend_array[3] = 0;&#xD;&#xA;            div_array[0] = 0;&#xD;&#xA;            div_array[1] = 0;&#xD;&#xA;            div_array[2] = 0;&#xD;&#xA;            div_array[3] = 0;&#xD;&#xA;&#x9;        div_factor =  divisor_in/ dividend_in;&#xD;&#xA;            if ( div_factor > 1)&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      max = 1024;&#xD;&#xA;&#x9;&#x9;      swapped = 1;&#xD;&#xA;&#x9;&#x9;      swap_temp = divisor_in;&#xD;&#xA;&#x9;&#x9;      divisor_in = dividend_in;&#xD;&#xA;&#x9;&#x9;      dividend_in = swap_temp;&#xD;&#xA;&#x9;        }&#xD;&#xA;&#x9;        else&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      swapped=0;&#xD;&#xA;&#x9;&#x9;      max=1024;&#xD;&#xA;&#x9;        }&#xD;&#xA;            loop_cnt=0;&#xD;&#xA;&#x9;        array_count=0;&#xD;&#xA;&#x9;        array_count_1 = 0;&#xD;&#xA;&#x9;        array_count_2 = 0;&#xD;&#xA;&#x9;        divisor[0]=divisor_in;&#xD;&#xA;&#x9;        remainder[0]=dividend_in;&#xD;&#xA;&#x9;        divisor_array[0]=1;&#xD;&#xA;&#x9;        dividend_array[0]=0;&#xD;&#xA;            do {&#xD;&#xA;&#x9;          loop_cnt = loop_cnt + 1;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count_2 = array_count_1; &#xD;&#xA;&#x9;&#x9;&#x9;  array_count_1 = array_count;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count = (loop_cnt % 4);&#xD;&#xA;&#x9;&#x9;&#x9;  dividend[array_count] = divisor[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  divisor[array_count] = remainder[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  div_array[array_count] = Math.floor(dividend[array_count]/divisor[array_count]);&#xD;&#xA;&#x9;&#x9;&#x9;  remainder[array_count] = (dividend[array_count] % divisor[array_count]);&#xD;&#xA;              &#xD;&#xA;              if (loop_cnt == 1) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor_array[1] = div_array[1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[1] = 1;&#xD;&#xA;&#x9;&#x9;&#x9;  }else {&#xD;&#xA;&#x9;&#x9;&#x9;  &#x9;divisor_array[array_count] = (div_array[array_count] * divisor_array[array_count_1]) + divisor_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[array_count] = (div_array[array_count] * dividend_array[array_count_1]) + dividend_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;              if (dividend_array[array_count] > max) &#xD;&#xA;&#x9;&#x9;&#x9;  {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor1 = divisor_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend1 = dividend_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;frac = Math.floor((max - dividend_array[array_count_2]) / dividend_array[array_count_1]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor2 = ((frac * divisor_array[array_count-1]) + divisor_array[array_count-2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend2 =  ((frac * dividend_array[array_count-1]) + dividend_array[array_count_2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;            swap_temp_int = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor1 = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend1 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp_int = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor2 = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend2 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;    &#x9;&#x9;&#x9;if (dividend1 == 0 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;else if (dividend2 == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                else { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    temp1 = (div_factor - (divisor1 / dividend1));&#xD;&#xA;                    if(temp1 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   temp1 = (-temp1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;temp2 = (div_factor - (divisor2 / dividend2 ));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(temp2 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  temp2 = (-temp2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ( temp1 > temp2) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  while_condition = 5; &#xD;&#xA;              }&#xD;&#xA;              else if (remainder[array_count]==0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;fdr_step=divisor_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;brg_pdiv=dividend_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp = fdr_step;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = brg_pdiv;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = swap_temp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;while_condition = 5;&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;           }while(while_condition!=5);&#xD;&#xA;&#xD;&#xA;&#x9;        if(fdr_step >= 1024)&#xD;&#xA;&#x9;&#x9;    {&#xD;&#xA;    &#x9;&#x9;  fdr_step = 1023;&#xD;&#xA;&#x9;        } &#xD;&#xA;&#x9;        final_step = (fdr_step);&#xD;&#xA;&#xD;&#xA;&#x9;        final_pdiv = (brg_pdiv - 1);&#x9;&#xD;&#xA;&#xD;&#xA;            var calBaud = (clock*1000000*final_step)/((1+dctq_value)*1024*(1+final_pdiv));&#xD;&#xA;            &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//            var calBaud = (clock*1000000*step)/(17*1024*(1+pdiv));&#xD;&#xA;            SCM.setIntValue(currentResource, calBaud);&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irocalbaudrate" maxValue="1E8480" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4b0"/>
    <toolTipHelpDescription>Actual Baudrate</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Step Value (STEP)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#x9;&#xD;&#xA;                    var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;                    if(XMC1xxx==0)&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                       var value1 = SCM.getDoubleValue(Res1);&#xD;&#xA;&#x9;                }&#xD;&#xA;                    else&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   var value1 = SCM.getIntValue(Res1); &#xD;&#xA;     &#x9;            }&#xD;&#xA;                    var Res0 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;                    var value0 = SCM.getIntValue(Res0);                    &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;                    if(XMC1xxx==0)&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                       var clock = SCM.getDoubleValue(Res1);&#xD;&#xA;&#x9;                }&#xD;&#xA;                    else&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);                      &#x9;&#x9;&#xD;&#xA;                       var clock = SCM.getIntValue(Res1);&#xD;&#xA;     &#x9;            }&#xD;&#xA;&#xD;&#xA;                    &#xD;&#xA;                    &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;                    var BaudEntered = SCM.getIntValue(Res2); &#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = 0; &#xD;&#xA;//            &#x9;&#x9;var ratio= ((clock * 1000000)/(2*1024*BaudEntered))*500;&#xD;&#xA;//            &#x9;&#x9;if( ratio &lt;= 1)&#xD;&#xA;//            &#x9;&#x9;{&#xD;&#xA;//              &#x9;&#x9;&#x9;pdiv = 0;&#xD;&#xA;//            &#x9;&#x9;}&#xD;&#xA;//            &#x9;&#x9;else {&#xD;&#xA;//            &#x9;&#x9;&#x9;pdiv =  (Math.floor(ratio) -1);&#xD;&#xA;//            &#x9;&#x9;&#x9;if( pdiv > 1023)&#xD;&#xA;//            &#x9;&#x9;&#x9;{&#xD;&#xA;//               &#x9;&#x9;&#x9;&#x9;pdiv = 1023;&#xD;&#xA;//            &#x9;&#x9;&#x9;}&#xD;&#xA;//            &#x9;&#x9;}&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var step= Math.floor((BaudEntered * 2 * 1024 * (1+ pdiv))/(clock * 1000000));&#xD;&#xA;//            &#x9;&#x9;if(step > 1023)&#xD;&#xA;//            &#x9;&#x9;{&#xD;&#xA;//              &#x9;&#x9;&#x9;step = 1023;&#xD;&#xA;//            &#x9;&#x9;}&#xD;&#xA;                    var fdr_step = 0;&#xD;&#xA;            var brg_pdiv = 0;&#xD;&#xA;            var final_step = 0;&#xD;&#xA;            var final_pdiv;&#xD;&#xA;            var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;            var divisor_in = SCM.getIntValue(Res2);&#xD;&#xA;            var dctq = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;);&#xD;&#xA;            var dctq_value = SCM.getIntValue(dctq);&#xD;&#xA;            var resy = Math.floor((clock * 1000000)/(1024 * (dctq_value+1))); &#xD;&#xA;            var dividend_in = (resy); &#xD;&#xA;            var divisor = new Array();&#xD;&#xA;            var dividend = new Array();&#xD;&#xA;&#x9;        var remainder = new Array();&#xD;&#xA;&#x9;        var divisor_array = new Array();&#xD;&#xA;&#x9;        var dividend_array = new Array();&#xD;&#xA;&#x9;        var div_array = new Array();&#xD;&#xA;&#x9;        var frac, max;&#xD;&#xA;&#x9;        var loop_cnt = 0;&#xD;&#xA;            var swapped = 0;&#xD;&#xA;            var swap_temp_int=0;&#xD;&#xA;&#x9;        var array_count&#xD;&#xA;            var array_count_1 = 0;&#xD;&#xA;            var array_count_2 = 0;&#xD;&#xA;            var divisor1 = 0;&#xD;&#xA;            var divisor2 = 0;&#xD;&#xA;            var dividend1 = 0;&#xD;&#xA;            var dividend2 = 0;&#xD;&#xA;&#x9;        var div_factor = 0;&#xD;&#xA;&#x9;        var while_condition = 1;&#xD;&#xA;&#x9;        var temp1 = 0;&#xD;&#xA;            var temp2 = 0;&#xD;&#xA;            divisor[0] = 0;&#xD;&#xA;            divisor[1] = 0;&#xD;&#xA;            divisor[2] = 0;&#xD;&#xA;            divisor[3] = 0;&#xD;&#xA;            dividend[0] = 0;&#xD;&#xA;            dividend[1] = 0;&#xD;&#xA;            dividend[2] = 0;&#xD;&#xA;            dividend[3] = 0;&#xD;&#xA;            remainder[0] = 0;&#xD;&#xA;            remainder[1] = 0;&#xD;&#xA;            remainder[2] = 0;&#xD;&#xA;            remainder[3] = 0;&#xD;&#xA;            divisor_array[0] = 0;&#xD;&#xA;            divisor_array[1] = 0;&#xD;&#xA;            divisor_array[2] = 0;&#xD;&#xA;            divisor_array[3] = 0;&#xD;&#xA;            dividend_array[0] = 0;&#xD;&#xA;            dividend_array[1] = 0;&#xD;&#xA;            dividend_array[2] = 0;&#xD;&#xA;            dividend_array[3] = 0;&#xD;&#xA;            div_array[0] = 0;&#xD;&#xA;            div_array[1] = 0;&#xD;&#xA;            div_array[2] = 0;&#xD;&#xA;            div_array[3] = 0;&#xD;&#xA;&#x9;        div_factor =  divisor_in/ dividend_in;&#xD;&#xA;            if ( div_factor > 1)&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      max = 1024;&#xD;&#xA;&#x9;&#x9;      swapped = 1;&#xD;&#xA;&#x9;&#x9;      swap_temp = divisor_in;&#xD;&#xA;&#x9;&#x9;      divisor_in = dividend_in;&#xD;&#xA;&#x9;&#x9;      dividend_in = swap_temp;&#xD;&#xA;&#x9;        }&#xD;&#xA;&#x9;        else&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      swapped=0;&#xD;&#xA;&#x9;&#x9;      max=1024;&#xD;&#xA;&#x9;        }&#xD;&#xA;            loop_cnt=0;&#xD;&#xA;&#x9;        array_count=0;&#xD;&#xA;&#x9;        array_count_1 = 0;&#xD;&#xA;&#x9;        array_count_2 = 0;&#xD;&#xA;&#x9;        divisor[0]=divisor_in;&#xD;&#xA;&#x9;        remainder[0]=dividend_in;&#xD;&#xA;&#x9;        divisor_array[0]=1;&#xD;&#xA;&#x9;        dividend_array[0]=0;&#xD;&#xA;            do {&#xD;&#xA;&#x9;          loop_cnt = loop_cnt + 1;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count_2 = array_count_1; &#xD;&#xA;&#x9;&#x9;&#x9;  array_count_1 = array_count;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count = (loop_cnt % 4);&#xD;&#xA;&#x9;&#x9;&#x9;  dividend[array_count] = divisor[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  divisor[array_count] = remainder[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  div_array[array_count] = Math.floor(dividend[array_count]/divisor[array_count]);&#xD;&#xA;&#x9;&#x9;&#x9;  remainder[array_count] = (dividend[array_count] % divisor[array_count]);&#xD;&#xA;              &#xD;&#xA;              if (loop_cnt == 1) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor_array[1] = div_array[1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[1] = 1;&#xD;&#xA;&#x9;&#x9;&#x9;  }else {&#xD;&#xA;&#x9;&#x9;&#x9;  &#x9;divisor_array[array_count] = (div_array[array_count] * divisor_array[array_count_1]) + divisor_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[array_count] = (div_array[array_count] * dividend_array[array_count_1]) + dividend_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;              if (dividend_array[array_count] > max) &#xD;&#xA;&#x9;&#x9;&#x9;  {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor1 = divisor_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend1 = dividend_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;frac = Math.floor((max - dividend_array[array_count_2]) / dividend_array[array_count_1]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor2 = ((frac * divisor_array[array_count-1]) + divisor_array[array_count-2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend2 =  ((frac * dividend_array[array_count-1]) + dividend_array[array_count_2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;            swap_temp_int = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor1 = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend1 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp_int = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor2 = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend2 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;    &#x9;&#x9;&#x9;if (dividend1 == 0 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;else if (dividend2 == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                else { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    temp1 = (div_factor - (divisor1 / dividend1));&#xD;&#xA;                    if(temp1 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   temp1 = (-temp1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;temp2 = (div_factor - (divisor2 / dividend2 ));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(temp2 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  temp2 = (-temp2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ( temp1 > temp2) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  while_condition = 5; &#xD;&#xA;              }&#xD;&#xA;              else if (remainder[array_count]==0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;fdr_step=divisor_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;brg_pdiv=dividend_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp = fdr_step;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = brg_pdiv;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = swap_temp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;while_condition = 5;&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;           }while(while_condition!=5);&#xD;&#xA;&#xD;&#xA;&#x9;        if(fdr_step >= 1024)&#xD;&#xA;&#x9;&#x9;    {&#xD;&#xA;    &#x9;&#x9;  fdr_step = 1023;&#xD;&#xA;&#x9;        } &#xD;&#xA;&#x9;        final_step = (fdr_step);&#xD;&#xA;&#xD;&#xA;&#x9;        final_pdiv = (brg_pdiv - 1);&#x9;&#xD;&#xA;&#xD;&#xA;                    SCM.setIntValue(currentResource, final_step);&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_stepvalue" maxValue="400" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="9b"/>
    <toolTipHelpDescription>Step value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Divider Factor (PDIV)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;                    var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;                    if(XMC1xxx==0)&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                       var value1 = SCM.getDoubleValue(Res1);&#xD;&#xA;&#x9;                }&#xD;&#xA;                    else&#xD;&#xA;&#x9;                {&#xD;&#xA;                    &#x9;var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    var value1 = SCM.getIntValue(Res1); &#xD;&#xA;     &#x9;            } &#xD;&#xA;                    var Res0 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;                    var value0 = SCM.getIntValue(Res0);                    &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var XMC1xxx=SCM.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;                    if(XMC1xxx==0)&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp2/clk002_irMCLK&quot;);&#xD;&#xA;                       var clock = SCM.getDoubleValue(Res1);&#xD;&#xA;&#x9;                }&#xD;&#xA;                    else&#xD;&#xA;&#x9;                {&#xD;&#xA;                       var Res1 = SCM.getResource(&quot;clockapp/clk001_iroActualFreqPB&quot;);                      &#x9;&#x9;&#xD;&#xA;                       var clock = SCM.getIntValue(Res1);&#xD;&#xA;     &#x9;            } &#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;//                    var BaudEntered = SCM.getIntValue(Res2); &#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = 0; &#xD;&#xA;//            &#x9;&#x9;var ratio= ((clock * 1000000)/(2*1024*BaudEntered))*500;&#xD;&#xA;//            &#x9;&#x9;if( ratio &lt;= 1)&#xD;&#xA;//            &#x9;&#x9;{&#xD;&#xA;//              &#x9;&#x9;&#x9;pdiv = 0;&#xD;&#xA;//            &#x9;&#x9;}&#xD;&#xA;//            &#x9;&#x9;else {&#xD;&#xA;//            &#x9;&#x9;&#x9;pdiv =  (Math.floor(ratio) -1);&#xD;&#xA;//            &#x9;&#x9;&#x9;if( pdiv > 1023)&#xD;&#xA;//            &#x9;&#x9;&#x9;{&#xD;&#xA;//               &#x9;&#x9;&#x9;&#x9;pdiv = 1023;&#xD;&#xA;//            &#x9;&#x9;&#x9;}&#xD;&#xA;//            &#x9;&#x9;}&#xD;&#xA;                    var brg_pdiv = 0;&#xD;&#xA;            var final_step = 0;&#xD;&#xA;            var final_pdiv;&#xD;&#xA;            var Res2 = SCM.getResource(&quot;uart002_DesBaudrateTemp&quot;);   &#xD;&#xA;            var divisor_in = SCM.getIntValue(Res2);&#xD;&#xA;            var dctq = SCM.getResource(&quot;Time_Quanta_dummylevel&quot;);&#xD;&#xA;            var dctq_value = SCM.getIntValue(dctq);&#xD;&#xA;            var resy = Math.floor((clock * 1000000)/(1024 * (dctq_value+1))); &#xD;&#xA;            var dividend_in = (resy); &#xD;&#xA;            var divisor = new Array();&#xD;&#xA;            var dividend = new Array();&#xD;&#xA;&#x9;        var remainder = new Array();&#xD;&#xA;&#x9;        var divisor_array = new Array();&#xD;&#xA;&#x9;        var dividend_array = new Array();&#xD;&#xA;&#x9;        var div_array = new Array();&#xD;&#xA;&#x9;        var frac, max;&#xD;&#xA;&#x9;        var loop_cnt = 0;&#xD;&#xA;            var swapped = 0;&#xD;&#xA;            var swap_temp_int=0;&#xD;&#xA;&#x9;        var array_count&#xD;&#xA;            var array_count_1 = 0;&#xD;&#xA;            var array_count_2 = 0;&#xD;&#xA;            var divisor1 = 0;&#xD;&#xA;            var divisor2 = 0;&#xD;&#xA;            var dividend1 = 0;&#xD;&#xA;            var dividend2 = 0;&#xD;&#xA;&#x9;        var div_factor = 0;&#xD;&#xA;&#x9;        var while_condition = 1;&#xD;&#xA;&#x9;        var temp1 = 0;&#xD;&#xA;            var temp2 = 0;&#xD;&#xA;            divisor[0] = 0;&#xD;&#xA;            divisor[1] = 0;&#xD;&#xA;            divisor[2] = 0;&#xD;&#xA;            divisor[3] = 0;&#xD;&#xA;            dividend[0] = 0;&#xD;&#xA;            dividend[1] = 0;&#xD;&#xA;            dividend[2] = 0;&#xD;&#xA;            dividend[3] = 0;&#xD;&#xA;            remainder[0] = 0;&#xD;&#xA;            remainder[1] = 0;&#xD;&#xA;            remainder[2] = 0;&#xD;&#xA;            remainder[3] = 0;&#xD;&#xA;            divisor_array[0] = 0;&#xD;&#xA;            divisor_array[1] = 0;&#xD;&#xA;            divisor_array[2] = 0;&#xD;&#xA;            divisor_array[3] = 0;&#xD;&#xA;            dividend_array[0] = 0;&#xD;&#xA;            dividend_array[1] = 0;&#xD;&#xA;            dividend_array[2] = 0;&#xD;&#xA;            dividend_array[3] = 0;&#xD;&#xA;            div_array[0] = 0;&#xD;&#xA;            div_array[1] = 0;&#xD;&#xA;            div_array[2] = 0;&#xD;&#xA;            div_array[3] = 0;&#xD;&#xA;&#x9;        div_factor =  divisor_in/ dividend_in;&#xD;&#xA;            if ( div_factor > 1)&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      max = 1024;&#xD;&#xA;&#x9;&#x9;      swapped = 1;&#xD;&#xA;&#x9;&#x9;      swap_temp = divisor_in;&#xD;&#xA;&#x9;&#x9;      divisor_in = dividend_in;&#xD;&#xA;&#x9;&#x9;      dividend_in = swap_temp;&#xD;&#xA;&#x9;        }&#xD;&#xA;&#x9;        else&#xD;&#xA;&#x9;        {&#xD;&#xA;&#x9;&#x9;      swapped=0;&#xD;&#xA;&#x9;&#x9;      max=1024;&#xD;&#xA;&#x9;        }&#xD;&#xA;            loop_cnt=0;&#xD;&#xA;&#x9;        array_count=0;&#xD;&#xA;&#x9;        array_count_1 = 0;&#xD;&#xA;&#x9;        array_count_2 = 0;&#xD;&#xA;&#x9;        divisor[0]=divisor_in;&#xD;&#xA;&#x9;        remainder[0]=dividend_in;&#xD;&#xA;&#x9;        divisor_array[0]=1;&#xD;&#xA;&#x9;        dividend_array[0]=0;&#xD;&#xA;            do {&#xD;&#xA;&#x9;          loop_cnt = loop_cnt + 1;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count_2 = array_count_1; &#xD;&#xA;&#x9;&#x9;&#x9;  array_count_1 = array_count;&#xD;&#xA;&#x9;&#x9;&#x9;  array_count = (loop_cnt % 4);&#xD;&#xA;&#x9;&#x9;&#x9;  dividend[array_count] = divisor[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  divisor[array_count] = remainder[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;  div_array[array_count] = Math.floor(dividend[array_count]/divisor[array_count]);&#xD;&#xA;&#x9;&#x9;&#x9;  remainder[array_count] = (dividend[array_count] % divisor[array_count]);&#xD;&#xA;              &#xD;&#xA;              if (loop_cnt == 1) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor_array[1] = div_array[1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[1] = 1;&#xD;&#xA;&#x9;&#x9;&#x9;  }else {&#xD;&#xA;&#x9;&#x9;&#x9;  &#x9;divisor_array[array_count] = (div_array[array_count] * divisor_array[array_count_1]) + divisor_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend_array[array_count] = (div_array[array_count] * dividend_array[array_count_1]) + dividend_array[array_count_2];&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;              if (dividend_array[array_count] > max) &#xD;&#xA;&#x9;&#x9;&#x9;  {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor1 = divisor_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend1 = dividend_array[array_count_1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;frac = Math.floor((max - dividend_array[array_count_2]) / dividend_array[array_count_1]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;divisor2 = ((frac * divisor_array[array_count-1]) + divisor_array[array_count-2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dividend2 =  ((frac * dividend_array[array_count-1]) + dividend_array[array_count_2]);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;            swap_temp_int = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor1 = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend1 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp_int = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;divisor2 = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dividend2 = swap_temp_int;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;    &#x9;&#x9;&#x9;if (dividend1 == 0 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;else if (dividend2 == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                else { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    temp1 = (div_factor - (divisor1 / dividend1));&#xD;&#xA;                    if(temp1 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   temp1 = (-temp1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;temp2 = (div_factor - (divisor2 / dividend2 ));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(temp2 &lt; 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  temp2 = (-temp2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ( temp1 > temp2) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend2;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = divisor1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = dividend1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  while_condition = 5; &#xD;&#xA;              }&#xD;&#xA;              else if (remainder[array_count]==0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;fdr_step=divisor_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;brg_pdiv=dividend_array[array_count];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (swapped == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;swap_temp = fdr_step;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fdr_step = brg_pdiv;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;brg_pdiv = swap_temp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;while_condition = 5;&#xD;&#xA;&#x9;&#x9;&#x9;  }&#xD;&#xA;           }while(while_condition!=5);&#xD;&#xA;&#xD;&#xA;&#x9;        if(fdr_step >= 1024)&#xD;&#xA;&#x9;&#x9;    {&#xD;&#xA;    &#x9;&#x9;  fdr_step = 1023;&#xD;&#xA;&#x9;        } &#xD;&#xA;&#x9;        final_step = (fdr_step);&#xD;&#xA;&#xD;&#xA;&#x9;        final_pdiv = (brg_pdiv - 1);&#x9;&#xD;&#xA;                    SCM.setIntValue(currentResource, final_pdiv);&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_pdivvalue" maxValue="400" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3b1"/>
    <toolTipHelpDescription>PDIV value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Transmit FIFO size (bytes)" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var value = SCM.getIntValue(currentResource);&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;        SCM.setIntValue(Res,value);        &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;        var value = SCM.getIntValue(Res);&#xD;&#xA;        SCM.setIntValue(currentResource,value);&#xD;&#xA;      }&#xD;&#xA;      " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize" downWardmappedList="//@consumed.24">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <toolTipHelpDescription>This is to select the Transmit FIFO size.
This defines the number of FIFO entries
assigned to the transmit buffer</toolTipHelpDescription>
    <item name="2" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,1);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize/0" downWardmappedList="//@consumed.24" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Transmit FIFO size </toolTipHelpDescription>
    </item>
    <item name="4" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,2);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 2 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize/1" downWardmappedList="//@consumed.24" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Transmit FIFO size </toolTipHelpDescription>
    </item>
    <item name="8" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,3);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 3 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize/2" downWardmappedList="//@consumed.24" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Transmit FIFO size </toolTipHelpDescription>
    </item>
    <item name="16" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,4);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 4 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize/3" downWardmappedList="//@consumed.24" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>This is to select the Transmit FIFO size </toolTipHelpDescription>
    </item>
    <item name="32" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,5);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 5 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize/4" downWardmappedList="//@consumed.24" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Transmit FIFO size </toolTipHelpDescription>
    </item>
    <item name="64" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,6);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/tbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 6 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var FIFO_Rx = SCM.getResource(&quot;channel/rbctr_size&quot;);               &#xD;&#xA;                var FIFO_Rx_Value = SCM.getIntValue(FIFO_Rx);&#xD;&#xA;                if(FIFO_Rx_Value > 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var reserved = SCM.getReserverd();&#xD;&#xA;                    SCM.setValue(currentResource,reserved);&#xD;&#xA;                }&#xD;&#xA;&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifosize/5" downWardmappedList="//@consumed.24" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>This is to select the Transmit FIFO size </toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Receive FIFO size (bytes)" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var value = SCM.getIntValue(currentResource);&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;        SCM.setIntValue(Res,value);        &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;        var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;        var value = SCM.getIntValue(Res);&#xD;&#xA;        SCM.setIntValue(currentResource,value);&#xD;&#xA;      }" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize" downWardmappedList="//@consumed.22">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    <item name="2" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,1);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize/0" downWardmappedList="//@consumed.22" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    </item>
    <item name="4" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,2);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 2 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize/1" downWardmappedList="//@consumed.22" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    </item>
    <item name="8" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,3);       &#xD;&#xA;                } else if (value === 1) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 3 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize/2" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
      <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    </item>
    <item name="16" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,4);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 4 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize/3" downWardmappedList="//@consumed.22" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    </item>
    <item name="32" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,5);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 5 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize/4" downWardmappedList="//@consumed.22" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    </item>
    <item name="64" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,6);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;channel/rbctr_size&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 6 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var FIFO_Tx = SCM.getResource(&quot;channel/tbctr_size&quot;);               &#xD;&#xA;                var FIFO_Tx_Value = SCM.getIntValue(FIFO_Tx);&#xD;&#xA;                if(FIFO_Tx_Value > 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var reserved = SCM.getReserverd();&#xD;&#xA;                    SCM.setValue(currentResource,reserved);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifosize/5" downWardmappedList="//@consumed.22" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>This is to select the Receive FIFO size </toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:StringParameter" name="*Note" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;       }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;      }" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_notefifosize">
    <defaultValue xsi:type="ResourceModel:StringValue" value="The available channels of the USIC module share the 64 data word buffer."/>
    <localValue xsi:type="ResourceModel:StringValue" value="The available channels of the USIC module share the 64 data word buffer."/>
    <globalValue xsi:type="ResourceModel:StringValue" value="The available channels of the USIC module share the 64 data word buffer."/>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Transmit FIFO trigger limit" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;channel/tbctr/limit&quot;); &#xD;&#xA;          var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;          SCM.setIntValue(Res,Intvalue);&#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;channel/tbctr/limit&quot;); &#xD;&#xA;          var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;          SCM.setIntValue(currentResource,Intvalue);&#xD;&#xA;        }       " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwtxfifotrigger" downWardmappedList="//@consumed.23" maxValue="40" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Selects Transmit FIFO trigger limit
that is used for FIFO Standard
 transmit buffer event detection.
The FIFO Standard transmit buffer
 event occurs if the filling 
level of FIFO equals the limit value and 
gets lowered due to transmission
 of data word.
Note: Trigger limit should be less than
 FIFO size. Otherwise there can be an
 unpredictable behavior.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Receive FIFO trigger limit" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;channel/rbctr/limit&quot;); &#xD;&#xA;          var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;          SCM.setIntValue(Res,Intvalue);&#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;channel/rbctr/limit&quot;); &#xD;&#xA;          var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;          SCM.setIntValue(currentResource,Intvalue);&#xD;&#xA;        }       " URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwrxfifotrigger" downWardmappedList="//@consumed.21" maxValue="40" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Select receive FIFO trigger limit
that is used for FIFO Standard
receive buffer event detection.
The FIFO Standard receive buffer
 event occurs if the filling level
of FIFO equals the limit value and 
gets bigger due to reception of data word.
Note: Trigger limit should be less than FIFO
size. Otherwise there can be an unpredictable behavior.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Standard Transmit buffer Interrupt Premption Priority" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicstbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 2; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0x03; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue1 = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Intvalue = (Intvalue &amp; BitMask) | (Intvalue1 &lt;&lt; BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicstbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 2; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0xFC; &#xD;&#xA;&#x9;&#x9;&#x9;    SCM.setIntValue(currentResource,(Intvalue &amp; BitMask)>>BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwstbiinterruptpriority" downWardmappedList="//@consumed.32" maxValue="3F" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="3F"/>
    <localValue xsi:type="ResourceModel:StringValue" value="3F"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3f"/>
    <toolTipHelpDescription>Configure Interrupt Priority for Standard transmit buffer interrupt</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Timm Standard Transmit buffer Interrupt Premption Priority" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicstbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitShift = 6; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitMask = 0x3F; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue1 = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Intvalue = (Intvalue &amp; BitMask) | (Intvalue1 &lt;&lt; BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicstbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitShift = 6; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitMask = 0xC0; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,(Intvalue &amp; BitMask)>>BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_timmirwstinterruptpriority" downWardmappedList="//@consumed.32" maxValue="3" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <localValue xsi:type="ResourceModel:StringValue" value="3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <toolTipHelpDescription>Programmable priority level of 0-3 in steps of 64 for each interrupt node.
0  is equivalent to 0-63,
1 is equivalent to 64-127,
2 is equivalent to 128-191,
3 is least priority equivalent to 192</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Standard Transmit Buffer Interrupt Sub Priority" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicstbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 0; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0xFC; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue1 = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Intvalue = (Intvalue &amp; BitMask) | (Intvalue1 );&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicstbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 0; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0x03; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,(Intvalue &amp; BitMask));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwstbiinterruptsubpriority" downWardmappedList="//@consumed.32" maxValue="3" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Configure Interrupt Sub Priority for Standard transmit buffer interrupt</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Standard Receive buffer Interrupt Premption Priority" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicsrbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 2; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0x03; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue1 = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Intvalue = (Intvalue &amp; BitMask) | (Intvalue1 &lt;&lt; BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicsrbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 2; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0xFC; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,(Intvalue &amp; BitMask)>>BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwsrbiinterruptpriority" downWardmappedList="//@consumed.33" maxValue="3F" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="3F"/>
    <localValue xsi:type="ResourceModel:StringValue" value="3F"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3f"/>
    <toolTipHelpDescription>Configure Interrupt Priority for Standard receive buffer interrupt</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Timm Standard Receive buffer Interrupt Premption Priority" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicsrbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitShift = 6; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitMask = 0x3F; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue1 = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Intvalue = (Intvalue &amp; BitMask) | (Intvalue1 &lt;&lt; BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicsrbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitShift = 6; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var BitMask = 0xC0; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,(Intvalue &amp; BitMask)>>BitShift);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_timmirwsrinterruptpriority" downWardmappedList="//@consumed.33" maxValue="3" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <localValue xsi:type="ResourceModel:StringValue" value="3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <toolTipHelpDescription>Programmable priority level of 0-3 in steps of 64 for each interrupt node.
0  is equivalent to 0-63,
1 is equivalent to 64-127,
2 is equivalent to 128-191,
3 is least priority equivalent to 192</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Standard Receive Buffer Interrupt Sub Priority" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicsrbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 0; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0xFC; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue1 = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Intvalue = (Intvalue &amp; BitMask) | (Intvalue1 );&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;nvicsrbinode/ipr_pri&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitShift = 0; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;var BitMask = 0x03; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,(Intvalue &amp; BitMask));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_irwsrbiinterruptsubpriority" downWardmappedList="//@consumed.33" maxValue="3" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Configure Interrupt Sub Priority for Standard receive buffer interrupt</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Input characteristics" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar" downWardmappedList="//@consumed.15">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Input characteristics for Rx pin</toolTipHelpDescription>
    <item name="Tristate" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 0 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/0" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Pull down device" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/1" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Pull up device" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 2 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/2" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Continuous polling mode" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,3);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 3 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/3" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="InvertedTristate" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,4);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 4 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/4" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Inverted Pull down device" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,5);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 5 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/5" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Inverted Pull up device" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,6);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 6 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/6" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Inverted Continuous polling mode" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,7);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_inputchardummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 7 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwinputchar/7" downWardmappedList="//@consumed.15" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Pad Class" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwtxpadclass" downWardmappedList="//@consumed.14">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <toolTipHelpDescription>Select Pad class for Tx pin</toolTipHelpDescription>
    <item name="A1 (Speed Grade 6 MHz)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,4);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 0 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwtxpadclass/0" downWardmappedList="//@consumed.30 //@consumed.14" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad Class A1</toolTipHelpDescription>
    </item>
    <item name="A1+ (Speed Grade 25 MHz)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,4);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwtxpadclass/1" downWardmappedList="//@consumed.30 //@consumed.14" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad class A1+</toolTipHelpDescription>
    </item>
    <item name="A2 (Speed Grade 40/80 MHz)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,4);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 2) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwtxpadclass/2" downWardmappedList="//@consumed.30 //@consumed.14" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad class A2</toolTipHelpDescription>
    </item>
    <item name="Dont Care" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,3);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart002_txpadclassdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 3) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwtxpadclass/3" downWardmappedList="//@consumed.14" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>User is not concerned about Pad Driver strength</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Tx Driver Mode" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx" downWardmappedList="//@consumed.30">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Pad driver mode for Tx Pin</toolTipHelpDescription>
    <item name="Medium driver" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,4);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;                            var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(value1 >= 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 4 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx/0" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Medium driver is selected</toolTipHelpDescription>
    </item>
    <item name="Weak driver" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,7);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;                            var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(value1 >= 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 7 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx/1" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Weak driver is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Soft Edge" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(value1 >= 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  if (value === 2 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  } else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx/2" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Strong driver Soft Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Slow Edge" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;//0x02&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                            if(value1 == 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  if (value === 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  } else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx/3" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>Strong driver Slow Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Sharp Edge" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#x9;//0x00&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(value1 >= 2)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  if (value === 0 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  } else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx/4" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Strong driver Sharp Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Medium Edge" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,3);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;uart_txpin/pdr_pd&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;uart002_txpadclassdummy&quot;);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                            if(value1 == 2)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  if (value === 3) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  } else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;                            }else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_erwpaddrivermodetx/5" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>Strong driver Medium Edge is selected</toolTipHelpDescription>
    </item>
  </provided>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_desbaudratetemp" upWardMappingList="//@provided.14 //@provided.19 //@provided.20 //@provided.21" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="4b0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4b0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_oprmodetemp" upWardMappingList="//@provided.10 //@provided.10/@item.0 //@provided.10/@item.1 //@provided.10/@item.2" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_dmaoprmodetemp" upWardMappingList="//@provided.11 //@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;&#x9;&#x9;&#x9; var value = Solver.getSoftwareId();&#xD;&#xA;&#x9;&#x9;&#x9; if ((value == &quot;45.0.1&quot;)||(value == &quot;45.0.2&quot;)||(value == &quot;45.0.3&quot;)||(value == &quot;45.2.3&quot;)||(value == &quot;45.4.2&quot;)||(value == &quot;45.4.3&quot;)) &#xD;&#xA;&#x9;&#x9;&#x9; {&#xD;&#xA;&#x9;&#x9;         var constr = &quot;reserved([peripheral,usic,UU,channel,_],chres1) \n uri_element_range(UU,[0,1]) \n register_value(chres1,rbctr_size,-1) \n register_value(chres1,tbctr_size,-1)&quot;;&#xD;&#xA;&#x9;&#x9;         Solver.setConstraintString(constr);&#xD;&#xA;&#x9;&#x9;     } else {&#xD;&#xA;&#x9;&#x9;        var constr = &quot;reserved([peripheral,usic,UU,channel,_],chres1) \n uri_element_range(UU,[0,1,2]) \n register_value(chres1,rbctr_size,-1) \n register_value(chres1,tbctr_size,-1)&quot;;&#xD;&#xA;&#x9;&#x9;       Solver.setConstraintString(constr);&#xD;&#xA;&#x9;&#x9;     } &#xD;&#xA;&#x9;&#x9;&#x9; return true;&#xD;&#xA;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel" constraintType="GLOBAL_RESOURCE">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../USIC0/USIC0_0.dd#//@provided.0"/>
    <requiredResource uriString="peripheral/usic/0/channel/0" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = Solver.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if((value1  == 0 )) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  return false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.14/app/uart002/0/clockapp">
    <downWardmappedList xsi:type="ResourceModel:App" href="../../CLK001/1.0.42/clk001_0.app#/"/>
    <requiredResource uriString="app/clk001/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = Solver.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if((value1  == 0 )) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.14/app/uart002/0/clockapp2">
    <requiredResource uriString="app/clk002/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" name="UART Receive Pad" evalFunction="function resourceCondition() {&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 0) {&#xD;&#xA;                return true; &#xD;&#xA;              } &#xD;&#xA;              return false;&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart_rxpin">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../P5/P5_5.dd#//@provided.0"/>
    <requiredResource uriString="port/p/5/pad/0" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" name="UART Transmit Pad" evalFunction="function resourceCondition() {&#xD;&#xA;                  var XMC1xxx=Solver.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;); &#xD;&#xA;&#x9;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;&#x9;              var value = Solver.getIntValue(Res);&#xD;&#xA;&#x9;              if (value &lt;= 1) {       &#x9;&#x9;&#x9;&#x9; &#xD;&#xA;   &#x9;    &#x9;&#x9;&#x9;&#x9;if(XMC1xxx!=0)&#xD;&#xA;&#x9;    &#x9;&#x9;&#x9;&#x9;{  &#xD;&#xA;&#x9; &#x9;      &#x9;&#x9;&#x9;     var resa0 = Solver.getResource(&quot;uart002_erwTxPadClass/0&quot;);&#xD;&#xA;&#x9;&#x9;            &#x9;     var resa1 = Solver.getResource(&quot;uart002_erwTxPadClass/1&quot;);&#xD;&#xA;&#x9;&#x9;            &#x9;     var resa2 = Solver.getResource(&quot;uart002_erwTxPadClass/2&quot;);&#xD;&#xA;&#x9;&#x9;            &#x9;     var resa3 = Solver.getResource(&quot;uart002_erwTxPadClass/3&quot;);&#xD;&#xA;&#x9;&#x9;            &#x9;     var vala0 = Solver.getIntValue(resa0);&#xD;&#xA;&#x9;&#x9;            &#x9;     var vala1 = Solver.getIntValue(resa1);&#xD;&#xA;&#x9;&#x9;            &#x9;     var vala2 = Solver.getIntValue(resa2);&#xD;&#xA;&#x9;&#x9;            &#x9;     var vala3 = Solver.getIntValue(resa3);&#xD;&#xA;&#x9;&#x9;                     if (vala0 == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;constr=&quot;reserved([port,p,AA,pad,_],app_pin) \n rg_constraint_property_value(app_pin,speed_class of rg_property,'A1') &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; } else if (vala1 == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    constr=&quot;reserved([port,p,AA,pad,_],app_pin) \n rg_constraint_property_value(app_pin,speed_class of rg_property,'A1+')&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;     } else if (vala2 == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    constr=&quot;reserved([port,p,AA,pad,_],app_pin) \n rg_constraint_property_value(app_pin,speed_class of rg_property,'A2')&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;     } else if (vala3 == 1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    constr=&quot;reserved([port,p,AA,pad,_],app_pin)&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;     }&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;                    Solver.setConstraintString(constr);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;                return true; &#xD;&#xA;&#x9;              } &#xD;&#xA;&#x9;              return false;&#xD;&#xA;&#x9;        }" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart_txpin">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../P5/P5_5.dd#//@provided.3"/>
    <requiredResource uriString="port/p/5/pad/1" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if ((value == 2) || (value == 3)) {&#xD;&#xA;                return true; &#xD;&#xA;              } &#xD;&#xA;              return false;&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp0" upWardMappingList="//@provided.11 //@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.11/@item.3">
    <localValue xsi:type="ResourceModel:StringValue" value="DependentApp"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="DependentApp"/>
    <requiredResource uriString="app/dma003/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_DMAOprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if ((value == 1) || (value == 3)) {&#xD;&#xA;                return true; &#xD;&#xA;              } &#xD;&#xA;              return false;&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp1" upWardMappingList="//@provided.11 //@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.11/@item.3">
    <localValue xsi:type="ResourceModel:StringValue" value="DependentApp"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="DependentApp"/>
    <requiredResource uriString="app/dma003/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = Solver.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(value1  == 0 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  return false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.14/app/uart002/0/resetapp1">
    <downWardmappedList xsi:type="ResourceModel:App" href="../../RESET001/1.0.14/reset001_0.app#/"/>
    <requiredResource uriString="app/reset001/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/rtos001">
    <downWardmappedList xsi:type="ResourceModel:App" href="../../RTOS001/1.0.24/rtos001_0.app#/"/>
    <requiredResource uriString="app/rtos001/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvicstbinode">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../CPU/CPU_0.dd#//@provided.6"/>
    <requiredResource uriString="peripheral/cpu/0/nvic/interrupt/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvicsrbinode">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../CPU/CPU_0.dd#//@provided.9"/>
    <requiredResource uriString="peripheral/cpu/0/nvic/interrupt/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_txpadclassdummy" upWardMappingList="//@provided.34 //@provided.34/@item.0 //@provided.34/@item.1 //@provided.34/@item.2 //@provided.34/@item.3 //@provided.35/@item.0 //@provided.35/@item.1 //@provided.35/@item.2 //@provided.35/@item.3 //@provided.35/@item.4 //@provided.35/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart002_inputchardummy" upWardMappingList="//@provided.33 //@provided.33/@item.0 //@provided.33/@item.1 //@provided.33/@item.2 //@provided.33/@item.3 //@provided.33/@item.4 //@provided.33/@item.5 //@provided.33/@item.6 //@provided.33/@item.7" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/baud_advanced_settings_dummylevel" upWardMappingList="//@provided.17 //@provided.17/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/time_quanta_dummylevel" upWardMappingList="//@provided.14 //@provided.18 //@provided.19 //@provided.20 //@provided.21" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="f"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="f"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/ccr/pm" upWardMappingList="//@provided.12 //@provided.12/@item.0 //@provided.12/@item.1 //@provided.12/@item.2" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/pcr/stpb" upWardMappingList="//@provided.13 //@provided.13/@item.0 //@provided.13/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/ccr/brgien" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/rbctr/limit" upWardMappingList="//@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.26" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/rbctr_size" upWardMappingList="//@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.11/@item.3 //@provided.22/@item.5 //@provided.23 //@provided.23/@item.0 //@provided.23/@item.1 //@provided.23/@item.3 //@provided.23/@item.4 //@provided.23/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/tbctr/limit" upWardMappingList="//@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.11/@item.3 //@provided.25" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.5"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/tbctr_size" upWardMappingList="//@provided.11/@item.0 //@provided.11/@item.1 //@provided.11/@item.2 //@provided.11/@item.3 //@provided.22 //@provided.22/@item.0 //@provided.22/@item.1 //@provided.22/@item.2 //@provided.22/@item.3 //@provided.22/@item.4 //@provided.22/@item.5 //@provided.23/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.6"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/sctr/wle" upWardMappingList="//@provided.15" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="7"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.7"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="7"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/brg/pdiv" upWardMappingList="//@provided.14" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="fa"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.8"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="fa"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/fdr/step" upWardMappingList="//@provided.14" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="292"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../USIC0/USIC0_0.dd#//@provided.9"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="292"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/clockapp/clk001_iroactualfreqpb" upWardMappingList="//@provided.14 //@provided.16 //@provided.19 //@provided.20 //@provided.21" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <downWardmappedList xsi:type="ResourceModel:IntegerParameter" href="../../CLK001/1.0.42/clk001_0.app#//@provided.42"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/clockapp2/clk002_irmclk" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart_txpin/pdr_pd" upWardMappingList="//@provided.34/@item.0 //@provided.34/@item.1 //@provided.34/@item.2 //@provided.35 //@provided.35/@item.0 //@provided.35/@item.1 //@provided.35/@item.2 //@provided.35/@item.3 //@provided.35/@item.4 //@provided.35/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../P5/P5_5.dd#//@provided.4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart_rxpin/iocr_pcr" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../P5/P5_5.dd#//@provided.1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvicstbinode/ipr_pri" upWardMappingList="//@provided.27 //@provided.28 //@provided.29" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="fc"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CPU/CPU_0.dd#//@provided.7"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="fc"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvicsrbinode/ipr_pri" upWardMappingList="//@provided.30 //@provided.31 //@provided.32" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="fc"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CPU/CPU_0.dd#//@provided.10"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="fc"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp1/dma003_erwchannelhwsel" upWardMappingList="//@provided.11/@item.1 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp1/dma003_erwflowcontrol" upWardMappingList="//@provided.11/@item.1 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="2"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp1/dma003_erwsrcincrement" upWardMappingList="//@provided.11/@item.1 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="2"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp0/dma003_erwchannelhwsel" upWardMappingList="//@provided.11/@item.2 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp0/dma003_erwflowcontrol" upWardMappingList="//@provided.11/@item.2 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp0/dma003_erwdstincrement" upWardMappingList="//@provided.11/@item.2 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="2"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp1/dma003_transferinterrupt" upWardMappingList="//@provided.11/@item.1 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp0/dma003_transferinterrupt" upWardMappingList="//@provided.11/@item.2 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp1/dma003_errorinterrupt" upWardMappingList="//@provided.11/@item.1 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/dmaapp0/dma003_errorinterrupt" upWardMappingList="//@provided.11/@item.2 //@provided.11/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/dx3ins" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../USIC0/USIC0_0.dd#//@provided.10"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/standard_transmit_buffer_int" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../USIC0/USIC0_0.dd#//@provided.11"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvicsrbinode/signal_in" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CPU/CPU_0.dd#//@provided.11"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart_txpin/pad" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../P5/P5_5.dd#//@provided.5"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/dx0ins" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../USIC0/USIC0_0.dd#//@provided.12"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/uart_rxpin/pad" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../P5/P5_5.dd#//@provided.2"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/dout0" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../USIC0/USIC0_0.dd#//@provided.13"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/nvicstbinode/signal_in" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CPU/CPU_0.dd#//@provided.8"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.14/app/uart002/0/channel/standard_receive_buffer_int" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../USIC0/USIC0_0.dd#//@provided.14"/>
  </consumed>
  <propertyConstants name="uridevice" value="device/">
    <propertyConstants name="uriperi_uart002" value="peripheral/usic/">
      <propertyConstants name="uriPeri_nvic" value="peripheral/cpu/0/nvic/">
        <propertyConstants name="uri_clockapp" value="app/clk001/">
          <propertyConstants name="uri_clockapp2" value="app/clk002/">
            <propertyConstants name="uri_resetapp" value="app/reset001/">
              <propertyConstants name="uri_rtosapp" value="app/rtos001/">
                <propertyConstants name="uri_dmaapp" value="app/dma003/"/>
              </propertyConstants>
            </propertyConstants>
          </propertyConstants>
        </propertyConstants>
      </propertyConstants>
    </propertyConstants>
  </propertyConstants>
  <categoryDescription description="Peripheral Specific Apps" name="Peripheral Specific Apps">
    <subCategory description="Communication" name="Communication">
      <subCategory description="Universal Serial Interface Channel (USIC)" name="Universal Serial Interface Channel (USIC)"/>
    </subCategory>
  </categoryDescription>
  <categoryDescription description="Basic Applications" name="Basic Applications">
    <subCategory description="Communication" name="Communication">
      <subCategory description="UART" name="UART"/>
    </subCategory>
  </categoryDescription>
  <manifestInfo version="1.0.14">
    <keywords>UARTRTOS</keywords>
    <keywords>USIC</keywords>
    <keywords>RTOS</keywords>
    <keywords>Communication</keywords>
    <properties xsi:type="ResourceModel:AppProperties_1_0" initProvider="true" isIOApp="true"/>
  </manifestInfo>
  <datagenerate fileName="UART002.h" fileType="HFILE" templateFileName="UART002h.jet"/>
  <datagenerate fileName="Usic.h" fileType="HFILE" templateFileName="Usic.hdt" templateEngine="NONE" fileAction="COPY"/>
  <datagenerate fileName="UART002.c" templateFileName="UART002c.jet"/>
  <datagenerate fileName="UART002_Conf.c" templateFileName="UART002_Confc.jet"/>
  <datagenerate fileName="UART002_Conf.h" fileType="HFILE" templateFileName="UART002_Confh.jet"/>
  <connections sourceSignal="app/uart002/0/uart002_rxpin_vs" targetSignal="app/uart002/0/uart002_rx_vs" constraintFunction="&#xD;&#xA;          function resourceCondition(){&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 0 ) {&#xD;&#xA;              return true;&#xD;&#xA;              }&#xD;&#xA;              return false;&#xD;&#xA;          }&#xD;&#xA;        "/>
  <connections sourceSignal="app/uart002/0/uart002_tx_vs" targetSignal="app/uart002/0/uart002_txpin_vs"/>
  <connections sourceSignal="app/uart002/0/uart002_txpin_vs" targetSignal="app/uart002/0/uart002_rx_vs" constraintFunction="&#xD;&#xA;          function resourceCondition(){&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;              return true;&#xD;&#xA;              }&#xD;&#xA;              return false;&#xD;&#xA;          }&#xD;&#xA;        "/>
  <connections sourceSignal="app/uart002/0/uart002_tx_vs" targetSignal="app/uart002/0/uart002_rx_vs_timm" constraintFunction="&#xD;&#xA;          function resourceCondition(){&#xD;&#xA;           var XMC1xxx=Solver.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;);  &#xD;&#xA;   &#x9;       if(XMC1xxx==0)&#xD;&#xA;&#x9;       {&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 2 ) {&#xD;&#xA;              return true;&#xD;&#xA;              }&#xD;&#xA;           }&#xD;&#xA;              return false;&#xD;&#xA;          }&#xD;&#xA;        "/>
  <connections sourceSignal="app/uart002/0/uart002_rx_vs_timm" targetSignal="app/uart002/0/uart002_rx_vs" constraintFunction="&#xD;&#xA;          function resourceCondition(){&#xD;&#xA;           var XMC1xxx=Solver.getSoftwareId().substring(0,1).compareTo(&quot;1&quot;); &#xD;&#xA;   &#x9;       if(XMC1xxx==0)&#xD;&#xA;&#x9;       {&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 2 ) {&#xD;&#xA;              return true;&#xD;&#xA;              }&#xD;&#xA;           }&#xD;&#xA;              return false;&#xD;&#xA;          }&#xD;&#xA;        "/>
  <connections sourceSignal="app/uart002/0/uart002_tx_vs" targetSignal="app/uart002/0/uart002_rx_vs" constraintFunction="&#xD;&#xA;          function resourceCondition(){&#xD;&#xA;           var XMC4xxx=Solver.getSoftwareId().substring(0,1).compareTo(&quot;4&quot;); &#xD;&#xA;   &#x9;       if(XMC4xxx==0)&#xD;&#xA;&#x9;       {&#xD;&#xA;              var Res = Solver.getResource(&quot;uart002_OprModeTemp&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 2 ) {&#xD;&#xA;              return true;&#xD;&#xA;              }&#xD;&#xA;           }&#xD;&#xA;              return false;&#xD;&#xA;          }&#xD;&#xA;       &#x9;"/>
  <connections sourceSignal="app/uart002/0/uart002_stbi_vs" targetSignal="app/uart002/0/nvic_nodestbi_vs"/>
  <connections sourceSignal="app/uart002/0/uart002_srbi_vs" targetSignal="app/uart002/0/nvic_nodesrbi_vs"/>
  <connections sourceSignal="app/uart002/0/nvic_nodestbi_vs" targetSignal="DMAapp0/dlr_in_vs"/>
  <connections sourceSignal="app/uart002/0/nvic_nodesrbi_vs" targetSignal="DMAapp1/dlr_in_vs"/>
  <softwareIdList>45.0.1</softwareIdList>
  <softwareIdList>45.0.2</softwareIdList>
  <softwareIdList>45.0.3</softwareIdList>
  <softwareIdList>45.2.3</softwareIdList>
  <softwareIdList>45.4.2</softwareIdList>
  <softwareIdList>45.4.3</softwareIdList>
  <softwareIdList>45.0200.1</softwareIdList>
  <softwareIdList>45.0200.2</softwareIdList>
  <softwareIdList>45.0200.3</softwareIdList>
  <softwareIdList>45.0202.3</softwareIdList>
  <softwareIdList>45.0204.3</softwareIdList>
  <softwareIdList>45.0204.2</softwareIdList>
  <softwareIdList>44.0.3</softwareIdList>
  <softwareIdList>44.00.5</softwareIdList>
  <softwareIdList>44.02.3</softwareIdList>
  <softwareIdList>44.02.5</softwareIdList>
  <softwareIdList>42.00.5</softwareIdList>
  <softwareIdList>42.0.6</softwareIdList>
  <softwareIdList>42.04.5</softwareIdList>
  <softwareIdList>42.04.6</softwareIdList>
  <softwareIdList>11.0100.7</softwareIdList>
  <softwareIdList>11.0100.9</softwareIdList>
  <softwareIdList>12.0100.7</softwareIdList>
  <softwareIdList>13.0102.7</softwareIdList>
  <softwareIdList>12.0101.7</softwareIdList>
  <softwareIdList>12.0102.8</softwareIdList>
  <softwareIdList>12.0102.9</softwareIdList>
  <softwareIdList>13.0101.7</softwareIdList>
  <softwareIdList>13.0101.9</softwareIdList>
  <softwareIdList>42.0200.5</softwareIdList>
  <softwareIdList>42.0204.5</softwareIdList>
  <softwareIdList>42.0204.6</softwareIdList>
  <softwareIdList>42.0200.6</softwareIdList>
  <softwareIdList>42.0208.6</softwareIdList>
  <softwareIdList>44.0200.5</softwareIdList>
  <softwareIdList>44.0202.3</softwareIdList>
  <softwareIdList>44.0202.5</softwareIdList>
  <softwareIdList>44.0200.3</softwareIdList>
  <softwareIdList>45.0300.1</softwareIdList>
  <softwareIdList>45.0300.3</softwareIdList>
  <softwareIdList>45.0302.3</softwareIdList>
  <softwareIdList>45.0304.2</softwareIdList>
  <softwareIdList>45.0300.2</softwareIdList>
  <softwareIdList>45.0304.3</softwareIdList>
  <softwareIdList>11.0100.10</softwareIdList>
  <softwareIdList>11.0100.11</softwareIdList>
  <softwareIdList>12.0101.11</softwareIdList>
  <softwareIdList>12.0102.10</softwareIdList>
  <softwareIdList>12.0102.11</softwareIdList>
  <softwareIdList>13.0101.10</softwareIdList>
  <softwareIdList>13.0101.11</softwareIdList>
  <softwareIdList>13.0102.10</softwareIdList>
  <softwareIdList>13.0102.11</softwareIdList>
  <softwareIdList>13.0102.9</softwareIdList>
</ResourceModel:App>
